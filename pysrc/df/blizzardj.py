# --DO NOT INCLUDE--
from .commonj import *
bj_PI = 3.14159
bj_E = 2.71828
bj_CELLWIDTH = 128.0
bj_CLIFFHEIGHT = 128.0
bj_UNIT_FACING = 270.0
bj_RADTODEG = 180.0/bj_PI
bj_DEGTORAD = bj_PI/180.0
bj_TEXT_DELAY_QUEST = 20.00
bj_TEXT_DELAY_QUESTUPDATE = 20.00
bj_TEXT_DELAY_QUESTDONE = 20.00
bj_TEXT_DELAY_QUESTFAILED = 20.00
bj_TEXT_DELAY_QUESTREQUIREMENT = 20.00
bj_TEXT_DELAY_MISSIONFAILED = 20.00
bj_TEXT_DELAY_ALWAYSHINT = 12.00
bj_TEXT_DELAY_HINT = 12.00
bj_TEXT_DELAY_SECRET = 10.00
bj_TEXT_DELAY_UNITACQUIRED = 15.00
bj_TEXT_DELAY_UNITAVAILABLE = 10.00
bj_TEXT_DELAY_ITEMACQUIRED = 10.00
bj_TEXT_DELAY_WARNING = 12.00
bj_QUEUE_DELAY_QUEST = 5.00
bj_QUEUE_DELAY_HINT = 5.00
bj_QUEUE_DELAY_SECRET = 3.00
bj_HANDICAP_EASY = 60.00
bj_HANDICAPDAMAGE_EASY = 50.00
bj_HANDICAPREVIVE_NOTHARD = 50.00
bj_GAME_STARTED_THRESHOLD = 0.01
bj_WAIT_FOR_COND_MIN_INTERVAL = 0.10
bj_POLLED_WAIT_INTERVAL = 0.10
bj_POLLED_WAIT_SKIP_THRESHOLD = 2.00
bj_MAX_INVENTORY = 6
bj_MAX_PLAYERS = GetBJMaxPlayers()
bj_PLAYER_NEUTRAL_VICTIM = GetBJPlayerNeutralVictim()
bj_PLAYER_NEUTRAL_EXTRA = GetBJPlayerNeutralExtra()
bj_MAX_PLAYER_SLOTS = GetBJMaxPlayerSlots()
bj_MAX_SKELETONS = 25
bj_MAX_STOCK_ITEM_SLOTS = 11
bj_MAX_STOCK_UNIT_SLOTS = 11
bj_MAX_ITEM_LEVEL = 10
bj_MAX_CHECKPOINTS = 5
bj_TOD_DAWN = 6.00
bj_TOD_DUSK = 18.00
bj_MELEE_STARTING_TOD = 8.00
bj_MELEE_STARTING_GOLD_V0 = 750
bj_MELEE_STARTING_GOLD_V1 = 500
bj_MELEE_STARTING_LUMBER_V0 = 200
bj_MELEE_STARTING_LUMBER_V1 = 150
bj_MELEE_STARTING_HERO_TOKENS = 1
bj_MELEE_HERO_LIMIT = 3
bj_MELEE_HERO_TYPE_LIMIT = 1
bj_MELEE_MINE_SEARCH_RADIUS = 2000
bj_MELEE_CLEAR_UNITS_RADIUS = 1500
bj_MELEE_CRIPPLE_TIMEOUT = 120.00
bj_MELEE_CRIPPLE_MSG_DURATION = 20.00
bj_MELEE_MAX_TWINKED_HEROES_V0 = 3
bj_MELEE_MAX_TWINKED_HEROES_V1 = 1
bj_CREEP_ITEM_DELAY = 0.50
bj_STOCK_RESTOCK_INITIAL_DELAY = 120
bj_STOCK_RESTOCK_INTERVAL = 30
bj_STOCK_MAX_ITERATIONS = 20
bj_MAX_DEST_IN_REGION_EVENTS = 64
bj_CAMERA_MIN_FARZ = 100
bj_CAMERA_DEFAULT_DISTANCE = 1650
bj_CAMERA_DEFAULT_FARZ = 5000
bj_CAMERA_DEFAULT_AOA = 304
bj_CAMERA_DEFAULT_FOV = 70
bj_CAMERA_DEFAULT_ROLL = 0
bj_CAMERA_DEFAULT_ROTATION = 90
bj_RESCUE_PING_TIME = 2.00
bj_NOTHING_SOUND_DURATION = 5.00
bj_TRANSMISSION_PING_TIME = 1.00
bj_TRANSMISSION_IND_RED = 255
bj_TRANSMISSION_IND_BLUE = 255
bj_TRANSMISSION_IND_GREEN = 255
bj_TRANSMISSION_IND_ALPHA = 255
bj_TRANSMISSION_PORT_HANGTIME = 1.50
bj_CINEMODE_INTERFACEFADE = 0.50
bj_CINEMODE_GAMESPEED = MAP_SPEED_NORMAL
bj_CINEMODE_VOLUME_UNITMOVEMENT = 0.40
bj_CINEMODE_VOLUME_UNITSOUNDS = 0.00
bj_CINEMODE_VOLUME_COMBAT = 0.40
bj_CINEMODE_VOLUME_SPELLS = 0.40
bj_CINEMODE_VOLUME_UI = 0.00
bj_CINEMODE_VOLUME_MUSIC = 0.55
bj_CINEMODE_VOLUME_AMBIENTSOUNDS = 1.00
bj_CINEMODE_VOLUME_FIRE = 0.60
bj_SPEECH_VOLUME_UNITMOVEMENT = 0.25
bj_SPEECH_VOLUME_UNITSOUNDS = 0.00
bj_SPEECH_VOLUME_COMBAT = 0.25
bj_SPEECH_VOLUME_SPELLS = 0.25
bj_SPEECH_VOLUME_UI = 0.00
bj_SPEECH_VOLUME_MUSIC = 0.55
bj_SPEECH_VOLUME_AMBIENTSOUNDS = 1.00
bj_SPEECH_VOLUME_FIRE = 0.60
bj_SMARTPAN_TRESHOLD_PAN = 500
bj_SMARTPAN_TRESHOLD_SNAP = 3500
bj_MAX_QUEUED_TRIGGERS = 100
bj_QUEUED_TRIGGER_TIMEOUT = 180.00
bj_CAMPAIGN_INDEX_T = 0
bj_CAMPAIGN_INDEX_H = 1
bj_CAMPAIGN_INDEX_U = 2
bj_CAMPAIGN_INDEX_O = 3
bj_CAMPAIGN_INDEX_N = 4
bj_CAMPAIGN_INDEX_XN = 5
bj_CAMPAIGN_INDEX_XH = 6
bj_CAMPAIGN_INDEX_XU = 7
bj_CAMPAIGN_INDEX_XO = 8
bj_CAMPAIGN_OFFSET_T = 0
bj_CAMPAIGN_OFFSET_H = 1
bj_CAMPAIGN_OFFSET_U = 2
bj_CAMPAIGN_OFFSET_O = 3
bj_CAMPAIGN_OFFSET_N = 4
bj_CAMPAIGN_OFFSET_XN = 5
bj_CAMPAIGN_OFFSET_XH = 6
bj_CAMPAIGN_OFFSET_XU = 7
bj_CAMPAIGN_OFFSET_XO = 8
bj_MISSION_INDEX_T00 = bj_CAMPAIGN_OFFSET_T * 1000 + 0
bj_MISSION_INDEX_T01 = bj_CAMPAIGN_OFFSET_T * 1000 + 1
bj_MISSION_INDEX_T02 = bj_CAMPAIGN_OFFSET_T * 1000 + 2
bj_MISSION_INDEX_T03 = bj_CAMPAIGN_OFFSET_T * 1000 + 3
bj_MISSION_INDEX_T04 = bj_CAMPAIGN_OFFSET_T * 1000 + 4
bj_MISSION_INDEX_H00 = bj_CAMPAIGN_OFFSET_H * 1000 + 0
bj_MISSION_INDEX_H01 = bj_CAMPAIGN_OFFSET_H * 1000 + 1
bj_MISSION_INDEX_H02 = bj_CAMPAIGN_OFFSET_H * 1000 + 2
bj_MISSION_INDEX_H03 = bj_CAMPAIGN_OFFSET_H * 1000 + 3
bj_MISSION_INDEX_H04 = bj_CAMPAIGN_OFFSET_H * 1000 + 4
bj_MISSION_INDEX_H05 = bj_CAMPAIGN_OFFSET_H * 1000 + 5
bj_MISSION_INDEX_H06 = bj_CAMPAIGN_OFFSET_H * 1000 + 6
bj_MISSION_INDEX_H07 = bj_CAMPAIGN_OFFSET_H * 1000 + 7
bj_MISSION_INDEX_H08 = bj_CAMPAIGN_OFFSET_H * 1000 + 8
bj_MISSION_INDEX_H09 = bj_CAMPAIGN_OFFSET_H * 1000 + 9
bj_MISSION_INDEX_H10 = bj_CAMPAIGN_OFFSET_H * 1000 + 10
bj_MISSION_INDEX_H11 = bj_CAMPAIGN_OFFSET_H * 1000 + 11
bj_MISSION_INDEX_U00 = bj_CAMPAIGN_OFFSET_U * 1000 + 0
bj_MISSION_INDEX_U01 = bj_CAMPAIGN_OFFSET_U * 1000 + 1
bj_MISSION_INDEX_U02 = bj_CAMPAIGN_OFFSET_U * 1000 + 2
bj_MISSION_INDEX_U03 = bj_CAMPAIGN_OFFSET_U * 1000 + 3
bj_MISSION_INDEX_U05 = bj_CAMPAIGN_OFFSET_U * 1000 + 4
bj_MISSION_INDEX_U07 = bj_CAMPAIGN_OFFSET_U * 1000 + 5
bj_MISSION_INDEX_U08 = bj_CAMPAIGN_OFFSET_U * 1000 + 6
bj_MISSION_INDEX_U09 = bj_CAMPAIGN_OFFSET_U * 1000 + 7
bj_MISSION_INDEX_U10 = bj_CAMPAIGN_OFFSET_U * 1000 + 8
bj_MISSION_INDEX_U11 = bj_CAMPAIGN_OFFSET_U * 1000 + 9
bj_MISSION_INDEX_O00 = bj_CAMPAIGN_OFFSET_O * 1000 + 0
bj_MISSION_INDEX_O01 = bj_CAMPAIGN_OFFSET_O * 1000 + 1
bj_MISSION_INDEX_O02 = bj_CAMPAIGN_OFFSET_O * 1000 + 2
bj_MISSION_INDEX_O03 = bj_CAMPAIGN_OFFSET_O * 1000 + 3
bj_MISSION_INDEX_O04 = bj_CAMPAIGN_OFFSET_O * 1000 + 4
bj_MISSION_INDEX_O05 = bj_CAMPAIGN_OFFSET_O * 1000 + 5
bj_MISSION_INDEX_O06 = bj_CAMPAIGN_OFFSET_O * 1000 + 6
bj_MISSION_INDEX_O07 = bj_CAMPAIGN_OFFSET_O * 1000 + 7
bj_MISSION_INDEX_O08 = bj_CAMPAIGN_OFFSET_O * 1000 + 8
bj_MISSION_INDEX_O09 = bj_CAMPAIGN_OFFSET_O * 1000 + 9
bj_MISSION_INDEX_O10 = bj_CAMPAIGN_OFFSET_O * 1000 + 10
bj_MISSION_INDEX_N00 = bj_CAMPAIGN_OFFSET_N * 1000 + 0
bj_MISSION_INDEX_N01 = bj_CAMPAIGN_OFFSET_N * 1000 + 1
bj_MISSION_INDEX_N02 = bj_CAMPAIGN_OFFSET_N * 1000 + 2
bj_MISSION_INDEX_N03 = bj_CAMPAIGN_OFFSET_N * 1000 + 3
bj_MISSION_INDEX_N04 = bj_CAMPAIGN_OFFSET_N * 1000 + 4
bj_MISSION_INDEX_N05 = bj_CAMPAIGN_OFFSET_N * 1000 + 5
bj_MISSION_INDEX_N06 = bj_CAMPAIGN_OFFSET_N * 1000 + 6
bj_MISSION_INDEX_N07 = bj_CAMPAIGN_OFFSET_N * 1000 + 7
bj_MISSION_INDEX_N08 = bj_CAMPAIGN_OFFSET_N * 1000 + 8
bj_MISSION_INDEX_N09 = bj_CAMPAIGN_OFFSET_N * 1000 + 9
bj_MISSION_INDEX_XN00 = bj_CAMPAIGN_OFFSET_XN * 1000 + 0
bj_MISSION_INDEX_XN01 = bj_CAMPAIGN_OFFSET_XN * 1000 + 1
bj_MISSION_INDEX_XN02 = bj_CAMPAIGN_OFFSET_XN * 1000 + 2
bj_MISSION_INDEX_XN03 = bj_CAMPAIGN_OFFSET_XN * 1000 + 3
bj_MISSION_INDEX_XN04 = bj_CAMPAIGN_OFFSET_XN * 1000 + 4
bj_MISSION_INDEX_XN05 = bj_CAMPAIGN_OFFSET_XN * 1000 + 5
bj_MISSION_INDEX_XN06 = bj_CAMPAIGN_OFFSET_XN * 1000 + 6
bj_MISSION_INDEX_XN07 = bj_CAMPAIGN_OFFSET_XN * 1000 + 7
bj_MISSION_INDEX_XN08 = bj_CAMPAIGN_OFFSET_XN * 1000 + 8
bj_MISSION_INDEX_XN09 = bj_CAMPAIGN_OFFSET_XN * 1000 + 9
bj_MISSION_INDEX_XN10 = bj_CAMPAIGN_OFFSET_XN * 1000 + 10
bj_MISSION_INDEX_XH00 = bj_CAMPAIGN_OFFSET_XH * 1000 + 0
bj_MISSION_INDEX_XH01 = bj_CAMPAIGN_OFFSET_XH * 1000 + 1
bj_MISSION_INDEX_XH02 = bj_CAMPAIGN_OFFSET_XH * 1000 + 2
bj_MISSION_INDEX_XH03 = bj_CAMPAIGN_OFFSET_XH * 1000 + 3
bj_MISSION_INDEX_XH04 = bj_CAMPAIGN_OFFSET_XH * 1000 + 4
bj_MISSION_INDEX_XH05 = bj_CAMPAIGN_OFFSET_XH * 1000 + 5
bj_MISSION_INDEX_XH06 = bj_CAMPAIGN_OFFSET_XH * 1000 + 6
bj_MISSION_INDEX_XH07 = bj_CAMPAIGN_OFFSET_XH * 1000 + 7
bj_MISSION_INDEX_XH08 = bj_CAMPAIGN_OFFSET_XH * 1000 + 8
bj_MISSION_INDEX_XH09 = bj_CAMPAIGN_OFFSET_XH * 1000 + 9
bj_MISSION_INDEX_XU00 = bj_CAMPAIGN_OFFSET_XU * 1000 + 0
bj_MISSION_INDEX_XU01 = bj_CAMPAIGN_OFFSET_XU * 1000 + 1
bj_MISSION_INDEX_XU02 = bj_CAMPAIGN_OFFSET_XU * 1000 + 2
bj_MISSION_INDEX_XU03 = bj_CAMPAIGN_OFFSET_XU * 1000 + 3
bj_MISSION_INDEX_XU04 = bj_CAMPAIGN_OFFSET_XU * 1000 + 4
bj_MISSION_INDEX_XU05 = bj_CAMPAIGN_OFFSET_XU * 1000 + 5
bj_MISSION_INDEX_XU06 = bj_CAMPAIGN_OFFSET_XU * 1000 + 6
bj_MISSION_INDEX_XU07 = bj_CAMPAIGN_OFFSET_XU * 1000 + 7
bj_MISSION_INDEX_XU08 = bj_CAMPAIGN_OFFSET_XU * 1000 + 8
bj_MISSION_INDEX_XU09 = bj_CAMPAIGN_OFFSET_XU * 1000 + 9
bj_MISSION_INDEX_XU10 = bj_CAMPAIGN_OFFSET_XU * 1000 + 10
bj_MISSION_INDEX_XU11 = bj_CAMPAIGN_OFFSET_XU * 1000 + 11
bj_MISSION_INDEX_XU12 = bj_CAMPAIGN_OFFSET_XU * 1000 + 12
bj_MISSION_INDEX_XU13 = bj_CAMPAIGN_OFFSET_XU * 1000 + 13
bj_MISSION_INDEX_XO00 = bj_CAMPAIGN_OFFSET_XO * 1000 + 0
bj_MISSION_INDEX_XO01 = bj_CAMPAIGN_OFFSET_XO * 1000 + 1
bj_MISSION_INDEX_XO02 = bj_CAMPAIGN_OFFSET_XO * 1000 + 2
bj_MISSION_INDEX_XO03 = bj_CAMPAIGN_OFFSET_XO * 1000 + 3
bj_CINEMATICINDEX_TOP = 0
bj_CINEMATICINDEX_HOP = 1
bj_CINEMATICINDEX_HED = 2
bj_CINEMATICINDEX_OOP = 3
bj_CINEMATICINDEX_OED = 4
bj_CINEMATICINDEX_UOP = 5
bj_CINEMATICINDEX_UED = 6
bj_CINEMATICINDEX_NOP = 7
bj_CINEMATICINDEX_NED = 8
bj_CINEMATICINDEX_XOP = 9
bj_CINEMATICINDEX_XED = 10
bj_ALLIANCE_UNALLIED = 0
bj_ALLIANCE_UNALLIED_VISION = 1
bj_ALLIANCE_ALLIED = 2
bj_ALLIANCE_ALLIED_VISION = 3
bj_ALLIANCE_ALLIED_UNITS = 4
bj_ALLIANCE_ALLIED_ADVUNITS = 5
bj_ALLIANCE_NEUTRAL = 6
bj_ALLIANCE_NEUTRAL_VISION = 7
bj_KEYEVENTTYPE_DEPRESS = 0
bj_KEYEVENTTYPE_RELEASE = 1
bj_KEYEVENTKEY_LEFT = 0
bj_KEYEVENTKEY_RIGHT = 1
bj_KEYEVENTKEY_DOWN = 2
bj_KEYEVENTKEY_UP = 3
bj_MOUSEEVENTTYPE_DOWN = 0
bj_MOUSEEVENTTYPE_UP = 1
bj_MOUSEEVENTTYPE_MOVE = 2
bj_TIMETYPE_ADD = 0
bj_TIMETYPE_SET = 1
bj_TIMETYPE_SUB = 2
bj_CAMERABOUNDS_ADJUST_ADD = 0
bj_CAMERABOUNDS_ADJUST_SUB = 1
bj_QUESTTYPE_REQ_DISCOVERED = 0
bj_QUESTTYPE_REQ_UNDISCOVERED = 1
bj_QUESTTYPE_OPT_DISCOVERED = 2
bj_QUESTTYPE_OPT_UNDISCOVERED = 3
bj_QUESTMESSAGE_DISCOVERED = 0
bj_QUESTMESSAGE_UPDATED = 1
bj_QUESTMESSAGE_COMPLETED = 2
bj_QUESTMESSAGE_FAILED = 3
bj_QUESTMESSAGE_REQUIREMENT = 4
bj_QUESTMESSAGE_MISSIONFAILED = 5
bj_QUESTMESSAGE_ALWAYSHINT = 6
bj_QUESTMESSAGE_HINT = 7
bj_QUESTMESSAGE_SECRET = 8
bj_QUESTMESSAGE_UNITACQUIRED = 9
bj_QUESTMESSAGE_UNITAVAILABLE = 10
bj_QUESTMESSAGE_ITEMACQUIRED = 11
bj_QUESTMESSAGE_WARNING = 12
bj_SORTTYPE_SORTBYVALUE = 0
bj_SORTTYPE_SORTBYPLAYER = 1
bj_SORTTYPE_SORTBYLABEL = 2
bj_CINEFADETYPE_FADEIN = 0
bj_CINEFADETYPE_FADEOUT = 1
bj_CINEFADETYPE_FADEOUTIN = 2
bj_REMOVEBUFFS_POSITIVE = 0
bj_REMOVEBUFFS_NEGATIVE = 1
bj_REMOVEBUFFS_ALL = 2
bj_REMOVEBUFFS_NONTLIFE = 3
bj_BUFF_POLARITY_POSITIVE = 0
bj_BUFF_POLARITY_NEGATIVE = 1
bj_BUFF_POLARITY_EITHER = 2
bj_BUFF_RESIST_MAGIC = 0
bj_BUFF_RESIST_PHYSICAL = 1
bj_BUFF_RESIST_EITHER = 2
bj_BUFF_RESIST_BOTH = 3
bj_HEROSTAT_STR = 0
bj_HEROSTAT_AGI = 1
bj_HEROSTAT_INT = 2
bj_MODIFYMETHOD_ADD = 0
bj_MODIFYMETHOD_SUB = 1
bj_MODIFYMETHOD_SET = 2
bj_UNIT_STATE_METHOD_ABSOLUTE = 0
bj_UNIT_STATE_METHOD_RELATIVE = 1
bj_UNIT_STATE_METHOD_DEFAULTS = 2
bj_UNIT_STATE_METHOD_MAXIMUM = 3
bj_GATEOPERATION_CLOSE = 0
bj_GATEOPERATION_OPEN = 1
bj_GATEOPERATION_DESTROY = 2
bj_GAMECACHE_BOOLEAN = 0
bj_GAMECACHE_INTEGER = 1
bj_GAMECACHE_REAL = 2
bj_GAMECACHE_UNIT = 3
bj_GAMECACHE_STRING = 4
bj_HASHTABLE_BOOLEAN = 0
bj_HASHTABLE_INTEGER = 1
bj_HASHTABLE_REAL = 2
bj_HASHTABLE_STRING = 3
bj_HASHTABLE_HANDLE = 4
bj_ITEM_STATUS_HIDDEN = 0
bj_ITEM_STATUS_OWNED = 1
bj_ITEM_STATUS_INVULNERABLE = 2
bj_ITEM_STATUS_POWERUP = 3
bj_ITEM_STATUS_SELLABLE = 4
bj_ITEM_STATUS_PAWNABLE = 5
bj_ITEMCODE_STATUS_POWERUP = 0
bj_ITEMCODE_STATUS_SELLABLE = 1
bj_ITEMCODE_STATUS_PAWNABLE = 2
bj_MINIMAPPINGSTYLE_SIMPLE = 0
bj_MINIMAPPINGSTYLE_FLASHY = 1
bj_MINIMAPPINGSTYLE_ATTACK = 2
bj_CAMPPINGSTYLE_PRIMARY = 0
bj_CAMPPINGSTYLE_BONUS = 1
bj_CAMPPINGSTYLE_TURNIN = 2
bj_CAMPPINGSTYLE_BOSS = 3
bj_CAMPPINGSTYLE_CONTROL_ALLY = 4
bj_CAMPPINGSTYLE_CONTROL_NEUTRAL = 5
bj_CAMPPINGSTYLE_CONTROL_ENEMY = 6
bj_CORPSE_MAX_DEATH_TIME = 8.00
bj_CORPSETYPE_FLESH = 0
bj_CORPSETYPE_BONE = 1
bj_ELEVATOR_BLOCKER_CODE = 'DTep'
bj_ELEVATOR_CODE01 = 'DTrf'
bj_ELEVATOR_CODE02 = 'DTrx'
bj_ELEVATOR_WALL_TYPE_ALL = 0
bj_ELEVATOR_WALL_TYPE_EAST = 1
bj_ELEVATOR_WALL_TYPE_NORTH = 2
bj_ELEVATOR_WALL_TYPE_SOUTH = 3
bj_ELEVATOR_WALL_TYPE_WEST = 4
bj_FORCE_ALL_PLAYERS = None
bj_MELEE_MAX_TWINKED_HEROES = 0
bj_mapInitialPlayableArea = None
bj_mapInitialCameraBounds = None
bj_forLoopAIndex = 0
bj_forLoopBIndex = 0
bj_forLoopAIndexEnd = 0
bj_forLoopBIndexEnd = 0
bj_slotControlReady = False
bj_gameStartedTimer = None
bj_gameStarted = False
bj_volumeGroupsTimer = CreateTimer()
bj_isSinglePlayer = False
bj_dncSoundsDay = None
bj_dncSoundsNight = None
bj_dayAmbientSound = None
bj_nightAmbientSound = None
bj_dncSoundsDawn = None
bj_dncSoundsDusk = None
bj_dawnSound = None
bj_duskSound = None
bj_useDawnDuskSounds = True
bj_dncIsDaytime = False
bj_pingMinimapSound = None
bj_rescueSound = None
bj_questDiscoveredSound = None
bj_questUpdatedSound = None
bj_questCompletedSound = None
bj_questFailedSound = None
bj_questHintSound = None
bj_questSecretSound = None
bj_questItemAcquiredSound = None
bj_questWarningSound = None
bj_victoryDialogSound = None
bj_defeatDialogSound = None
bj_stockItemPurchased = None
bj_stockUpdateTimer = None
bj_stockPickedItemLevel = 0
bj_meleeVisibilityTrained = None
bj_meleeVisibilityIsDay = True
bj_meleeGrantHeroItems = False
bj_meleeNearestMineToLoc = None
bj_meleeNearestMine = None
bj_meleeNearestMineDist = 0.00
bj_meleeGameOver = False
bj_finishSoonAllExposed = False
bj_finishSoonTimerDialog = None
bj_rescueUnitBehavior = None
bj_rescueChangeColorUnit = True
bj_rescueChangeColorBldg = True
bj_cineSceneEndingTimer = None
bj_cineSceneLastSound = None
bj_cineSceneBeingSkipped = None
bj_cineModePriorSpeed = MAP_SPEED_NORMAL
bj_cineModePriorFogSetting = False
bj_cineModePriorMaskSetting = False
bj_cineModeAlreadyIn = False
bj_cineModePriorDawnDusk = False
bj_cineModeSavedSeed = 0
bj_cineFadeFinishTimer = None
bj_cineFadeContinueTimer = None
bj_cineFadeContinueRed = 0
bj_cineFadeContinueGreen = 0
bj_cineFadeContinueBlue = 0
bj_cineFadeContinueTrans = 0
bj_cineFadeContinueDuration = 0
bj_cineFadeContinueTex = ""
bj_queuedExecTotal = 0
bj_queuedExecTimeoutTimer = CreateTimer()
bj_queuedExecTimeout = None
bj_destInRegionDiesCount = 0
bj_destInRegionDiesTrig = None
bj_groupCountUnits = 0
bj_forceCountPlayers = 0
bj_groupEnumTypeId = 0
bj_groupEnumOwningPlayer = None
bj_groupAddGroupDest = None
bj_groupRemoveGroupDest = None
bj_groupRandomConsidered = 0
bj_groupRandomCurrentPick = None
bj_groupLastCreatedDest = None
bj_randomSubGroupGroup = None
bj_randomSubGroupWant = 0
bj_randomSubGroupTotal = 0
bj_randomSubGroupChance = 0
bj_destRandomConsidered = 0
bj_destRandomCurrentPick = None
bj_elevatorWallBlocker = None
bj_elevatorNeighbor = None
bj_itemRandomConsidered = 0
bj_itemRandomCurrentPick = None
bj_forceRandomConsidered = 0
bj_forceRandomCurrentPick = None
bj_makeUnitRescuableUnit = None
bj_makeUnitRescuableFlag = True
bj_pauseAllUnitsFlag = True
bj_enumDestructableCenter = None
bj_enumDestructableRadius = 0
bj_setPlayerTargetColor = None
bj_isUnitGroupDeadResult = True
bj_isUnitGroupEmptyResult = True
bj_isUnitGroupInRectResult = True
bj_isUnitGroupInRectRect = None
bj_changeLevelShowScores = False
bj_changeLevelMapName = None
bj_suspendDecayFleshGroup = CreateGroup()
bj_suspendDecayBoneGroup = CreateGroup()
bj_delayedSuspendDecayTimer = CreateTimer()
bj_delayedSuspendDecayTrig = None
bj_livingPlayerUnitsTypeId = 0
bj_lastDyingWidget = None
bj_randDistCount = 0
bj_lastCreatedUnit = None
bj_lastCreatedItem = None
bj_lastRemovedItem = None
bj_lastHauntedGoldMine = None
bj_lastCreatedDestructable = None
bj_lastCreatedGroup = CreateGroup()
bj_lastCreatedFogModifier = None
bj_lastCreatedEffect = None
bj_lastCreatedWeatherEffect = None
bj_lastCreatedTerrainDeformation = None
bj_lastCreatedQuest = None
bj_lastCreatedQuestItem = None
bj_lastCreatedDefeatCondition = None
bj_lastStartedTimer = CreateTimer()
bj_lastCreatedTimerDialog = None
bj_lastCreatedLeaderboard = None
bj_lastCreatedMultiboard = None
bj_lastPlayedSound = None
bj_lastPlayedMusic = ""
bj_lastTransmissionDuration = 0
bj_lastCreatedGameCache = None
bj_lastCreatedHashtable = None
bj_lastLoadedUnit = None
bj_lastCreatedButton = None
bj_lastReplacedUnit = None
bj_lastCreatedTextTag = None
bj_lastCreatedLightning = None
bj_lastCreatedImage = None
bj_lastCreatedUbersplat = None
bj_lastCreatedMinimapIcon = None
bj_lastCreatedCommandButtonEffect = None
filterIssueHauntOrderAtLocBJ = None
filterEnumDestructablesInCircleBJ = None
filterGetUnitsInRectOfPlayer = None
filterGetUnitsOfTypeIdAll = None
filterGetUnitsOfPlayerAndTypeId = None
filterMeleeTrainedUnitIsHeroBJ = None
filterLivingPlayerUnitsOfTypeId = None
bj_wantDestroyGroup = False
bj_lastInstObjFuncSuccessful = True
BJDebugMsg = lambda msg: None
RMinBJ = lambda a, b: None
RMaxBJ = lambda a, b: None
RAbsBJ = lambda a: None
RSignBJ = lambda a: None
IMinBJ = lambda a, b: None
IMaxBJ = lambda a, b: None
IAbsBJ = lambda a: None
ISignBJ = lambda a: None
SinBJ = lambda degrees: None
CosBJ = lambda degrees: None
TanBJ = lambda degrees: None
AsinBJ = lambda degrees: None
AcosBJ = lambda degrees: None
AtanBJ = lambda degrees: None
Atan2BJ = lambda y, x: None
AngleBetweenPoints = lambda locA, locB: None
DistanceBetweenPoints = lambda locA, locB: None
PolarProjectionBJ = lambda source, dist, angle: None
GetRandomDirectionDeg = lambda : None
GetRandomPercentageBJ = lambda : None
GetRandomLocInRect = lambda whichRect: None
ModuloInteger = lambda dividend, divisor: None
ModuloReal = lambda dividend, divisor: None
OffsetLocation = lambda loc, dx, dy: None
OffsetRectBJ = lambda r, dx, dy: None
RectFromCenterSizeBJ = lambda center, width, height: None
RectContainsCoords = lambda r, x, y: None
RectContainsLoc = lambda r, loc: None
RectContainsUnit = lambda r, whichUnit: None
RectContainsItem = lambda whichItem, r: None
ConditionalTriggerExecute = lambda trig: None
TriggerExecuteBJ = lambda trig, checkConditions: None
PostTriggerExecuteBJ = lambda trig, checkConditions: None
QueuedTriggerCheck = lambda : None
QueuedTriggerGetIndex = lambda trig: None
QueuedTriggerRemoveByIndex = lambda trigIndex: None
QueuedTriggerAttemptExec = lambda : None
QueuedTriggerAddBJ = lambda trig, checkConditions: None
QueuedTriggerRemoveBJ = lambda trig: None
QueuedTriggerDoneBJ = lambda : None
QueuedTriggerClearBJ = lambda : None
QueuedTriggerClearInactiveBJ = lambda : None
QueuedTriggerCountBJ = lambda : None
IsTriggerQueueEmptyBJ = lambda : None
IsTriggerQueuedBJ = lambda trig: None
GetForLoopIndexA = lambda : None
SetForLoopIndexA = lambda newIndex: None
GetForLoopIndexB = lambda : None
SetForLoopIndexB = lambda newIndex: None
PolledWait = lambda duration: None
IntegerTertiaryOp = lambda flag, valueA, valueB: None
DoNothing = lambda : None
CommentString = lambda commentString: None
StringIdentity = lambda theString: None
GetBooleanAnd = lambda valueA, valueB: None
GetBooleanOr = lambda valueA, valueB: None
PercentToInt = lambda percentage, max: None
PercentTo255 = lambda percentage: None
GetTimeOfDay = lambda : None
SetTimeOfDay = lambda whatTime: None
SetTimeOfDayScalePercentBJ = lambda scalePercent: None
GetTimeOfDayScalePercentBJ = lambda : None
PlaySound = lambda soundName: None
CompareLocationsBJ = lambda A, B: None
CompareRectsBJ = lambda A, B: None
GetRectFromCircleBJ = lambda center, radius: None
GetCurrentCameraSetup = lambda : None
CameraSetupApplyForPlayer = lambda doPan, whichSetup, whichPlayer, duration: None
CameraSetupApplyForPlayerSmooth = lambda doPan, whichSetup, whichPlayer, forcedDuration, easeInDuration, easeOutDuration, smoothFactor: None
CameraSetupGetFieldSwap = lambda whichField, whichSetup: None
SetCameraFieldForPlayer = lambda whichPlayer, whichField, value, duration: None
SetCameraTargetControllerNoZForPlayer = lambda whichPlayer, whichUnit, xoffset, yoffset, inheritOrientation: None
SetCameraPositionForPlayer = lambda whichPlayer, x, y: None
SetCameraPositionLocForPlayer = lambda whichPlayer, loc: None
RotateCameraAroundLocBJ = lambda degrees, loc, whichPlayer, duration: None
PanCameraToForPlayer = lambda whichPlayer, x, y: None
PanCameraToLocForPlayer = lambda whichPlayer, loc: None
PanCameraToTimedForPlayer = lambda whichPlayer, x, y, duration: None
PanCameraToTimedLocForPlayer = lambda whichPlayer, loc, duration: None
PanCameraToTimedLocWithZForPlayer = lambda whichPlayer, loc, zOffset, duration: None
SmartCameraPanBJ = lambda whichPlayer, loc, duration: None
SetCinematicCameraForPlayer = lambda whichPlayer, cameraModelFile: None
ResetToGameCameraForPlayer = lambda whichPlayer, duration: None
CameraSetSourceNoiseForPlayer = lambda whichPlayer, magnitude, velocity: None
CameraSetTargetNoiseForPlayer = lambda whichPlayer, magnitude, velocity: None
CameraSetEQNoiseForPlayer = lambda whichPlayer, magnitude: None
CameraClearNoiseForPlayer = lambda whichPlayer: None
GetCurrentCameraBoundsMapRectBJ = lambda : None
GetCameraBoundsMapRect = lambda : None
GetPlayableMapRect = lambda : None
GetEntireMapRect = lambda : None
SetCameraBoundsToRect = lambda r: None
SetCameraBoundsToRectForPlayerBJ = lambda whichPlayer, r: None
AdjustCameraBoundsBJ = lambda adjustMethod, dxWest, dxEast, dyNorth, dySouth: None
AdjustCameraBoundsForPlayerBJ = lambda adjustMethod, whichPlayer, dxWest, dxEast, dyNorth, dySouth: None
SetCameraQuickPositionForPlayer = lambda whichPlayer, x, y: None
SetCameraQuickPositionLocForPlayer = lambda whichPlayer, loc: None
SetCameraQuickPositionLoc = lambda loc: None
StopCameraForPlayerBJ = lambda whichPlayer: None
SetCameraOrientControllerForPlayerBJ = lambda whichPlayer, whichUnit, xoffset, yoffset: None
CameraSetSmoothingFactorBJ = lambda factor: None
CameraResetSmoothingFactorBJ = lambda : None
DisplayTextToForce = lambda toForce, message: None
DisplayTimedTextToForce = lambda toForce, duration, message: None
ClearTextMessagesBJ = lambda toForce: None
SubStringBJ = lambda source, start, end: None
GetHandleIdBJ = lambda h: None
StringHashBJ = lambda s: None
TriggerRegisterTimerEventPeriodic = lambda trig, timeout: None
TriggerRegisterTimerEventSingle = lambda trig, timeout: None
TriggerRegisterTimerExpireEventBJ = lambda trig, t: None
TriggerRegisterPlayerUnitEventSimple = lambda trig, whichPlayer, whichEvent: None
TriggerRegisterAnyUnitEventBJ = lambda trig, whichEvent: None
TriggerRegisterPlayerSelectionEventBJ = lambda trig, whichPlayer, selected: None
TriggerRegisterPlayerKeyEventBJ = lambda trig, whichPlayer, keType, keKey: None
TriggerRegisterPlayerMouseEventBJ = lambda trig, whichPlayer, meType: None
TriggerRegisterPlayerEventVictory = lambda trig, whichPlayer: None
TriggerRegisterPlayerEventDefeat = lambda trig, whichPlayer: None
TriggerRegisterPlayerEventLeave = lambda trig, whichPlayer: None
TriggerRegisterPlayerEventAllianceChanged = lambda trig, whichPlayer: None
TriggerRegisterPlayerEventEndCinematic = lambda trig, whichPlayer: None
TriggerRegisterGameStateEventTimeOfDay = lambda trig, opcode, limitval: None
TriggerRegisterEnterRegionSimple = lambda trig, whichRegion: None
TriggerRegisterLeaveRegionSimple = lambda trig, whichRegion: None
TriggerRegisterEnterRectSimple = lambda trig, r: None
TriggerRegisterLeaveRectSimple = lambda trig, r: None
TriggerRegisterDistanceBetweenUnits = lambda trig, whichUnit, condition, range: None
TriggerRegisterUnitInRangeSimple = lambda trig, range, whichUnit: None
TriggerRegisterUnitLifeEvent = lambda trig, whichUnit, opcode, limitval: None
TriggerRegisterUnitManaEvent = lambda trig, whichUnit, opcode, limitval: None
TriggerRegisterDialogEventBJ = lambda trig, whichDialog: None
TriggerRegisterShowSkillEventBJ = lambda trig: None
TriggerRegisterBuildSubmenuEventBJ = lambda trig: None
TriggerRegisterBuildCommandEventBJ = lambda trig, unitId: None
TriggerRegisterTrainCommandEventBJ = lambda trig, unitId: None
TriggerRegisterUpgradeCommandEventBJ = lambda trig, techId: None
TriggerRegisterGameLoadedEventBJ = lambda trig: None
TriggerRegisterGameSavedEventBJ = lambda trig: None
RegisterDestDeathInRegionEnum = lambda : None
TriggerRegisterDestDeathInRegionEvent = lambda trig, r: None
AddWeatherEffectSaveLast = lambda where, effectID: None
GetLastCreatedWeatherEffect = lambda : None
RemoveWeatherEffectBJ = lambda whichWeatherEffect: None
TerrainDeformationCraterBJ = lambda duration, permanent, where, radius, depth: None
TerrainDeformationRippleBJ = lambda duration, limitNeg, where, startRadius, endRadius, depth, wavePeriod, waveWidth: None
TerrainDeformationWaveBJ = lambda duration, source, target, radius, depth, trailDelay: None
TerrainDeformationRandomBJ = lambda duration, where, radius, minDelta, maxDelta, updateInterval: None
TerrainDeformationStopBJ = lambda deformation, duration: None
GetLastCreatedTerrainDeformation = lambda : None
AddLightningLoc = lambda codeName, where1, where2: None
DestroyLightningBJ = lambda whichBolt: None
MoveLightningLoc = lambda whichBolt, where1, where2: None
GetLightningColorABJ = lambda whichBolt: None
GetLightningColorRBJ = lambda whichBolt: None
GetLightningColorGBJ = lambda whichBolt: None
GetLightningColorBBJ = lambda whichBolt: None
SetLightningColorBJ = lambda whichBolt, r, g, b, a: None
GetLastCreatedLightningBJ = lambda : None
GetAbilityEffectBJ = lambda abilcode, t, index: None
GetAbilitySoundBJ = lambda abilcode, t: None
GetTerrainCliffLevelBJ = lambda where: None
GetTerrainTypeBJ = lambda where: None
GetTerrainVarianceBJ = lambda where: None
SetTerrainTypeBJ = lambda where, terrainType, variation, area, shape: None
IsTerrainPathableBJ = lambda where, t: None
SetTerrainPathableBJ = lambda where, t, flag: None
SetWaterBaseColorBJ = lambda red, green, blue, transparency: None
CreateFogModifierRectSimple = lambda whichPlayer, whichFogState, r, afterUnits: None
CreateFogModifierRadiusLocSimple = lambda whichPlayer, whichFogState, center, radius, afterUnits: None
CreateFogModifierRectBJ = lambda enabled, whichPlayer, whichFogState, r: None
CreateFogModifierRadiusLocBJ = lambda enabled, whichPlayer, whichFogState, center, radius: None
GetLastCreatedFogModifier = lambda : None
FogEnableOn = lambda : None
FogEnableOff = lambda : None
FogMaskEnableOn = lambda : None
FogMaskEnableOff = lambda : None
UseTimeOfDayBJ = lambda flag: None
SetTerrainFogExBJ = lambda style, zstart, zend, density, red, green, blue: None
ResetTerrainFogBJ = lambda : None
SetDoodadAnimationBJ = lambda animName, doodadID, radius, center: None
SetDoodadAnimationRectBJ = lambda animName, doodadID, r: None
AddUnitAnimationPropertiesBJ = lambda add, animProperties, whichUnit: None
CreateImageBJ = lambda file, size, where, zOffset, imageType: None
ShowImageBJ = lambda flag, whichImage: None
SetImagePositionBJ = lambda whichImage, where, zOffset: None
SetImageColorBJ = lambda whichImage, red, green, blue, alpha: None
GetLastCreatedImage = lambda : None
CreateUbersplatBJ = lambda where, name, red, green, blue, alpha, forcePaused, noBirthTime: None
ShowUbersplatBJ = lambda flag, whichSplat: None
GetLastCreatedUbersplat = lambda : None
GetLastCreatedMinimapIcon = lambda : None
CreateMinimapIconOnUnitBJ = lambda whichUnit, red, green, blue, pingPath, fogVisibility: None
CreateMinimapIconAtLocBJ = lambda where, red, green, blue, pingPath, fogVisibility: None
CreateMinimapIconBJ = lambda x, y, red, green, blue, pingPath, fogVisibility: None
CampaignMinimapIconUnitBJ = lambda whichUnit, style: None
CampaignMinimapIconLocBJ = lambda where, style: None
PlaySoundBJ = lambda soundHandle: None
StopSoundBJ = lambda soundHandle, fadeOut: None
SetSoundVolumeBJ = lambda soundHandle, volumePercent: None
SetSoundOffsetBJ = lambda newOffset, soundHandle: None
SetSoundDistanceCutoffBJ = lambda soundHandle, cutoff: None
SetSoundPitchBJ = lambda soundHandle, pitch: None
SetSoundPositionLocBJ = lambda soundHandle, loc, z: None
AttachSoundToUnitBJ = lambda soundHandle, whichUnit: None
SetSoundConeAnglesBJ = lambda soundHandle, inside, outside, outsideVolumePercent: None
KillSoundWhenDoneBJ = lambda soundHandle: None
PlaySoundAtPointBJ = lambda soundHandle, volumePercent, loc, z: None
PlaySoundOnUnitBJ = lambda soundHandle, volumePercent, whichUnit: None
PlaySoundFromOffsetBJ = lambda soundHandle, volumePercent, startingOffset: None
PlayMusicBJ = lambda musicFileName: None
PlayMusicExBJ = lambda musicFileName, startingOffset, fadeInTime: None
SetMusicOffsetBJ = lambda newOffset: None
PlayThematicMusicBJ = lambda musicName: None
PlayThematicMusicExBJ = lambda musicName, startingOffset: None
SetThematicMusicOffsetBJ = lambda newOffset: None
EndThematicMusicBJ = lambda : None
StopMusicBJ = lambda fadeOut: None
ResumeMusicBJ = lambda : None
SetMusicVolumeBJ = lambda volumePercent: None
GetSoundDurationBJ = lambda soundHandle: None
GetSoundFileDurationBJ = lambda musicFileName: None
GetLastPlayedSound = lambda : None
GetLastPlayedMusic = lambda : None
VolumeGroupSetVolumeBJ = lambda vgroup, percent: None
SetCineModeVolumeGroupsImmediateBJ = lambda : None
SetCineModeVolumeGroupsBJ = lambda : None
SetSpeechVolumeGroupsImmediateBJ = lambda : None
SetSpeechVolumeGroupsBJ = lambda : None
VolumeGroupResetImmediateBJ = lambda : None
VolumeGroupResetBJ = lambda : None
GetSoundIsPlayingBJ = lambda soundHandle: None
WaitForSoundBJ = lambda soundHandle, offset: None
SetMapMusicIndexedBJ = lambda musicName, index: None
SetMapMusicRandomBJ = lambda musicName: None
ClearMapMusicBJ = lambda : None
SetStackedSoundBJ = lambda add, soundHandle, r: None
StartSoundForPlayerBJ = lambda whichPlayer, soundHandle: None
VolumeGroupSetVolumeForPlayerBJ = lambda whichPlayer, vgroup, scale: None
EnableDawnDusk = lambda flag: None
IsDawnDuskEnabled = lambda : None
SetAmbientDaySound = lambda inLabel: None
SetAmbientNightSound = lambda inLabel: None
AddSpecialEffectLocBJ = lambda where, modelName: None
AddSpecialEffectTargetUnitBJ = lambda attachPointName, targetWidget, modelName: None
DestroyEffectBJ = lambda whichEffect: None
GetLastCreatedEffectBJ = lambda : None
CreateCommandButtonEffectBJ = lambda abilityId, order: None
CreateTrainCommandButtonEffectBJ = lambda unitId: None
CreateUpgradeCommandButtonEffectBJ = lambda techId: None
CreateLearnCommandButtonEffectBJ = lambda abilityId: None
CreateBuildCommandButtonEffectBJ = lambda unitId: None
GetLastCreatedCommandButtonEffectBJ = lambda : None
GetItemLoc = lambda whichItem: None
GetItemLifeBJ = lambda whichWidget: None
SetItemLifeBJ = lambda whichWidget, life: None
AddHeroXPSwapped = lambda xpToAdd, whichHero, showEyeCandy: None
SetHeroLevelBJ = lambda whichHero, newLevel, showEyeCandy: None
DecUnitAbilityLevelSwapped = lambda abilcode, whichUnit: None
IncUnitAbilityLevelSwapped = lambda abilcode, whichUnit: None
SetUnitAbilityLevelSwapped = lambda abilcode, whichUnit, level: None
GetUnitAbilityLevelSwapped = lambda abilcode, whichUnit: None
UnitHasBuffBJ = lambda whichUnit, buffcode: None
UnitRemoveBuffBJ = lambda buffcode, whichUnit: None
UnitAddItemSwapped = lambda whichItem, whichHero: None
UnitAddItemByIdSwapped = lambda itemId, whichHero: None
UnitRemoveItemSwapped = lambda whichItem, whichHero: None
UnitRemoveItemFromSlotSwapped = lambda itemSlot, whichHero: None
CreateItemLoc = lambda itemId, loc: None
GetLastCreatedItem = lambda : None
GetLastRemovedItem = lambda : None
SetItemPositionLoc = lambda whichItem, loc: None
GetLearnedSkillBJ = lambda : None
SuspendHeroXPBJ = lambda flag, whichHero: None
SetPlayerHandicapDamageBJ = lambda whichPlayer, handicapPercent: None
GetPlayerHandicapDamageBJ = lambda whichPlayer: None
SetPlayerHandicapReviveTimeBJ = lambda whichPlayer, handicapPercent: None
GetPlayerHandicapReviveTimeBJ = lambda whichPlayer: None
SetPlayerHandicapXPBJ = lambda whichPlayer, handicapPercent: None
GetPlayerHandicapXPBJ = lambda whichPlayer: None
SetPlayerHandicapBJ = lambda whichPlayer, handicapPercent: None
GetPlayerHandicapBJ = lambda whichPlayer: None
GetHeroStatBJ = lambda whichStat, whichHero, includeBonuses: None
SetHeroStat = lambda whichHero, whichStat, value: None
ModifyHeroStat = lambda whichStat, whichHero, modifyMethod, value: None
ModifyHeroSkillPoints = lambda whichHero, modifyMethod, value: None
UnitDropItemPointBJ = lambda whichUnit, whichItem, x, y: None
UnitDropItemPointLoc = lambda whichUnit, whichItem, loc: None
UnitDropItemSlotBJ = lambda whichUnit, whichItem, slot: None
UnitDropItemTargetBJ = lambda whichUnit, whichItem, target: None
UnitUseItemDestructable = lambda whichUnit, whichItem, target: None
UnitUseItemPointLoc = lambda whichUnit, whichItem, loc: None
UnitItemInSlotBJ = lambda whichUnit, itemSlot: None
GetInventoryIndexOfItemTypeBJ = lambda whichUnit, itemId: None
GetItemOfTypeFromUnitBJ = lambda whichUnit, itemId: None
UnitHasItemOfTypeBJ = lambda whichUnit, itemId: None
UnitInventoryCount = lambda whichUnit: None
UnitInventorySizeBJ = lambda whichUnit: None
SetItemInvulnerableBJ = lambda whichItem, flag: None
SetItemDropOnDeathBJ = lambda whichItem, flag: None
SetItemDroppableBJ = lambda whichItem, flag: None
SetItemPlayerBJ = lambda whichItem, whichPlayer, changeColor: None
SetItemVisibleBJ = lambda show, whichItem: None
IsItemHiddenBJ = lambda whichItem: None
ChooseRandomItemBJ = lambda level: None
ChooseRandomItemExBJ = lambda level, whichType: None
ChooseRandomNPBuildingBJ = lambda : None
ChooseRandomCreepBJ = lambda level: None
EnumItemsInRectBJ = lambda r, actionFunc: None
RandomItemInRectBJEnum = lambda : None
RandomItemInRectBJ = lambda r, filter: None
RandomItemInRectSimpleBJ = lambda r: None
CheckItemStatus = lambda whichItem, status: None
CheckItemcodeStatus = lambda itemId, status: None
UnitId2OrderIdBJ = lambda unitId: None
String2UnitIdBJ = lambda unitIdString: None
UnitId2StringBJ = lambda unitId: None
String2OrderIdBJ = lambda orderIdString: None
OrderId2StringBJ = lambda orderId: None
GetIssuedOrderIdBJ = lambda : None
GetKillingUnitBJ = lambda : None
CreateUnitAtLocSaveLast = lambda id, unitid, loc, face: None
GetLastCreatedUnit = lambda : None
CreateNUnitsAtLoc = lambda count, unitId, whichPlayer, loc, face: None
CreateNUnitsAtLocFacingLocBJ = lambda count, unitId, whichPlayer, loc, lookAt: None
GetLastCreatedGroupEnum = lambda : None
GetLastCreatedGroup = lambda : None
CreateCorpseLocBJ = lambda unitid, whichPlayer, loc: None
UnitSuspendDecayBJ = lambda suspend, whichUnit: None
DelayedSuspendDecayStopAnimEnum = lambda : None
DelayedSuspendDecayBoneEnum = lambda : None
DelayedSuspendDecayFleshEnum = lambda : None
DelayedSuspendDecay = lambda : None
DelayedSuspendDecayCreate = lambda : None
CreatePermanentCorpseLocBJ = lambda style, unitid, whichPlayer, loc, facing: None
GetUnitStateSwap = lambda whichState, whichUnit: None
GetUnitStatePercent = lambda whichUnit, whichState, whichMaxState: None
GetUnitLifePercent = lambda whichUnit: None
GetUnitManaPercent = lambda whichUnit: None
SelectUnitSingle = lambda whichUnit: None
SelectGroupBJEnum = lambda : None
SelectGroupBJ = lambda g: None
SelectUnitAdd = lambda whichUnit: None
SelectUnitRemove = lambda whichUnit: None
ClearSelectionForPlayer = lambda whichPlayer: None
SelectUnitForPlayerSingle = lambda whichUnit, whichPlayer: None
SelectGroupForPlayerBJ = lambda g, whichPlayer: None
SelectUnitAddForPlayer = lambda whichUnit, whichPlayer: None
SelectUnitRemoveForPlayer = lambda whichUnit, whichPlayer: None
SetUnitLifeBJ = lambda whichUnit, newValue: None
SetUnitManaBJ = lambda whichUnit, newValue: None
SetUnitLifePercentBJ = lambda whichUnit, percent: None
SetUnitManaPercentBJ = lambda whichUnit, percent: None
IsUnitDeadBJ = lambda whichUnit: None
IsUnitAliveBJ = lambda whichUnit: None
IsUnitGroupDeadBJEnum = lambda : None
IsUnitGroupDeadBJ = lambda g: None
IsUnitGroupEmptyBJEnum = lambda : None
IsUnitGroupEmptyBJ = lambda g: None
IsUnitGroupInRectBJEnum = lambda : None
IsUnitGroupInRectBJ = lambda g, r: None
IsUnitHiddenBJ = lambda whichUnit: None
ShowUnitHide = lambda whichUnit: None
ShowUnitShow = lambda whichUnit: None
IssueHauntOrderAtLocBJFilter = lambda : None
IssueHauntOrderAtLocBJ = lambda whichPeon, loc: None
IssueBuildOrderByIdLocBJ = lambda whichPeon, unitId, loc: None
IssueTrainOrderByIdBJ = lambda whichUnit, unitId: None
GroupTrainOrderByIdBJ = lambda g, unitId: None
IssueUpgradeOrderByIdBJ = lambda whichUnit, techId: None
GetAttackedUnitBJ = lambda : None
SetUnitFlyHeightBJ = lambda whichUnit, newHeight, rate: None
SetUnitTurnSpeedBJ = lambda whichUnit, turnSpeed: None
SetUnitPropWindowBJ = lambda whichUnit, propWindow: None
GetUnitPropWindowBJ = lambda whichUnit: None
GetUnitDefaultPropWindowBJ = lambda whichUnit: None
SetUnitBlendTimeBJ = lambda whichUnit, blendTime: None
SetUnitAcquireRangeBJ = lambda whichUnit, acquireRange: None
UnitSetCanSleepBJ = lambda whichUnit, canSleep: None
UnitCanSleepBJ = lambda whichUnit: None
UnitWakeUpBJ = lambda whichUnit: None
UnitIsSleepingBJ = lambda whichUnit: None
WakePlayerUnitsEnum = lambda : None
WakePlayerUnits = lambda whichPlayer: None
EnableCreepSleepBJ = lambda enable: None
UnitGenerateAlarms = lambda whichUnit, generate: None
DoesUnitGenerateAlarms = lambda whichUnit: None
PauseAllUnitsBJEnum = lambda : None
PauseAllUnitsBJ = lambda pause: None
PauseUnitBJ = lambda pause, whichUnit: None
IsUnitPausedBJ = lambda whichUnit: None
UnitPauseTimedLifeBJ = lambda flag, whichUnit: None
UnitApplyTimedLifeBJ = lambda duration, buffId, whichUnit: None
UnitShareVisionBJ = lambda share, whichUnit, whichPlayer: None
UnitRemoveBuffsBJ = lambda buffType, whichUnit: None
UnitRemoveBuffsExBJ = lambda polarity, resist, whichUnit, bTLife, bAura: None
UnitCountBuffsExBJ = lambda polarity, resist, whichUnit, bTLife, bAura: None
UnitRemoveAbilityBJ = lambda abilityId, whichUnit: None
UnitAddAbilityBJ = lambda abilityId, whichUnit: None
UnitRemoveTypeBJ = lambda whichType, whichUnit: None
UnitAddTypeBJ = lambda whichType, whichUnit: None
UnitMakeAbilityPermanentBJ = lambda permanent, abilityId, whichUnit: None
SetUnitExplodedBJ = lambda whichUnit, exploded: None
ExplodeUnitBJ = lambda whichUnit: None
GetTransportUnitBJ = lambda : None
GetLoadedUnitBJ = lambda : None
IsUnitInTransportBJ = lambda whichUnit, whichTransport: None
IsUnitLoadedBJ = lambda whichUnit: None
IsUnitIllusionBJ = lambda whichUnit: None
ReplaceUnitBJ = lambda whichUnit, newUnitId, unitStateMethod: None
GetLastReplacedUnitBJ = lambda : None
SetUnitPositionLocFacingBJ = lambda whichUnit, loc, facing: None
SetUnitPositionLocFacingLocBJ = lambda whichUnit, loc, lookAt: None
AddItemToStockBJ = lambda itemId, whichUnit, currentStock, stockMax: None
AddUnitToStockBJ = lambda unitId, whichUnit, currentStock, stockMax: None
RemoveItemFromStockBJ = lambda itemId, whichUnit: None
RemoveUnitFromStockBJ = lambda unitId, whichUnit: None
SetUnitUseFoodBJ = lambda enable, whichUnit: None
UnitDamagePointLoc = lambda whichUnit, delay, radius, loc, amount, whichAttack, whichDamage: None
UnitDamageTargetBJ = lambda whichUnit, target, amount, whichAttack, whichDamage: None
CreateDestructableLoc = lambda objectid, loc, facing, scale, variation: None
CreateDeadDestructableLocBJ = lambda objectid, loc, facing, scale, variation: None
GetLastCreatedDestructable = lambda : None
ShowDestructableBJ = lambda flag, d: None
SetDestructableInvulnerableBJ = lambda d, flag: None
IsDestructableInvulnerableBJ = lambda d: None
GetDestructableLoc = lambda whichDestructable: None
EnumDestructablesInRectAll = lambda r, actionFunc: None
EnumDestructablesInCircleBJFilter = lambda : None
IsDestructableDeadBJ = lambda d: None
IsDestructableAliveBJ = lambda d: None
RandomDestructableInRectBJEnum = lambda : None
RandomDestructableInRectBJ = lambda r, filter: None
RandomDestructableInRectSimpleBJ = lambda r: None
EnumDestructablesInCircleBJ = lambda radius, loc, actionFunc: None
SetDestructableLifePercentBJ = lambda d, percent: None
SetDestructableMaxLifeBJ = lambda d, max: None
ModifyGateBJ = lambda gateOperation, d: None
GetElevatorHeight = lambda d: None
ChangeElevatorHeight = lambda d, newHeight: None
NudgeUnitsInRectEnum = lambda : None
NudgeItemsInRectEnum = lambda : None
NudgeObjectsInRect = lambda nudgeArea: None
NearbyElevatorExistsEnum = lambda : None
NearbyElevatorExists = lambda x, y: None
FindElevatorWallBlockerEnum = lambda : None
ChangeElevatorWallBlocker = lambda x, y, facing, open: None
ChangeElevatorWalls = lambda open, walls, d: None
WaygateActivateBJ = lambda activate, waygate: None
WaygateIsActiveBJ = lambda waygate: None
WaygateSetDestinationLocBJ = lambda waygate, loc: None
WaygateGetDestinationLocBJ = lambda waygate: None
UnitSetUsesAltIconBJ = lambda flag, whichUnit: None
ForceUIKeyBJ = lambda whichPlayer, key: None
ForceUICancelBJ = lambda whichPlayer: None
ForGroupBJ = lambda whichGroup, callback: None
GroupAddUnitSimple = lambda whichUnit, whichGroup: None
GroupRemoveUnitSimple = lambda whichUnit, whichGroup: None
GroupAddGroupEnum = lambda : None
GroupAddGroup = lambda sourceGroup, destGroup: None
GroupRemoveGroupEnum = lambda : None
GroupRemoveGroup = lambda sourceGroup, destGroup: None
ForceAddPlayerSimple = lambda whichPlayer, whichForce: None
ForceRemovePlayerSimple = lambda whichPlayer, whichForce: None
GroupPickRandomUnitEnum = lambda : None
GroupPickRandomUnit = lambda whichGroup: None
ForcePickRandomPlayerEnum = lambda : None
ForcePickRandomPlayer = lambda whichForce: None
EnumUnitsSelected = lambda whichPlayer, enumFilter, enumAction: None
GetUnitsInRectMatching = lambda r, filter: None
GetUnitsInRectAll = lambda r: None
GetUnitsInRectOfPlayerFilter = lambda : None
GetUnitsInRectOfPlayer = lambda r, whichPlayer: None
GetUnitsInRangeOfLocMatching = lambda radius, whichLocation, filter: None
GetUnitsInRangeOfLocAll = lambda radius, whichLocation: None
GetUnitsOfTypeIdAllFilter = lambda : None
GetUnitsOfTypeIdAll = lambda unitid: None
GetUnitsOfPlayerMatching = lambda whichPlayer, filter: None
GetUnitsOfPlayerAll = lambda whichPlayer: None
GetUnitsOfPlayerAndTypeIdFilter = lambda : None
GetUnitsOfPlayerAndTypeId = lambda whichPlayer, unitid: None
GetUnitsSelectedAll = lambda whichPlayer: None
GetForceOfPlayer = lambda whichPlayer: None
GetPlayersAll = lambda : None
GetPlayersByMapControl = lambda whichControl: None
GetPlayersAllies = lambda whichPlayer: None
GetPlayersEnemies = lambda whichPlayer: None
GetPlayersMatching = lambda filter: None
CountUnitsInGroupEnum = lambda : None
CountUnitsInGroup = lambda g: None
CountPlayersInForceEnum = lambda : None
CountPlayersInForceBJ = lambda f: None
GetRandomSubGroupEnum = lambda : None
GetRandomSubGroup = lambda count, sourceGroup: None
LivingPlayerUnitsOfTypeIdFilter = lambda : None
CountLivingPlayerUnitsOfTypeId = lambda unitId, whichPlayer: None
ResetUnitAnimation = lambda whichUnit: None
SetUnitTimeScalePercent = lambda whichUnit, percentScale: None
SetUnitScalePercent = lambda whichUnit, percentScaleX, percentScaleY, percentScaleZ: None
SetUnitVertexColorBJ = lambda whichUnit, red, green, blue, transparency: None
UnitAddIndicatorBJ = lambda whichUnit, red, green, blue, transparency: None
DestructableAddIndicatorBJ = lambda whichDestructable, red, green, blue, transparency: None
ItemAddIndicatorBJ = lambda whichItem, red, green, blue, transparency: None
SetUnitFacingToFaceLocTimed = lambda whichUnit, target, duration: None
SetUnitFacingToFaceUnitTimed = lambda whichUnit, target, duration: None
QueueUnitAnimationBJ = lambda whichUnit, whichAnimation: None
SetDestructableAnimationBJ = lambda d, whichAnimation: None
QueueDestructableAnimationBJ = lambda d, whichAnimation: None
SetDestAnimationSpeedPercent = lambda d, percentScale: None
DialogDisplayBJ = lambda flag, whichDialog, whichPlayer: None
DialogSetMessageBJ = lambda whichDialog, message: None
DialogAddButtonBJ = lambda whichDialog, buttonText: None
DialogAddButtonWithHotkeyBJ = lambda whichDialog, buttonText, hotkey: None
DialogClearBJ = lambda whichDialog: None
GetLastCreatedButtonBJ = lambda : None
GetClickedButtonBJ = lambda : None
GetClickedDialogBJ = lambda : None
SetPlayerAllianceBJ = lambda sourcePlayer, whichAllianceSetting, value, otherPlayer: None
SetPlayerAllianceStateAllyBJ = lambda sourcePlayer, otherPlayer, flag: None
SetPlayerAllianceStateVisionBJ = lambda sourcePlayer, otherPlayer, flag: None
SetPlayerAllianceStateControlBJ = lambda sourcePlayer, otherPlayer, flag: None
SetPlayerAllianceStateFullControlBJ = lambda sourcePlayer, otherPlayer, flag: None
SetPlayerAllianceStateBJ = lambda sourcePlayer, otherPlayer, allianceState: None
SetForceAllianceStateBJ = lambda sourceForce, targetForce, allianceState: None
PlayersAreCoAllied = lambda playerA, playerB: None
ShareEverythingWithTeamAI = lambda whichPlayer: None
ShareEverythingWithTeam = lambda whichPlayer: None
ConfigureNeutralVictim = lambda : None
MakeUnitsPassiveForPlayerEnum = lambda : None
MakeUnitsPassiveForPlayer = lambda whichPlayer: None
MakeUnitsPassiveForTeam = lambda whichPlayer: None
AllowVictoryDefeat = lambda gameResult: None
EndGameBJ = lambda : None
MeleeVictoryDialogBJ = lambda whichPlayer, leftGame: None
MeleeDefeatDialogBJ = lambda whichPlayer, leftGame: None
GameOverDialogBJ = lambda whichPlayer, leftGame: None
RemovePlayerPreserveUnitsBJ = lambda whichPlayer, gameResult, leftGame: None
CustomVictoryOkBJ = lambda : None
CustomVictoryQuitBJ = lambda : None
CustomVictoryDialogBJ = lambda whichPlayer: None
CustomVictorySkipBJ = lambda whichPlayer: None
CustomVictoryBJ = lambda whichPlayer, showDialog, showScores: None
CustomDefeatRestartBJ = lambda : None
CustomDefeatReduceDifficultyBJ = lambda : None
CustomDefeatLoadBJ = lambda : None
CustomDefeatQuitBJ = lambda : None
CustomDefeatDialogBJ = lambda whichPlayer, message: None
CustomDefeatBJ = lambda whichPlayer, message: None
SetNextLevelBJ = lambda nextLevel: None
SetPlayerOnScoreScreenBJ = lambda flag, whichPlayer: None
CreateQuestBJ = lambda questType, title, description, iconPath: None
DestroyQuestBJ = lambda whichQuest: None
QuestSetEnabledBJ = lambda enabled, whichQuest: None
QuestSetTitleBJ = lambda whichQuest, title: None
QuestSetDescriptionBJ = lambda whichQuest, description: None
QuestSetCompletedBJ = lambda whichQuest, completed: None
QuestSetFailedBJ = lambda whichQuest, failed: None
QuestSetDiscoveredBJ = lambda whichQuest, discovered: None
GetLastCreatedQuestBJ = lambda : None
CreateQuestItemBJ = lambda whichQuest, description: None
QuestItemSetDescriptionBJ = lambda whichQuestItem, description: None
QuestItemSetCompletedBJ = lambda whichQuestItem, completed: None
GetLastCreatedQuestItemBJ = lambda : None
CreateDefeatConditionBJ = lambda description: None
DestroyDefeatConditionBJ = lambda whichCondition: None
DefeatConditionSetDescriptionBJ = lambda whichCondition, description: None
GetLastCreatedDefeatConditionBJ = lambda : None
FlashQuestDialogButtonBJ = lambda : None
QuestMessageBJ = lambda f, messageType, message: None
StartTimerBJ = lambda t, periodic, timeout: None
CreateTimerBJ = lambda periodic, timeout: None
DestroyTimerBJ = lambda whichTimer: None
PauseTimerBJ = lambda pause, whichTimer: None
GetLastCreatedTimerBJ = lambda : None
CreateTimerDialogBJ = lambda t, title: None
DestroyTimerDialogBJ = lambda td: None
TimerDialogSetTitleBJ = lambda td, title: None
TimerDialogSetTitleColorBJ = lambda td, red, green, blue, transparency: None
TimerDialogSetTimeColorBJ = lambda td, red, green, blue, transparency: None
TimerDialogSetSpeedBJ = lambda td, speedMultFactor: None
TimerDialogDisplayForPlayerBJ = lambda show, td, whichPlayer: None
TimerDialogDisplayBJ = lambda show, td: None
GetLastCreatedTimerDialogBJ = lambda : None
LeaderboardResizeBJ = lambda lb: None
LeaderboardSetPlayerItemValueBJ = lambda whichPlayer, lb, val: None
LeaderboardSetPlayerItemLabelBJ = lambda whichPlayer, lb, val: None
LeaderboardSetPlayerItemStyleBJ = lambda whichPlayer, lb, showLabel, showValue, showIcon: None
LeaderboardSetPlayerItemLabelColorBJ = lambda whichPlayer, lb, red, green, blue, transparency: None
LeaderboardSetPlayerItemValueColorBJ = lambda whichPlayer, lb, red, green, blue, transparency: None
LeaderboardSetLabelColorBJ = lambda lb, red, green, blue, transparency: None
LeaderboardSetValueColorBJ = lambda lb, red, green, blue, transparency: None
LeaderboardSetLabelBJ = lambda lb, label: None
LeaderboardSetStyleBJ = lambda lb, showLabel, showNames, showValues, showIcons: None
LeaderboardGetItemCountBJ = lambda lb: None
LeaderboardHasPlayerItemBJ = lambda lb, whichPlayer: None
ForceSetLeaderboardBJ = lambda lb, toForce: None
CreateLeaderboardBJ = lambda toForce, label: None
DestroyLeaderboardBJ = lambda lb: None
LeaderboardDisplayBJ = lambda show, lb: None
LeaderboardAddItemBJ = lambda whichPlayer, lb, label, value: None
LeaderboardRemovePlayerItemBJ = lambda whichPlayer, lb: None
LeaderboardSortItemsBJ = lambda lb, sortType, ascending: None
LeaderboardSortItemsByPlayerBJ = lambda lb, ascending: None
LeaderboardSortItemsByLabelBJ = lambda lb, ascending: None
LeaderboardGetPlayerIndexBJ = lambda whichPlayer, lb: None
LeaderboardGetIndexedPlayerBJ = lambda position, lb: None
PlayerGetLeaderboardBJ = lambda whichPlayer: None
GetLastCreatedLeaderboard = lambda : None
CreateMultiboardBJ = lambda cols, rows, title: None
DestroyMultiboardBJ = lambda mb: None
GetLastCreatedMultiboard = lambda : None
MultiboardDisplayBJ = lambda show, mb: None
MultiboardMinimizeBJ = lambda minimize, mb: None
MultiboardSetTitleTextColorBJ = lambda mb, red, green, blue, transparency: None
MultiboardAllowDisplayBJ = lambda flag: None
MultiboardSetItemStyleBJ = lambda mb, col, row, showValue, showIcon: None
MultiboardSetItemValueBJ = lambda mb, col, row, val: None
MultiboardSetItemColorBJ = lambda mb, col, row, red, green, blue, transparency: None
MultiboardSetItemWidthBJ = lambda mb, col, row, width: None
MultiboardSetItemIconBJ = lambda mb, col, row, iconFileName: None
TextTagSize2Height = lambda size: None
TextTagSpeed2Velocity = lambda speed: None
SetTextTagColorBJ = lambda tt, red, green, blue, transparency: None
SetTextTagVelocityBJ = lambda tt, speed, angle: None
SetTextTagTextBJ = lambda tt, s, size: None
SetTextTagPosBJ = lambda tt, loc, zOffset: None
SetTextTagPosUnitBJ = lambda tt, whichUnit, zOffset: None
SetTextTagSuspendedBJ = lambda tt, flag: None
SetTextTagPermanentBJ = lambda tt, flag: None
SetTextTagAgeBJ = lambda tt, age: None
SetTextTagLifespanBJ = lambda tt, lifespan: None
SetTextTagFadepointBJ = lambda tt, fadepoint: None
CreateTextTagLocBJ = lambda s, loc, zOffset, size, red, green, blue, transparency: None
CreateTextTagUnitBJ = lambda s, whichUnit, zOffset, size, red, green, blue, transparency: None
DestroyTextTagBJ = lambda tt: None
ShowTextTagForceBJ = lambda show, tt, whichForce: None
GetLastCreatedTextTag = lambda : None
PauseGameOn = lambda : None
PauseGameOff = lambda : None
SetUserControlForceOn = lambda whichForce: None
SetUserControlForceOff = lambda whichForce: None
ShowInterfaceForceOn = lambda whichForce, fadeDuration: None
ShowInterfaceForceOff = lambda whichForce, fadeDuration: None
PingMinimapForForce = lambda whichForce, x, y, duration: None
PingMinimapLocForForce = lambda whichForce, loc, duration: None
PingMinimapForPlayer = lambda whichPlayer, x, y, duration: None
PingMinimapLocForPlayer = lambda whichPlayer, loc, duration: None
PingMinimapForForceEx = lambda whichForce, x, y, duration, style, red, green, blue: None
PingMinimapLocForForceEx = lambda whichForce, loc, duration, style, red, green, blue: None
EnableWorldFogBoundaryBJ = lambda enable, f: None
EnableOcclusionBJ = lambda enable, f: None
CancelCineSceneBJ = lambda : None
TryInitCinematicBehaviorBJ = lambda : None
SetCinematicSceneBJ = lambda soundHandle, portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration: None
GetTransmissionDuration = lambda soundHandle, timeType, timeVal: None
WaitTransmissionDuration = lambda soundHandle, timeType, timeVal: None
DoTransmissionBasicsXYBJ = lambda unitId, color, x, y, soundHandle, unitName, message, duration: None
TransmissionFromUnitWithNameBJ = lambda toForce, whichUnit, unitName, soundHandle, message, timeType, timeVal, wait: None
PlayDialogueFromSpeaker = lambda toForce, speaker, soundHandle, timeType, timeVal, wait: None
PlayDialogueFromSpeakerEx = lambda toForce, speaker, speakerType, soundHandle, timeType, timeVal, wait: None
PlayDialogueFromSpeakerType = lambda toForce, fromPlayer, speakerType, loc, soundHandle, timeType, timeVal, wait: None
PlayDialogueFromSpeakerTypeEx = lambda toForce, fromPlayer, speakerType, loc, soundHandle, timeType, timeVal, wait: None
TransmissionFromUnitTypeWithNameBJ = lambda toForce, fromPlayer, unitId, unitName, loc, soundHandle, message, timeType, timeVal, wait: None
GetLastTransmissionDurationBJ = lambda : None
ForceCinematicSubtitlesBJ = lambda flag: None
CinematicModeExBJ = lambda cineMode, forForce, interfaceFadeTime: None
CinematicModeBJ = lambda cineMode, forForce: None
DisplayCineFilterBJ = lambda flag: None
CinematicFadeCommonBJ = lambda red, green, blue, duration, tex, startTrans, endTrans: None
FinishCinematicFadeBJ = lambda : None
FinishCinematicFadeAfterBJ = lambda duration: None
ContinueCinematicFadeBJ = lambda : None
ContinueCinematicFadeAfterBJ = lambda duration, red, green, blue, trans, tex: None
AbortCinematicFadeBJ = lambda : None
CinematicFadeBJ = lambda fadetype, duration, tex, red, green, blue, trans: None
CinematicFilterGenericBJ = lambda duration, bmode, tex, red0, green0, blue0, trans0, red1, green1, blue1, trans1: None
RescueUnitBJ = lambda whichUnit, rescuer, changeColor: None
TriggerActionUnitRescuedBJ = lambda : None
TryInitRescuableTriggersBJ = lambda : None
SetRescueUnitColorChangeBJ = lambda changeColor: None
SetRescueBuildingColorChangeBJ = lambda changeColor: None
MakeUnitRescuableToForceBJEnum = lambda : None
MakeUnitRescuableToForceBJ = lambda whichUnit, isRescuable, whichForce: None
InitRescuableBehaviorBJ = lambda : None
SetPlayerTechResearchedSwap = lambda techid, levels, whichPlayer: None
SetPlayerTechMaxAllowedSwap = lambda techid, maximum, whichPlayer: None
SetPlayerMaxHeroesAllowed = lambda maximum, whichPlayer: None
GetPlayerTechCountSimple = lambda techid, whichPlayer: None
GetPlayerTechMaxAllowedSwap = lambda techid, whichPlayer: None
SetPlayerAbilityAvailableBJ = lambda avail, abilid, whichPlayer: None
SetCampaignMenuRaceBJ = lambda campaignNumber: None
SetMissionAvailableBJ = lambda available, missionIndex: None
SetCampaignAvailableBJ = lambda available, campaignNumber: None
SetCinematicAvailableBJ = lambda available, cinematicIndex: None
InitGameCacheBJ = lambda campaignFile: None
SaveGameCacheBJ = lambda cache: None
GetLastCreatedGameCacheBJ = lambda : None
InitHashtableBJ = lambda : None
GetLastCreatedHashtableBJ = lambda : None
StoreRealBJ = lambda value, key, missionKey, cache: None
StoreIntegerBJ = lambda value, key, missionKey, cache: None
StoreBooleanBJ = lambda value, key, missionKey, cache: None
StoreStringBJ = lambda value, key, missionKey, cache: None
StoreUnitBJ = lambda whichUnit, key, missionKey, cache: None
SaveRealBJ = lambda value, key, missionKey, table: None
SaveIntegerBJ = lambda value, key, missionKey, table: None
SaveBooleanBJ = lambda value, key, missionKey, table: None
SaveStringBJ = lambda value, key, missionKey, table: None
SavePlayerHandleBJ = lambda whichPlayer, key, missionKey, table: None
SaveWidgetHandleBJ = lambda whichWidget, key, missionKey, table: None
SaveDestructableHandleBJ = lambda whichDestructable, key, missionKey, table: None
SaveItemHandleBJ = lambda whichItem, key, missionKey, table: None
SaveUnitHandleBJ = lambda whichUnit, key, missionKey, table: None
SaveAbilityHandleBJ = lambda whichAbility, key, missionKey, table: None
SaveTimerHandleBJ = lambda whichTimer, key, missionKey, table: None
SaveTriggerHandleBJ = lambda whichTrigger, key, missionKey, table: None
SaveTriggerConditionHandleBJ = lambda whichTriggercondition, key, missionKey, table: None
SaveTriggerActionHandleBJ = lambda whichTriggeraction, key, missionKey, table: None
SaveTriggerEventHandleBJ = lambda whichEvent, key, missionKey, table: None
SaveForceHandleBJ = lambda whichForce, key, missionKey, table: None
SaveGroupHandleBJ = lambda whichGroup, key, missionKey, table: None
SaveLocationHandleBJ = lambda whichLocation, key, missionKey, table: None
SaveRectHandleBJ = lambda whichRect, key, missionKey, table: None
SaveBooleanExprHandleBJ = lambda whichBoolexpr, key, missionKey, table: None
SaveSoundHandleBJ = lambda whichSound, key, missionKey, table: None
SaveEffectHandleBJ = lambda whichEffect, key, missionKey, table: None
SaveUnitPoolHandleBJ = lambda whichUnitpool, key, missionKey, table: None
SaveItemPoolHandleBJ = lambda whichItempool, key, missionKey, table: None
SaveQuestHandleBJ = lambda whichQuest, key, missionKey, table: None
SaveQuestItemHandleBJ = lambda whichQuestitem, key, missionKey, table: None
SaveDefeatConditionHandleBJ = lambda whichDefeatcondition, key, missionKey, table: None
SaveTimerDialogHandleBJ = lambda whichTimerdialog, key, missionKey, table: None
SaveLeaderboardHandleBJ = lambda whichLeaderboard, key, missionKey, table: None
SaveMultiboardHandleBJ = lambda whichMultiboard, key, missionKey, table: None
SaveMultiboardItemHandleBJ = lambda whichMultiboarditem, key, missionKey, table: None
SaveTrackableHandleBJ = lambda whichTrackable, key, missionKey, table: None
SaveDialogHandleBJ = lambda whichDialog, key, missionKey, table: None
SaveButtonHandleBJ = lambda whichButton, key, missionKey, table: None
SaveTextTagHandleBJ = lambda whichTexttag, key, missionKey, table: None
SaveLightningHandleBJ = lambda whichLightning, key, missionKey, table: None
SaveImageHandleBJ = lambda whichImage, key, missionKey, table: None
SaveUbersplatHandleBJ = lambda whichUbersplat, key, missionKey, table: None
SaveRegionHandleBJ = lambda whichRegion, key, missionKey, table: None
SaveFogStateHandleBJ = lambda whichFogState, key, missionKey, table: None
SaveFogModifierHandleBJ = lambda whichFogModifier, key, missionKey, table: None
SaveAgentHandleBJ = lambda whichAgent, key, missionKey, table: None
SaveHashtableHandleBJ = lambda whichHashtable, key, missionKey, table: None
GetStoredRealBJ = lambda key, missionKey, cache: None
GetStoredIntegerBJ = lambda key, missionKey, cache: None
GetStoredBooleanBJ = lambda key, missionKey, cache: None
GetStoredStringBJ = lambda key, missionKey, cache: None
LoadRealBJ = lambda key, missionKey, table: None
LoadIntegerBJ = lambda key, missionKey, table: None
LoadBooleanBJ = lambda key, missionKey, table: None
LoadStringBJ = lambda key, missionKey, table: None
LoadPlayerHandleBJ = lambda key, missionKey, table: None
LoadWidgetHandleBJ = lambda key, missionKey, table: None
LoadDestructableHandleBJ = lambda key, missionKey, table: None
LoadItemHandleBJ = lambda key, missionKey, table: None
LoadUnitHandleBJ = lambda key, missionKey, table: None
LoadAbilityHandleBJ = lambda key, missionKey, table: None
LoadTimerHandleBJ = lambda key, missionKey, table: None
LoadTriggerHandleBJ = lambda key, missionKey, table: None
LoadTriggerConditionHandleBJ = lambda key, missionKey, table: None
LoadTriggerActionHandleBJ = lambda key, missionKey, table: None
LoadTriggerEventHandleBJ = lambda key, missionKey, table: None
LoadForceHandleBJ = lambda key, missionKey, table: None
LoadGroupHandleBJ = lambda key, missionKey, table: None
LoadLocationHandleBJ = lambda key, missionKey, table: None
LoadRectHandleBJ = lambda key, missionKey, table: None
LoadBooleanExprHandleBJ = lambda key, missionKey, table: None
LoadSoundHandleBJ = lambda key, missionKey, table: None
LoadEffectHandleBJ = lambda key, missionKey, table: None
LoadUnitPoolHandleBJ = lambda key, missionKey, table: None
LoadItemPoolHandleBJ = lambda key, missionKey, table: None
LoadQuestHandleBJ = lambda key, missionKey, table: None
LoadQuestItemHandleBJ = lambda key, missionKey, table: None
LoadDefeatConditionHandleBJ = lambda key, missionKey, table: None
LoadTimerDialogHandleBJ = lambda key, missionKey, table: None
LoadLeaderboardHandleBJ = lambda key, missionKey, table: None
LoadMultiboardHandleBJ = lambda key, missionKey, table: None
LoadMultiboardItemHandleBJ = lambda key, missionKey, table: None
LoadTrackableHandleBJ = lambda key, missionKey, table: None
LoadDialogHandleBJ = lambda key, missionKey, table: None
LoadButtonHandleBJ = lambda key, missionKey, table: None
LoadTextTagHandleBJ = lambda key, missionKey, table: None
LoadLightningHandleBJ = lambda key, missionKey, table: None
LoadImageHandleBJ = lambda key, missionKey, table: None
LoadUbersplatHandleBJ = lambda key, missionKey, table: None
LoadRegionHandleBJ = lambda key, missionKey, table: None
LoadFogStateHandleBJ = lambda key, missionKey, table: None
LoadFogModifierHandleBJ = lambda key, missionKey, table: None
LoadHashtableHandleBJ = lambda key, missionKey, table: None
RestoreUnitLocFacingAngleBJ = lambda key, missionKey, cache, forWhichPlayer, loc, facing: None
RestoreUnitLocFacingPointBJ = lambda key, missionKey, cache, forWhichPlayer, loc, lookAt: None
GetLastRestoredUnitBJ = lambda : None
FlushGameCacheBJ = lambda cache: None
FlushStoredMissionBJ = lambda missionKey, cache: None
FlushParentHashtableBJ = lambda table: None
FlushChildHashtableBJ = lambda missionKey, table: None
HaveStoredValue = lambda key, valueType, missionKey, cache: None
HaveSavedValue = lambda key, valueType, missionKey, table: None
ShowCustomCampaignButton = lambda show, whichButton: None
IsCustomCampaignButtonVisibile = lambda whichButton: None
SaveGameCheckPointBJ = lambda mapSaveName, doCheckpointHint: None
LoadGameBJ = lambda loadFileName, doScoreScreen: None
SaveAndChangeLevelBJ = lambda saveFileName, newLevel, doScoreScreen: None
SaveAndLoadGameBJ = lambda saveFileName, loadFileName, doScoreScreen: None
RenameSaveDirectoryBJ = lambda sourceDirName, destDirName: None
RemoveSaveDirectoryBJ = lambda sourceDirName: None
CopySaveGameBJ = lambda sourceSaveName, destSaveName: None
GetPlayerStartLocationX = lambda whichPlayer: None
GetPlayerStartLocationY = lambda whichPlayer: None
GetPlayerStartLocationLoc = lambda whichPlayer: None
GetRectCenter = lambda whichRect: None
IsPlayerSlotState = lambda whichPlayer, whichState: None
GetFadeFromSeconds = lambda seconds: None
GetFadeFromSecondsAsReal = lambda seconds: None
AdjustPlayerStateSimpleBJ = lambda whichPlayer, whichPlayerState, delta: None
AdjustPlayerStateBJ = lambda delta, whichPlayer, whichPlayerState: None
SetPlayerStateBJ = lambda whichPlayer, whichPlayerState, value: None
SetPlayerFlagBJ = lambda whichPlayerFlag, flag, whichPlayer: None
SetPlayerTaxRateBJ = lambda rate, whichResource, sourcePlayer, otherPlayer: None
GetPlayerTaxRateBJ = lambda whichResource, sourcePlayer, otherPlayer: None
IsPlayerFlagSetBJ = lambda whichPlayerFlag, whichPlayer: None
AddResourceAmountBJ = lambda delta, whichUnit: None
GetConvertedPlayerId = lambda whichPlayer: None
ConvertedPlayer = lambda convertedPlayerId: None
GetRectWidthBJ = lambda r: None
GetRectHeightBJ = lambda r: None
BlightGoldMineForPlayerBJ = lambda goldMine, whichPlayer: None
BlightGoldMineForPlayer = lambda goldMine, whichPlayer: None
GetLastHauntedGoldMine = lambda : None
IsPointBlightedBJ = lambda where: None
SetPlayerColorBJEnum = lambda : None
SetPlayerColorBJ = lambda whichPlayer, color, changeExisting: None
SetPlayerUnitAvailableBJ = lambda unitId, allowed, whichPlayer: None
LockGameSpeedBJ = lambda : None
UnlockGameSpeedBJ = lambda : None
IssueTargetOrderBJ = lambda whichUnit, order, targetWidget: None
IssuePointOrderLocBJ = lambda whichUnit, order, whichLocation: None
IssueTargetDestructableOrder = lambda whichUnit, order, targetWidget: None
IssueTargetItemOrder = lambda whichUnit, order, targetWidget: None
IssueImmediateOrderBJ = lambda whichUnit, order: None
GroupTargetOrderBJ = lambda whichGroup, order, targetWidget: None
GroupPointOrderLocBJ = lambda whichGroup, order, whichLocation: None
GroupImmediateOrderBJ = lambda whichGroup, order: None
GroupTargetDestructableOrder = lambda whichGroup, order, targetWidget: None
GroupTargetItemOrder = lambda whichGroup, order, targetWidget: None
GetDyingDestructable = lambda : None
SetUnitRallyPoint = lambda whichUnit, targPos: None
SetUnitRallyUnit = lambda whichUnit, targUnit: None
SetUnitRallyDestructable = lambda whichUnit, targDest: None
SaveDyingWidget = lambda : None
SetBlightRectBJ = lambda addBlight, whichPlayer, r: None
SetBlightRadiusLocBJ = lambda addBlight, whichPlayer, loc, radius: None
GetAbilityName = lambda abilcode: None
MeleeStartingVisibility = lambda : None
MeleeStartingResources = lambda : None
ReducePlayerTechMaxAllowed = lambda whichPlayer, techId, limit: None
MeleeStartingHeroLimit = lambda : None
MeleeTrainedUnitIsHeroBJFilter = lambda : None
MeleeGrantItemsToHero = lambda whichUnit: None
MeleeGrantItemsToTrainedHero = lambda : None
MeleeGrantItemsToHiredHero = lambda : None
MeleeGrantHeroItems = lambda : None
MeleeClearExcessUnit = lambda : None
MeleeClearNearbyUnits = lambda x, y, range: None
MeleeClearExcessUnits = lambda : None
MeleeEnumFindNearestMine = lambda : None
MeleeFindNearestMine = lambda src, range: None
MeleeRandomHeroLoc = lambda p, id1, id2, id3, id4, loc: None
MeleeGetProjectedLoc = lambda src, targ, distance, deltaAngle: None
MeleeGetNearestValueWithin = lambda val, minVal, maxVal: None
MeleeGetLocWithinRect = lambda src, r: None
MeleeStartingUnitsHuman = lambda whichPlayer, startLoc, doHeroes, doCamera, doPreload: None
MeleeStartingUnitsOrc = lambda whichPlayer, startLoc, doHeroes, doCamera, doPreload: None
MeleeStartingUnitsUndead = lambda whichPlayer, startLoc, doHeroes, doCamera, doPreload: None
MeleeStartingUnitsNightElf = lambda whichPlayer, startLoc, doHeroes, doCamera, doPreload: None
MeleeStartingUnitsUnknownRace = lambda whichPlayer, startLoc, doHeroes, doCamera, doPreload: None
MeleeStartingUnits = lambda : None
MeleeStartingUnitsForPlayer = lambda whichRace, whichPlayer, loc, doHeroes: None
PickMeleeAI = lambda num, s1, s2, s3: None
MeleeStartingAI = lambda : None
LockGuardPosition = lambda targ: None
MeleePlayerIsOpponent = lambda playerIndex, opponentIndex: None
MeleeGetAllyStructureCount = lambda whichPlayer: None
MeleeGetAllyCount = lambda whichPlayer: None
MeleeGetAllyKeyStructureCount = lambda whichPlayer: None
MeleeDoDrawEnum = lambda : None
MeleeDoVictoryEnum = lambda : None
MeleeDoDefeat = lambda whichPlayer: None
MeleeDoDefeatEnum = lambda : None
MeleeDoLeave = lambda whichPlayer: None
MeleeRemoveObservers = lambda : None
MeleeCheckForVictors = lambda : None
MeleeCheckForLosersAndVictors = lambda : None
MeleeGetCrippledWarningMessage = lambda whichPlayer: None
MeleeGetCrippledTimerMessage = lambda whichPlayer: None
MeleeGetCrippledRevealedMessage = lambda whichPlayer: None
MeleeExposePlayer = lambda whichPlayer, expose: None
MeleeExposeAllPlayers = lambda : None
MeleeCrippledPlayerTimeout = lambda : None
MeleePlayerIsCrippled = lambda whichPlayer: None
MeleeCheckForCrippledPlayers = lambda : None
MeleeCheckLostUnit = lambda lostUnit: None
MeleeCheckAddedUnit = lambda addedUnit: None
MeleeTriggerActionConstructCancel = lambda : None
MeleeTriggerActionUnitDeath = lambda : None
MeleeTriggerActionUnitConstructionStart = lambda : None
MeleeTriggerActionPlayerDefeated = lambda : None
MeleeTriggerActionPlayerLeft = lambda : None
MeleeTriggerActionAllianceChange = lambda : None
MeleeTriggerTournamentFinishSoon = lambda : None
MeleeWasUserPlayer = lambda whichPlayer: None
MeleeTournamentFinishNowRuleA = lambda multiplier: None
MeleeTriggerTournamentFinishNow = lambda : None
MeleeInitVictoryDefeat = lambda : None
CheckInitPlayerSlotAvailability = lambda : None
SetPlayerSlotAvailable = lambda whichPlayer, control: None
TeamInitPlayerSlots = lambda teamCount: None
MeleeInitPlayerSlots = lambda : None
FFAInitPlayerSlots = lambda : None
OneOnOneInitPlayerSlots = lambda : None
InitGenericPlayerSlots = lambda : None
SetDNCSoundsDawn = lambda : None
SetDNCSoundsDusk = lambda : None
SetDNCSoundsDay = lambda : None
SetDNCSoundsNight = lambda : None
InitDNCSounds = lambda : None
InitBlizzardGlobals = lambda : None
InitQueuedTriggers = lambda : None
InitMapRects = lambda : None
InitSummonableCaps = lambda : None
UpdateStockAvailability = lambda whichItem: None
UpdateEachStockBuildingEnum = lambda : None
UpdateEachStockBuilding = lambda iType, iLevel: None
PerformStockUpdates = lambda : None
StartStockUpdates = lambda : None
RemovePurchasedItem = lambda : None
InitNeutralBuildings = lambda : None
MarkGameStarted = lambda : None
DetectGameStarted = lambda : None
InitBlizzard = lambda : None
RandomDistReset = lambda : None
RandomDistAddItem = lambda inID, inChance: None
RandomDistChoose = lambda : None
UnitDropItem = lambda inUnit, inItemID: None
WidgetDropItem = lambda inWidget, inItemID: None
BlzIsLastInstanceObjectFunctionSuccessful = lambda : None
BlzSetAbilityBooleanFieldBJ = lambda whichAbility, whichField, value: None
BlzSetAbilityIntegerFieldBJ = lambda whichAbility, whichField, value: None
BlzSetAbilityRealFieldBJ = lambda whichAbility, whichField, value: None
BlzSetAbilityStringFieldBJ = lambda whichAbility, whichField, value: None
BlzSetAbilityBooleanLevelFieldBJ = lambda whichAbility, whichField, level, value: None
BlzSetAbilityIntegerLevelFieldBJ = lambda whichAbility, whichField, level, value: None
BlzSetAbilityRealLevelFieldBJ = lambda whichAbility, whichField, level, value: None
BlzSetAbilityStringLevelFieldBJ = lambda whichAbility, whichField, level, value: None
BlzSetAbilityBooleanLevelArrayFieldBJ = lambda whichAbility, whichField, level, index, value: None
BlzSetAbilityIntegerLevelArrayFieldBJ = lambda whichAbility, whichField, level, index, value: None
BlzSetAbilityRealLevelArrayFieldBJ = lambda whichAbility, whichField, level, index, value: None
BlzSetAbilityStringLevelArrayFieldBJ = lambda whichAbility, whichField, level, index, value: None
BlzAddAbilityBooleanLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzAddAbilityIntegerLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzAddAbilityRealLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzAddAbilityStringLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityBooleanLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityIntegerLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityRealLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityStringLevelArrayFieldBJ = lambda whichAbility, whichField, level, value: None
BlzItemAddAbilityBJ = lambda whichItem, abilCode: None
BlzItemRemoveAbilityBJ = lambda whichItem, abilCode: None
BlzSetItemBooleanFieldBJ = lambda whichItem, whichField, value: None
BlzSetItemIntegerFieldBJ = lambda whichItem, whichField, value: None
BlzSetItemRealFieldBJ = lambda whichItem, whichField, value: None
BlzSetItemStringFieldBJ = lambda whichItem, whichField, value: None
BlzSetUnitBooleanFieldBJ = lambda whichUnit, whichField, value: None
BlzSetUnitIntegerFieldBJ = lambda whichUnit, whichField, value: None
BlzSetUnitRealFieldBJ = lambda whichUnit, whichField, value: None
BlzSetUnitStringFieldBJ = lambda whichUnit, whichField, value: None
BlzSetUnitWeaponBooleanFieldBJ = lambda whichUnit, whichField, index, value: None
BlzSetUnitWeaponIntegerFieldBJ = lambda whichUnit, whichField, index, value: None
BlzSetUnitWeaponRealFieldBJ = lambda whichUnit, whichField, index, value: None
BlzSetUnitWeaponStringFieldBJ = lambda whichUnit, whichField, index, value: None
