# -- DO NOT INCLUDE --
ConvertRace = lambda i: None
ConvertAllianceType = lambda i: None
ConvertRacePref = lambda i: None
ConvertIGameState = lambda i: None
ConvertFGameState = lambda i: None
ConvertPlayerState = lambda i: None
ConvertPlayerScore = lambda i: None
ConvertPlayerGameResult = lambda i: None
ConvertUnitState = lambda i: None
ConvertAIDifficulty = lambda i: None
ConvertGameEvent = lambda i: None
ConvertPlayerEvent = lambda i: None
ConvertPlayerUnitEvent = lambda i: None
ConvertWidgetEvent = lambda i: None
ConvertDialogEvent = lambda i: None
ConvertUnitEvent = lambda i: None
ConvertLimitOp = lambda i: None
ConvertUnitType = lambda i: None
ConvertGameSpeed = lambda i: None
ConvertPlacement = lambda i: None
ConvertStartLocPrio = lambda i: None
ConvertGameDifficulty = lambda i: None
ConvertGameType = lambda i: None
ConvertMapFlag = lambda i: None
ConvertMapVisibility = lambda i: None
ConvertMapSetting = lambda i: None
ConvertMapDensity = lambda i: None
ConvertMapControl = lambda i: None
ConvertPlayerColor = lambda i: None
ConvertPlayerSlotState = lambda i: None
ConvertVolumeGroup = lambda i: None
ConvertCameraField = lambda i: None
ConvertBlendMode = lambda i: None
ConvertRarityControl = lambda i: None
ConvertTexMapFlags = lambda i: None
ConvertFogState = lambda i: None
ConvertEffectType = lambda i: None
ConvertVersion = lambda i: None
ConvertItemType = lambda i: None
ConvertAttackType = lambda i: None
ConvertDamageType = lambda i: None
ConvertWeaponType = lambda i: None
ConvertSoundType = lambda i: None
ConvertPathingType = lambda i: None
ConvertMouseButtonType = lambda i: None
ConvertAnimType = lambda i: None
ConvertSubAnimType = lambda i: None
ConvertOriginFrameType = lambda i: None
ConvertFramePointType = lambda i: None
ConvertTextAlignType = lambda i: None
ConvertFrameEventType = lambda i: None
ConvertOsKeyType = lambda i: None
ConvertAbilityIntegerField = lambda i: None
ConvertAbilityRealField = lambda i: None
ConvertAbilityBooleanField = lambda i: None
ConvertAbilityStringField = lambda i: None
ConvertAbilityIntegerLevelField = lambda i: None
ConvertAbilityRealLevelField = lambda i: None
ConvertAbilityBooleanLevelField = lambda i: None
ConvertAbilityStringLevelField = lambda i: None
ConvertAbilityIntegerLevelArrayField = lambda i: None
ConvertAbilityRealLevelArrayField = lambda i: None
ConvertAbilityBooleanLevelArrayField = lambda i: None
ConvertAbilityStringLevelArrayField = lambda i: None
ConvertUnitIntegerField = lambda i: None
ConvertUnitRealField = lambda i: None
ConvertUnitBooleanField = lambda i: None
ConvertUnitStringField = lambda i: None
ConvertUnitWeaponIntegerField = lambda i: None
ConvertUnitWeaponRealField = lambda i: None
ConvertUnitWeaponBooleanField = lambda i: None
ConvertUnitWeaponStringField = lambda i: None
ConvertItemIntegerField = lambda i: None
ConvertItemRealField = lambda i: None
ConvertItemBooleanField = lambda i: None
ConvertItemStringField = lambda i: None
ConvertMoveType = lambda i: None
ConvertTargetFlag = lambda i: None
ConvertArmorType = lambda i: None
ConvertHeroAttribute = lambda i: None
ConvertDefenseType = lambda i: None
ConvertRegenType = lambda i: None
ConvertUnitCategory = lambda i: None
ConvertPathingFlag = lambda i: None
OrderId = lambda : None
OrderId2String = lambda : None
UnitId = lambda : None
UnitId2String = lambda : None
AbilityId = lambda : None
AbilityId2String = lambda : None
GetObjectName = lambda : None
GetBJMaxPlayers = lambda : None
GetBJPlayerNeutralVictim = lambda : None
GetBJPlayerNeutralExtra = lambda : None
GetBJMaxPlayerSlots = lambda : None
GetPlayerNeutralPassive = lambda : None
GetPlayerNeutralAggressive = lambda : None
Deg2Rad = lambda degrees: None
Rad2Deg = lambda radians: None
Sin = lambda radians: None
Cos = lambda radians: None
Tan = lambda radians: None
Asin = lambda y: None
Acos = lambda x: None
Atan = lambda x: None
Atan2 = lambda y, x: None
SquareRoot = lambda x: None
Pow = lambda x, power: None
MathRound = lambda r: None
I2R = lambda i: None
R2I = lambda r: None
I2S = lambda i: None
R2S = lambda r: None
R2SW = lambda r, width, precision: None
S2I = lambda s: None
S2R = lambda s: None
GetHandleId = lambda h: None
SubString = lambda source, start, end: None
StringLength = lambda s: None
StringCase = lambda source, upper: None
StringHash = lambda s: None
GetLocalizedString = lambda source: None
GetLocalizedHotkey = lambda source: None
SetMapName = lambda name: None
SetMapDescription = lambda description: None
SetTeams = lambda teamcount: None
SetPlayers = lambda playercount: None
DefineStartLocation = lambda whichStartLoc, x, y: None
DefineStartLocationLoc = lambda whichStartLoc, whichLocation: None
SetStartLocPrioCount = lambda whichStartLoc, prioSlotCount: None
SetStartLocPrio = lambda whichStartLoc, prioSlotIndex, otherStartLocIndex, priority: None
GetStartLocPrioSlot = lambda whichStartLoc, prioSlotIndex: None
GetStartLocPrio = lambda whichStartLoc, prioSlotIndex: None
SetEnemyStartLocPrioCount = lambda whichStartLoc, prioSlotCount: None
SetEnemyStartLocPrio = lambda whichStartLoc, prioSlotIndex, otherStartLocIndex, priority: None
SetGameTypeSupported = lambda whichGameType, value: None
SetMapFlag = lambda whichMapFlag, value: None
SetGamePlacement = lambda whichPlacementType: None
SetGameSpeed = lambda whichspeed: None
SetGameDifficulty = lambda whichdifficulty: None
SetResourceDensity = lambda whichdensity: None
SetCreatureDensity = lambda whichdensity: None
GetTeams = lambda : None
GetPlayers = lambda : None
IsGameTypeSupported = lambda whichGameType: None
GetGameTypeSelected = lambda : None
IsMapFlagSet = lambda whichMapFlag: None
GetGamePlacement = lambda : None
GetGameSpeed = lambda : None
GetGameDifficulty = lambda : None
GetResourceDensity = lambda : None
GetCreatureDensity = lambda : None
GetStartLocationX = lambda whichStartLocation: None
GetStartLocationY = lambda whichStartLocation: None
GetStartLocationLoc = lambda whichStartLocation: None
SetPlayerTeam = lambda whichPlayer, whichTeam: None
SetPlayerStartLocation = lambda whichPlayer, startLocIndex: None
ForcePlayerStartLocation = lambda whichPlayer, startLocIndex: None
SetPlayerColor = lambda whichPlayer, color: None
SetPlayerAlliance = lambda sourcePlayer, otherPlayer, whichAllianceSetting, value: None
SetPlayerTaxRate = lambda sourcePlayer, otherPlayer, whichResource, rate: None
SetPlayerRacePreference = lambda whichPlayer, whichRacePreference: None
SetPlayerRaceSelectable = lambda whichPlayer, value: None
SetPlayerController = lambda whichPlayer, controlType: None
SetPlayerName = lambda whichPlayer, name: None
SetPlayerOnScoreScreen = lambda whichPlayer, flag: None
GetPlayerTeam = lambda whichPlayer: None
GetPlayerStartLocation = lambda whichPlayer: None
GetPlayerColor = lambda whichPlayer: None
GetPlayerSelectable = lambda whichPlayer: None
GetPlayerController = lambda whichPlayer: None
GetPlayerSlotState = lambda whichPlayer: None
GetPlayerTaxRate = lambda sourcePlayer, otherPlayer, whichResource: None
IsPlayerRacePrefSet = lambda whichPlayer, pref: None
GetPlayerName = lambda whichPlayer: None
CreateTimer = lambda : None
DestroyTimer = lambda whichTimer: None
TimerStart = lambda whichTimer, timeout, periodic, handlerFunc: None
TimerGetElapsed = lambda whichTimer: None
TimerGetRemaining = lambda whichTimer: None
TimerGetTimeout = lambda whichTimer: None
PauseTimer = lambda whichTimer: None
ResumeTimer = lambda whichTimer: None
GetExpiredTimer = lambda : None
CreateGroup = lambda : None
DestroyGroup = lambda whichGroup: None
GroupAddUnit = lambda whichGroup, whichUnit: None
GroupRemoveUnit = lambda whichGroup, whichUnit: None
BlzGroupAddGroupFast = lambda whichGroup, addGroup: None
BlzGroupRemoveGroupFast = lambda whichGroup, removeGroup: None
GroupClear = lambda whichGroup: None
BlzGroupGetSize = lambda whichGroup: None
BlzGroupUnitAt = lambda whichGroup, index: None
GroupEnumUnitsOfType = lambda whichGroup, unitname, filter: None
GroupEnumUnitsOfPlayer = lambda whichGroup, whichPlayer, filter: None
GroupEnumUnitsOfTypeCounted = lambda whichGroup, unitname, filter, countLimit: None
GroupEnumUnitsInRect = lambda whichGroup, r, filter: None
GroupEnumUnitsInRectCounted = lambda whichGroup, r, filter, countLimit: None
GroupEnumUnitsInRange = lambda whichGroup, x, y, radius, filter: None
GroupEnumUnitsInRangeOfLoc = lambda whichGroup, whichLocation, radius, filter: None
GroupEnumUnitsInRangeCounted = lambda whichGroup, x, y, radius, filter, countLimit: None
GroupEnumUnitsInRangeOfLocCounted = lambda whichGroup, whichLocation, radius, filter, countLimit: None
GroupEnumUnitsSelected = lambda whichGroup, whichPlayer, filter: None
GroupImmediateOrder = lambda whichGroup, order: None
GroupImmediateOrderById = lambda whichGroup, order: None
GroupPointOrder = lambda whichGroup, order, x, y: None
GroupPointOrderLoc = lambda whichGroup, order, whichLocation: None
GroupPointOrderById = lambda whichGroup, order, x, y: None
GroupPointOrderByIdLoc = lambda whichGroup, order, whichLocation: None
GroupTargetOrder = lambda whichGroup, order, targetWidget: None
GroupTargetOrderById = lambda whichGroup, order, targetWidget: None
ForGroup = lambda whichGroup, callback: None
FirstOfGroup = lambda whichGroup: None
CreateForce = lambda : None
DestroyForce = lambda whichForce: None
ForceAddPlayer = lambda whichForce, whichPlayer: None
ForceRemovePlayer = lambda whichForce, whichPlayer: None
BlzForceHasPlayer = lambda whichForce, whichPlayer: None
ForceClear = lambda whichForce: None
ForceEnumPlayers = lambda whichForce, filter: None
ForceEnumPlayersCounted = lambda whichForce, filter, countLimit: None
ForceEnumAllies = lambda whichForce, whichPlayer, filter: None
ForceEnumEnemies = lambda whichForce, whichPlayer, filter: None
ForForce = lambda whichForce, callback: None
Rect = lambda minx, miny, maxx, maxy: None
RectFromLoc = lambda min, max: None
RemoveRect = lambda whichRect: None
SetRect = lambda whichRect, minx, miny, maxx, maxy: None
SetRectFromLoc = lambda whichRect, min, max: None
MoveRectTo = lambda whichRect, newCenterX, newCenterY: None
MoveRectToLoc = lambda whichRect, newCenterLoc: None
GetRectCenterX = lambda whichRect: None
GetRectCenterY = lambda whichRect: None
GetRectMinX = lambda whichRect: None
GetRectMinY = lambda whichRect: None
GetRectMaxX = lambda whichRect: None
GetRectMaxY = lambda whichRect: None
CreateRegion = lambda : None
RemoveRegion = lambda whichRegion: None
RegionAddRect = lambda whichRegion, r: None
RegionClearRect = lambda whichRegion, r: None
RegionAddCell = lambda whichRegion, x, y: None
RegionAddCellAtLoc = lambda whichRegion, whichLocation: None
RegionClearCell = lambda whichRegion, x, y: None
RegionClearCellAtLoc = lambda whichRegion, whichLocation: None
Location = lambda x, y: None
RemoveLocation = lambda whichLocation: None
MoveLocation = lambda whichLocation, newX, newY: None
GetLocationX = lambda whichLocation: None
GetLocationY = lambda whichLocation: None
GetLocationZ = lambda whichLocation: None
IsUnitInRegion = lambda whichRegion, whichUnit: None
IsPointInRegion = lambda whichRegion, x, y: None
IsLocationInRegion = lambda whichRegion, whichLocation: None
GetWorldBounds = lambda : None
CreateTrigger = lambda : None
DestroyTrigger = lambda whichTrigger: None
ResetTrigger = lambda whichTrigger: None
EnableTrigger = lambda whichTrigger: None
DisableTrigger = lambda whichTrigger: None
IsTriggerEnabled = lambda whichTrigger: None
TriggerWaitOnSleeps = lambda whichTrigger, flag: None
IsTriggerWaitOnSleeps = lambda whichTrigger: None
GetFilterUnit = lambda : None
GetEnumUnit = lambda : None
GetFilterDestructable = lambda : None
GetEnumDestructable = lambda : None
GetFilterItem = lambda : None
GetEnumItem = lambda : None
ParseTags = lambda taggedString: None
GetFilterPlayer = lambda : None
GetEnumPlayer = lambda : None
GetTriggeringTrigger = lambda : None
GetTriggerEventId = lambda : None
GetTriggerEvalCount = lambda whichTrigger: None
GetTriggerExecCount = lambda whichTrigger: None
ExecuteFunc = lambda funcName: None
And = lambda operandA, operandB: None
Or = lambda operandA, operandB: None
Not = lambda operand: None
Condition = lambda func: None
DestroyCondition = lambda c: None
Filter = lambda func: None
DestroyFilter = lambda f: None
DestroyBoolExpr = lambda e: None
TriggerRegisterVariableEvent = lambda whichTrigger, varName, opcode, limitval: None
TriggerRegisterTimerEvent = lambda whichTrigger, timeout, periodic: None
TriggerRegisterTimerExpireEvent = lambda whichTrigger, t: None
TriggerRegisterGameStateEvent = lambda whichTrigger, whichState, opcode, limitval: None
TriggerRegisterDialogEvent = lambda whichTrigger, whichDialog: None
TriggerRegisterDialogButtonEvent = lambda whichTrigger, whichButton: None
GetEventGameState = lambda : None
TriggerRegisterGameEvent = lambda whichTrigger, whichGameEvent: None
GetWinningPlayer = lambda : None
TriggerRegisterEnterRegion = lambda whichTrigger, whichRegion, filter: None
GetTriggeringRegion = lambda : None
GetEnteringUnit = lambda : None
TriggerRegisterLeaveRegion = lambda whichTrigger, whichRegion, filter: None
GetLeavingUnit = lambda : None
TriggerRegisterTrackableHitEvent = lambda whichTrigger, t: None
TriggerRegisterTrackableTrackEvent = lambda whichTrigger, t: None
TriggerRegisterCommandEvent = lambda whichTrigger, whichAbility, order: None
TriggerRegisterUpgradeCommandEvent = lambda whichTrigger, whichUpgrade: None
GetTriggeringTrackable = lambda : None
GetClickedButton = lambda : None
GetClickedDialog = lambda : None
GetTournamentFinishSoonTimeRemaining = lambda : None
GetTournamentFinishNowRule = lambda : None
GetTournamentFinishNowPlayer = lambda : None
GetTournamentScore = lambda whichPlayer: None
GetSaveBasicFilename = lambda : None
TriggerRegisterPlayerEvent = lambda whichTrigger, whichPlayer, whichPlayerEvent: None
GetTriggerPlayer = lambda : None
TriggerRegisterPlayerUnitEvent = lambda whichTrigger, whichPlayer, whichPlayerUnitEvent, filter: None
GetLevelingUnit = lambda : None
GetLearningUnit = lambda : None
GetLearnedSkill = lambda : None
GetLearnedSkillLevel = lambda : None
GetRevivableUnit = lambda : None
GetRevivingUnit = lambda : None
GetAttacker = lambda : None
GetRescuer = lambda : None
GetDyingUnit = lambda : None
GetKillingUnit = lambda : None
GetDecayingUnit = lambda : None
GetConstructingStructure = lambda : None
GetCancelledStructure = lambda : None
GetConstructedStructure = lambda : None
GetResearchingUnit = lambda : None
GetResearched = lambda : None
GetTrainedUnitType = lambda : None
GetTrainedUnit = lambda : None
GetDetectedUnit = lambda : None
GetSummoningUnit = lambda : None
GetSummonedUnit = lambda : None
GetTransportUnit = lambda : None
GetLoadedUnit = lambda : None
GetSellingUnit = lambda : None
GetSoldUnit = lambda : None
GetBuyingUnit = lambda : None
GetSoldItem = lambda : None
GetChangingUnit = lambda : None
GetChangingUnitPrevOwner = lambda : None
GetManipulatingUnit = lambda : None
GetManipulatedItem = lambda : None
BlzGetAbsorbingItem = lambda : None
BlzGetManipulatedItemWasAbsorbed = lambda : None
BlzGetStackingItemSource = lambda : None
BlzGetStackingItemTarget = lambda : None
BlzGetStackingItemTargetPreviousCharges = lambda : None
GetOrderedUnit = lambda : None
GetIssuedOrderId = lambda : None
GetOrderPointX = lambda : None
GetOrderPointY = lambda : None
GetOrderPointLoc = lambda : None
GetOrderTarget = lambda : None
GetOrderTargetDestructable = lambda : None
GetOrderTargetItem = lambda : None
GetOrderTargetUnit = lambda : None
GetSpellAbilityUnit = lambda : None
GetSpellAbilityId = lambda : None
GetSpellAbility = lambda : None
GetSpellTargetLoc = lambda : None
GetSpellTargetX = lambda : None
GetSpellTargetY = lambda : None
GetSpellTargetDestructable = lambda : None
GetSpellTargetItem = lambda : None
GetSpellTargetUnit = lambda : None
TriggerRegisterPlayerAllianceChange = lambda whichTrigger, whichPlayer, whichAlliance: None
TriggerRegisterPlayerStateEvent = lambda whichTrigger, whichPlayer, whichState, opcode, limitval: None
GetEventPlayerState = lambda : None
TriggerRegisterPlayerChatEvent = lambda whichTrigger, whichPlayer, chatMessageToDetect, exactMatchOnly: None
GetEventPlayerChatString = lambda : None
GetEventPlayerChatStringMatched = lambda : None
TriggerRegisterDeathEvent = lambda whichTrigger, whichWidget: None
GetTriggerUnit = lambda : None
TriggerRegisterUnitStateEvent = lambda whichTrigger, whichUnit, whichState, opcode, limitval: None
GetEventUnitState = lambda : None
TriggerRegisterUnitEvent = lambda whichTrigger, whichUnit, whichEvent: None
GetEventDamage = lambda : None
GetEventDamageSource = lambda : None
GetEventDetectingPlayer = lambda : None
TriggerRegisterFilterUnitEvent = lambda whichTrigger, whichUnit, whichEvent, filter: None
GetEventTargetUnit = lambda : None
TriggerRegisterUnitInRange = lambda whichTrigger, whichUnit, range, filter: None
TriggerAddCondition = lambda whichTrigger, condition: None
TriggerRemoveCondition = lambda whichTrigger, whichCondition: None
TriggerClearConditions = lambda whichTrigger: None
TriggerAddAction = lambda whichTrigger, actionFunc: None
TriggerRemoveAction = lambda whichTrigger, whichAction: None
TriggerClearActions = lambda whichTrigger: None
TriggerSleepAction = lambda timeout: None
TriggerWaitForSound = lambda s, offset: None
TriggerEvaluate = lambda whichTrigger: None
TriggerExecute = lambda whichTrigger: None
TriggerExecuteWait = lambda whichTrigger: None
TriggerSyncStart = lambda : None
TriggerSyncReady = lambda : None
GetWidgetLife = lambda whichWidget: None
SetWidgetLife = lambda whichWidget, newLife: None
GetWidgetX = lambda whichWidget: None
GetWidgetY = lambda whichWidget: None
GetTriggerWidget = lambda : None
CreateDestructable = lambda objectid, x, y, face, scale, variation: None
CreateDestructableZ = lambda objectid, x, y, z, face, scale, variation: None
CreateDeadDestructable = lambda objectid, x, y, face, scale, variation: None
CreateDeadDestructableZ = lambda objectid, x, y, z, face, scale, variation: None
RemoveDestructable = lambda d: None
KillDestructable = lambda d: None
SetDestructableInvulnerable = lambda d, flag: None
IsDestructableInvulnerable = lambda d: None
EnumDestructablesInRect = lambda r, filter, actionFunc: None
GetDestructableTypeId = lambda d: None
GetDestructableX = lambda d: None
GetDestructableY = lambda d: None
SetDestructableLife = lambda d, life: None
GetDestructableLife = lambda d: None
SetDestructableMaxLife = lambda d, max: None
GetDestructableMaxLife = lambda d: None
DestructableRestoreLife = lambda d, life, birth: None
QueueDestructableAnimation = lambda d, whichAnimation: None
SetDestructableAnimation = lambda d, whichAnimation: None
SetDestructableAnimationSpeed = lambda d, speedFactor: None
ShowDestructable = lambda d, flag: None
GetDestructableOccluderHeight = lambda d: None
SetDestructableOccluderHeight = lambda d, height: None
GetDestructableName = lambda d: None
GetTriggerDestructable = lambda : None
CreateItem = lambda itemid, x, y: None
RemoveItem = lambda whichItem: None
GetItemPlayer = lambda whichItem: None
GetItemTypeId = lambda i: None
GetItemX = lambda i: None
GetItemY = lambda i: None
SetItemPosition = lambda i, x, y: None
SetItemDropOnDeath = lambda whichItem, flag: None
SetItemDroppable = lambda i, flag: None
SetItemPawnable = lambda i, flag: None
SetItemPlayer = lambda whichItem, whichPlayer, changeColor: None
SetItemInvulnerable = lambda whichItem, flag: None
IsItemInvulnerable = lambda whichItem: None
SetItemVisible = lambda whichItem, show: None
IsItemVisible = lambda whichItem: None
IsItemOwned = lambda whichItem: None
IsItemPowerup = lambda whichItem: None
IsItemSellable = lambda whichItem: None
IsItemPawnable = lambda whichItem: None
IsItemIdPowerup = lambda itemId: None
IsItemIdSellable = lambda itemId: None
IsItemIdPawnable = lambda itemId: None
EnumItemsInRect = lambda r, filter, actionFunc: None
GetItemLevel = lambda whichItem: None
GetItemType = lambda whichItem: None
SetItemDropID = lambda whichItem, unitId: None
GetItemName = lambda whichItem: None
GetItemCharges = lambda whichItem: None
SetItemCharges = lambda whichItem, charges: None
GetItemUserData = lambda whichItem: None
SetItemUserData = lambda whichItem, data: None
CreateUnit = lambda id, unitid, x, y, face: None
CreateUnitByName = lambda whichPlayer, unitname, x, y, face: None
CreateUnitAtLoc = lambda id, unitid, whichLocation, face: None
CreateUnitAtLocByName = lambda id, unitname, whichLocation, face: None
CreateCorpse = lambda whichPlayer, unitid, x, y, face: None
KillUnit = lambda whichUnit: None
RemoveUnit = lambda whichUnit: None
ShowUnit = lambda whichUnit, show: None
SetUnitState = lambda whichUnit, whichUnitState, newVal: None
SetUnitX = lambda whichUnit, newX: None
SetUnitY = lambda whichUnit, newY: None
SetUnitPosition = lambda whichUnit, newX, newY: None
SetUnitPositionLoc = lambda whichUnit, whichLocation: None
SetUnitFacing = lambda whichUnit, facingAngle: None
SetUnitFacingTimed = lambda whichUnit, facingAngle, duration: None
SetUnitMoveSpeed = lambda whichUnit, newSpeed: None
SetUnitFlyHeight = lambda whichUnit, newHeight, rate: None
SetUnitTurnSpeed = lambda whichUnit, newTurnSpeed: None
SetUnitPropWindow = lambda whichUnit, newPropWindowAngle: None
SetUnitAcquireRange = lambda whichUnit, newAcquireRange: None
SetUnitCreepGuard = lambda whichUnit, creepGuard: None
GetUnitAcquireRange = lambda whichUnit: None
GetUnitTurnSpeed = lambda whichUnit: None
GetUnitPropWindow = lambda whichUnit: None
GetUnitFlyHeight = lambda whichUnit: None
GetUnitDefaultAcquireRange = lambda whichUnit: None
GetUnitDefaultTurnSpeed = lambda whichUnit: None
GetUnitDefaultPropWindow = lambda whichUnit: None
GetUnitDefaultFlyHeight = lambda whichUnit: None
SetUnitOwner = lambda whichUnit, whichPlayer, changeColor: None
SetUnitColor = lambda whichUnit, whichColor: None
SetUnitScale = lambda whichUnit, scaleX, scaleY, scaleZ: None
SetUnitTimeScale = lambda whichUnit, timeScale: None
SetUnitBlendTime = lambda whichUnit, blendTime: None
SetUnitVertexColor = lambda whichUnit, red, green, blue, alpha: None
QueueUnitAnimation = lambda whichUnit, whichAnimation: None
SetUnitAnimation = lambda whichUnit, whichAnimation: None
SetUnitAnimationByIndex = lambda whichUnit, whichAnimation: None
SetUnitAnimationWithRarity = lambda whichUnit, whichAnimation, rarity: None
AddUnitAnimationProperties = lambda whichUnit, animProperties, add: None
SetUnitLookAt = lambda whichUnit, whichBone, lookAtTarget, offsetX, offsetY, offsetZ: None
ResetUnitLookAt = lambda whichUnit: None
SetUnitRescuable = lambda whichUnit, byWhichPlayer, flag: None
SetUnitRescueRange = lambda whichUnit, range: None
SetHeroStr = lambda whichHero, newStr, permanent: None
SetHeroAgi = lambda whichHero, newAgi, permanent: None
SetHeroInt = lambda whichHero, newInt, permanent: None
GetHeroStr = lambda whichHero, includeBonuses: None
GetHeroAgi = lambda whichHero, includeBonuses: None
GetHeroInt = lambda whichHero, includeBonuses: None
UnitStripHeroLevel = lambda whichHero, howManyLevels: None
GetHeroXP = lambda whichHero: None
SetHeroXP = lambda whichHero, newXpVal, showEyeCandy: None
GetHeroSkillPoints = lambda whichHero: None
UnitModifySkillPoints = lambda whichHero, skillPointDelta: None
AddHeroXP = lambda whichHero, xpToAdd, showEyeCandy: None
SetHeroLevel = lambda whichHero, level, showEyeCandy: None
GetHeroLevel = lambda whichHero: None
GetUnitLevel = lambda whichUnit: None
GetHeroProperName = lambda whichHero: None
SuspendHeroXP = lambda whichHero, flag: None
IsSuspendedXP = lambda whichHero: None
SelectHeroSkill = lambda whichHero, abilcode: None
GetUnitAbilityLevel = lambda whichUnit, abilcode: None
DecUnitAbilityLevel = lambda whichUnit, abilcode: None
IncUnitAbilityLevel = lambda whichUnit, abilcode: None
SetUnitAbilityLevel = lambda whichUnit, abilcode, level: None
ReviveHero = lambda whichHero, x, y, doEyecandy: None
ReviveHeroLoc = lambda whichHero, loc, doEyecandy: None
SetUnitExploded = lambda whichUnit, exploded: None
SetUnitInvulnerable = lambda whichUnit, flag: None
PauseUnit = lambda whichUnit, flag: None
IsUnitPaused = lambda whichHero: None
SetUnitPathing = lambda whichUnit, flag: None
ClearSelection = lambda : None
SelectUnit = lambda whichUnit, flag: None
GetUnitPointValue = lambda whichUnit: None
GetUnitPointValueByType = lambda unitType: None
UnitAddItem = lambda whichUnit, whichItem: None
UnitAddItemById = lambda whichUnit, itemId: None
UnitAddItemToSlotById = lambda whichUnit, itemId, itemSlot: None
UnitRemoveItem = lambda whichUnit, whichItem: None
UnitRemoveItemFromSlot = lambda whichUnit, itemSlot: None
UnitHasItem = lambda whichUnit, whichItem: None
UnitItemInSlot = lambda whichUnit, itemSlot: None
UnitInventorySize = lambda whichUnit: None
UnitDropItemPoint = lambda whichUnit, whichItem, x, y: None
UnitDropItemSlot = lambda whichUnit, whichItem, slot: None
UnitDropItemTarget = lambda whichUnit, whichItem, target: None
UnitUseItem = lambda whichUnit, whichItem: None
UnitUseItemPoint = lambda whichUnit, whichItem, x, y: None
UnitUseItemTarget = lambda whichUnit, whichItem, target: None
GetUnitX = lambda whichUnit: None
GetUnitY = lambda whichUnit: None
GetUnitLoc = lambda whichUnit: None
GetUnitFacing = lambda whichUnit: None
GetUnitMoveSpeed = lambda whichUnit: None
GetUnitDefaultMoveSpeed = lambda whichUnit: None
GetUnitState = lambda whichUnit, whichUnitState: None
GetOwningPlayer = lambda whichUnit: None
GetUnitTypeId = lambda whichUnit: None
GetUnitRace = lambda whichUnit: None
GetUnitName = lambda whichUnit: None
GetUnitFoodUsed = lambda whichUnit: None
GetUnitFoodMade = lambda whichUnit: None
GetFoodMade = lambda unitId: None
GetFoodUsed = lambda unitId: None
SetUnitUseFood = lambda whichUnit, useFood: None
GetUnitRallyPoint = lambda whichUnit: None
GetUnitRallyUnit = lambda whichUnit: None
GetUnitRallyDestructable = lambda whichUnit: None
IsUnitInGroup = lambda whichUnit, whichGroup: None
IsUnitInForce = lambda whichUnit, whichForce: None
IsUnitOwnedByPlayer = lambda whichUnit, whichPlayer: None
IsUnitAlly = lambda whichUnit, whichPlayer: None
IsUnitEnemy = lambda whichUnit, whichPlayer: None
IsUnitVisible = lambda whichUnit, whichPlayer: None
IsUnitDetected = lambda whichUnit, whichPlayer: None
IsUnitInvisible = lambda whichUnit, whichPlayer: None
IsUnitFogged = lambda whichUnit, whichPlayer: None
IsUnitMasked = lambda whichUnit, whichPlayer: None
IsUnitSelected = lambda whichUnit, whichPlayer: None
IsUnitRace = lambda whichUnit, whichRace: None
IsUnitType = lambda whichUnit, whichUnitType: None
IsUnit = lambda whichUnit, whichSpecifiedUnit: None
IsUnitInRange = lambda whichUnit, otherUnit, distance: None
IsUnitInRangeXY = lambda whichUnit, x, y, distance: None
IsUnitInRangeLoc = lambda whichUnit, whichLocation, distance: None
IsUnitHidden = lambda whichUnit: None
IsUnitIllusion = lambda whichUnit: None
IsUnitInTransport = lambda whichUnit, whichTransport: None
IsUnitLoaded = lambda whichUnit: None
IsHeroUnitId = lambda unitId: None
IsUnitIdType = lambda unitId, whichUnitType: None
UnitShareVision = lambda whichUnit, whichPlayer, share: None
UnitSuspendDecay = lambda whichUnit, suspend: None
UnitAddType = lambda whichUnit, whichUnitType: None
UnitRemoveType = lambda whichUnit, whichUnitType: None
UnitAddAbility = lambda whichUnit, abilityId: None
UnitRemoveAbility = lambda whichUnit, abilityId: None
UnitMakeAbilityPermanent = lambda whichUnit, permanent, abilityId: None
UnitRemoveBuffs = lambda whichUnit, removePositive, removeNegative: None
UnitRemoveBuffsEx = lambda whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel: None
UnitHasBuffsEx = lambda whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel: None
UnitCountBuffsEx = lambda whichUnit, removePositive, removeNegative, magic, physical, timedLife, aura, autoDispel: None
UnitAddSleep = lambda whichUnit, add: None
UnitCanSleep = lambda whichUnit: None
UnitAddSleepPerm = lambda whichUnit, add: None
UnitCanSleepPerm = lambda whichUnit: None
UnitIsSleeping = lambda whichUnit: None
UnitWakeUp = lambda whichUnit: None
UnitApplyTimedLife = lambda whichUnit, buffId, duration: None
UnitIgnoreAlarm = lambda whichUnit, flag: None
UnitIgnoreAlarmToggled = lambda whichUnit: None
UnitResetCooldown = lambda whichUnit: None
UnitSetConstructionProgress = lambda whichUnit, constructionPercentage: None
UnitSetUpgradeProgress = lambda whichUnit, upgradePercentage: None
UnitPauseTimedLife = lambda whichUnit, flag: None
UnitSetUsesAltIcon = lambda whichUnit, flag: None
UnitDamagePoint = lambda whichUnit, delay, radius, x, y, amount, attack, ranged, attackType, damageType, weaponType: None
UnitDamageTarget = lambda whichUnit, target, amount, attack, ranged, attackType, damageType, weaponType: None
IssueImmediateOrder = lambda whichUnit, order: None
IssueImmediateOrderById = lambda whichUnit, order: None
IssuePointOrder = lambda whichUnit, order, x, y: None
IssuePointOrderLoc = lambda whichUnit, order, whichLocation: None
IssuePointOrderById = lambda whichUnit, order, x, y: None
IssuePointOrderByIdLoc = lambda whichUnit, order, whichLocation: None
IssueTargetOrder = lambda whichUnit, order, targetWidget: None
IssueTargetOrderById = lambda whichUnit, order, targetWidget: None
IssueInstantPointOrder = lambda whichUnit, order, x, y, instantTargetWidget: None
IssueInstantPointOrderById = lambda whichUnit, order, x, y, instantTargetWidget: None
IssueInstantTargetOrder = lambda whichUnit, order, targetWidget, instantTargetWidget: None
IssueInstantTargetOrderById = lambda whichUnit, order, targetWidget, instantTargetWidget: None
IssueBuildOrder = lambda whichPeon, unitToBuild, x, y: None
IssueBuildOrderById = lambda whichPeon, unitId, x, y: None
IssueNeutralImmediateOrder = lambda forWhichPlayer, neutralStructure, unitToBuild: None
IssueNeutralImmediateOrderById = lambda forWhichPlayer, neutralStructure, unitId: None
IssueNeutralPointOrder = lambda forWhichPlayer, neutralStructure, unitToBuild, x, y: None
IssueNeutralPointOrderById = lambda forWhichPlayer, neutralStructure, unitId, x, y: None
IssueNeutralTargetOrder = lambda forWhichPlayer, neutralStructure, unitToBuild, target: None
IssueNeutralTargetOrderById = lambda forWhichPlayer, neutralStructure, unitId, target: None
GetUnitCurrentOrder = lambda whichUnit: None
SetResourceAmount = lambda whichUnit, amount: None
AddResourceAmount = lambda whichUnit, amount: None
GetResourceAmount = lambda whichUnit: None
WaygateGetDestinationX = lambda waygate: None
WaygateGetDestinationY = lambda waygate: None
WaygateSetDestination = lambda waygate, x, y: None
WaygateActivate = lambda waygate, activate: None
WaygateIsActive = lambda waygate: None
AddItemToAllStock = lambda itemId, currentStock, stockMax: None
AddItemToStock = lambda whichUnit, itemId, currentStock, stockMax: None
AddUnitToAllStock = lambda unitId, currentStock, stockMax: None
AddUnitToStock = lambda whichUnit, unitId, currentStock, stockMax: None
RemoveItemFromAllStock = lambda itemId: None
RemoveItemFromStock = lambda whichUnit, itemId: None
RemoveUnitFromAllStock = lambda unitId: None
RemoveUnitFromStock = lambda whichUnit, unitId: None
SetAllItemTypeSlots = lambda slots: None
SetAllUnitTypeSlots = lambda slots: None
SetItemTypeSlots = lambda whichUnit, slots: None
SetUnitTypeSlots = lambda whichUnit, slots: None
GetUnitUserData = lambda whichUnit: None
SetUnitUserData = lambda whichUnit, data: None
Player = lambda number: None
GetLocalPlayer = lambda : None
IsPlayerAlly = lambda whichPlayer, otherPlayer: None
IsPlayerEnemy = lambda whichPlayer, otherPlayer: None
IsPlayerInForce = lambda whichPlayer, whichForce: None
IsPlayerObserver = lambda whichPlayer: None
IsVisibleToPlayer = lambda x, y, whichPlayer: None
IsLocationVisibleToPlayer = lambda whichLocation, whichPlayer: None
IsFoggedToPlayer = lambda x, y, whichPlayer: None
IsLocationFoggedToPlayer = lambda whichLocation, whichPlayer: None
IsMaskedToPlayer = lambda x, y, whichPlayer: None
IsLocationMaskedToPlayer = lambda whichLocation, whichPlayer: None
GetPlayerRace = lambda whichPlayer: None
GetPlayerId = lambda whichPlayer: None
GetPlayerUnitCount = lambda whichPlayer, includeIncomplete: None
GetPlayerTypedUnitCount = lambda whichPlayer, unitName, includeIncomplete, includeUpgrades: None
GetPlayerStructureCount = lambda whichPlayer, includeIncomplete: None
GetPlayerState = lambda whichPlayer, whichPlayerState: None
GetPlayerScore = lambda whichPlayer, whichPlayerScore: None
GetPlayerAlliance = lambda sourcePlayer, otherPlayer, whichAllianceSetting: None
GetPlayerHandicap = lambda whichPlayer: None
GetPlayerHandicapXP = lambda whichPlayer: None
GetPlayerHandicapReviveTime = lambda whichPlayer: None
GetPlayerHandicapDamage = lambda whichPlayer: None
SetPlayerHandicap = lambda whichPlayer, handicap: None
SetPlayerHandicapXP = lambda whichPlayer, handicap: None
SetPlayerHandicapReviveTime = lambda whichPlayer, handicap: None
SetPlayerHandicapDamage = lambda whichPlayer, handicap: None
SetPlayerTechMaxAllowed = lambda whichPlayer, techid, maximum: None
GetPlayerTechMaxAllowed = lambda whichPlayer, techid: None
AddPlayerTechResearched = lambda whichPlayer, techid, levels: None
SetPlayerTechResearched = lambda whichPlayer, techid, setToLevel: None
GetPlayerTechResearched = lambda whichPlayer, techid, specificonly: None
GetPlayerTechCount = lambda whichPlayer, techid, specificonly: None
SetPlayerUnitsOwner = lambda whichPlayer, newOwner: None
CripplePlayer = lambda whichPlayer, toWhichPlayers, flag: None
SetPlayerAbilityAvailable = lambda whichPlayer, abilid, avail: None
SetPlayerState = lambda whichPlayer, whichPlayerState, value: None
RemovePlayer = lambda whichPlayer, gameResult: None
CachePlayerHeroData = lambda whichPlayer: None
SetFogStateRect = lambda forWhichPlayer, whichState, where, useSharedVision: None
SetFogStateRadius = lambda forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision: None
SetFogStateRadiusLoc = lambda forWhichPlayer, whichState, center, radius, useSharedVision: None
FogMaskEnable = lambda enable: None
IsFogMaskEnabled = lambda : None
FogEnable = lambda enable: None
IsFogEnabled = lambda : None
CreateFogModifierRect = lambda forWhichPlayer, whichState, where, useSharedVision, afterUnits: None
CreateFogModifierRadius = lambda forWhichPlayer, whichState, centerx, centerY, radius, useSharedVision, afterUnits: None
CreateFogModifierRadiusLoc = lambda forWhichPlayer, whichState, center, radius, useSharedVision, afterUnits: None
DestroyFogModifier = lambda whichFogModifier: None
FogModifierStart = lambda whichFogModifier: None
FogModifierStop = lambda whichFogModifier: None
VersionGet = lambda : None
VersionCompatible = lambda whichVersion: None
VersionSupported = lambda whichVersion: None
EndGame = lambda doScoreScreen: None
ChangeLevel = lambda newLevel, doScoreScreen: None
RestartGame = lambda doScoreScreen: None
ReloadGame = lambda : None
SetCampaignMenuRace = lambda r: None
SetCampaignMenuRaceEx = lambda campaignIndex: None
ForceCampaignSelectScreen = lambda : None
LoadGame = lambda saveFileName, doScoreScreen: None
SaveGame = lambda saveFileName: None
RenameSaveDirectory = lambda sourceDirName, destDirName: None
RemoveSaveDirectory = lambda sourceDirName: None
CopySaveGame = lambda sourceSaveName, destSaveName: None
SaveGameExists = lambda saveName: None
SetMaxCheckpointSaves = lambda maxCheckpointSaves: None
SaveGameCheckpoint = lambda saveFileName, showWindow: None
SyncSelections = lambda : None
SetFloatGameState = lambda whichFloatGameState, value: None
GetFloatGameState = lambda whichFloatGameState: None
SetIntegerGameState = lambda whichIntegerGameState, value: None
GetIntegerGameState = lambda whichIntegerGameState: None
SetTutorialCleared = lambda cleared: None
SetMissionAvailable = lambda campaignNumber, missionNumber, available: None
SetCampaignAvailable = lambda campaignNumber, : None
SetOpCinematicAvailable = lambda campaignNumber, : None
SetEdCinematicAvailable = lambda campaignNumber, : None
GetDefaultDifficulty = lambda : None
SetDefaultDifficulty = lambda g: None
SetCustomCampaignButtonVisible = lambda whichButton, visible: None
GetCustomCampaignButtonVisible = lambda whichButton: None
DoNotSaveReplay = lambda : None
DialogCreate = lambda : None
DialogDestroy = lambda whichDialog: None
DialogClear = lambda whichDialog: None
DialogSetMessage = lambda whichDialog, messageText: None
DialogAddButton = lambda whichDialog, buttonText, hotkey: None
DialogAddQuitButton = lambda whichDialog, doScoreScreen, buttonText, hotkey: None
DialogDisplay = lambda whichPlayer, whichDialog, flag: None
ReloadGameCachesFromDisk = lambda : None
InitGameCache = lambda campaignFile: None
SaveGameCache = lambda whichCache: None
StoreInteger = lambda cache, missionKey, key, value: None
StoreReal = lambda cache, missionKey, key, value: None
StoreBoolean = lambda cache, missionKey, key, value: None
StoreUnit = lambda cache, missionKey, key, whichUnit: None
StoreString = lambda cache, missionKey, key, value: None
SyncStoredInteger = lambda cache, missionKey, key: None
SyncStoredReal = lambda cache, missionKey, key: None
SyncStoredBoolean = lambda cache, missionKey, key: None
SyncStoredUnit = lambda cache, missionKey, key: None
SyncStoredString = lambda cache, missionKey, key: None
HaveStoredInteger = lambda cache, missionKey, key: None
HaveStoredReal = lambda cache, missionKey, key: None
HaveStoredBoolean = lambda cache, missionKey, key: None
HaveStoredUnit = lambda cache, missionKey, key: None
HaveStoredString = lambda cache, missionKey, key: None
FlushGameCache = lambda cache: None
FlushStoredMission = lambda cache, missionKey: None
FlushStoredInteger = lambda cache, missionKey, key: None
FlushStoredReal = lambda cache, missionKey, key: None
FlushStoredBoolean = lambda cache, missionKey, key: None
FlushStoredUnit = lambda cache, missionKey, key: None
FlushStoredString = lambda cache, missionKey, key: None
GetStoredInteger = lambda cache, missionKey, key: None
GetStoredReal = lambda cache, missionKey, key: None
GetStoredBoolean = lambda cache, missionKey, key: None
GetStoredString = lambda cache, missionKey, key: None
RestoreUnit = lambda cache, missionKey, key, forWhichPlayer, x, y, facing: None
InitHashtable = lambda : None
SaveInteger = lambda table, parentKey, childKey, value: None
SaveReal = lambda table, parentKey, childKey, value: None
SaveBoolean = lambda table, parentKey, childKey, value: None
SaveStr = lambda table, parentKey, childKey, value: None
SavePlayerHandle = lambda table, parentKey, childKey, whichPlayer: None
SaveWidgetHandle = lambda table, parentKey, childKey, whichWidget: None
SaveDestructableHandle = lambda table, parentKey, childKey, whichDestructable: None
SaveItemHandle = lambda table, parentKey, childKey, whichItem: None
SaveUnitHandle = lambda table, parentKey, childKey, whichUnit: None
SaveAbilityHandle = lambda table, parentKey, childKey, whichAbility: None
SaveTimerHandle = lambda table, parentKey, childKey, whichTimer: None
SaveTriggerHandle = lambda table, parentKey, childKey, whichTrigger: None
SaveTriggerConditionHandle = lambda table, parentKey, childKey, whichTriggercondition: None
SaveTriggerActionHandle = lambda table, parentKey, childKey, whichTriggeraction: None
SaveTriggerEventHandle = lambda table, parentKey, childKey, whichEvent: None
SaveForceHandle = lambda table, parentKey, childKey, whichForce: None
SaveGroupHandle = lambda table, parentKey, childKey, whichGroup: None
SaveLocationHandle = lambda table, parentKey, childKey, whichLocation: None
SaveRectHandle = lambda table, parentKey, childKey, whichRect: None
SaveBooleanExprHandle = lambda table, parentKey, childKey, whichBoolexpr: None
SaveSoundHandle = lambda table, parentKey, childKey, whichSound: None
SaveEffectHandle = lambda table, parentKey, childKey, whichEffect: None
SaveUnitPoolHandle = lambda table, parentKey, childKey, whichUnitpool: None
SaveItemPoolHandle = lambda table, parentKey, childKey, whichItempool: None
SaveQuestHandle = lambda table, parentKey, childKey, whichQuest: None
SaveQuestItemHandle = lambda table, parentKey, childKey, whichQuestitem: None
SaveDefeatConditionHandle = lambda table, parentKey, childKey, whichDefeatcondition: None
SaveTimerDialogHandle = lambda table, parentKey, childKey, whichTimerdialog: None
SaveLeaderboardHandle = lambda table, parentKey, childKey, whichLeaderboard: None
SaveMultiboardHandle = lambda table, parentKey, childKey, whichMultiboard: None
SaveMultiboardItemHandle = lambda table, parentKey, childKey, whichMultiboarditem: None
SaveTrackableHandle = lambda table, parentKey, childKey, whichTrackable: None
SaveDialogHandle = lambda table, parentKey, childKey, whichDialog: None
SaveButtonHandle = lambda table, parentKey, childKey, whichButton: None
SaveTextTagHandle = lambda table, parentKey, childKey, whichTexttag: None
SaveLightningHandle = lambda table, parentKey, childKey, whichLightning: None
SaveImageHandle = lambda table, parentKey, childKey, whichImage: None
SaveUbersplatHandle = lambda table, parentKey, childKey, whichUbersplat: None
SaveRegionHandle = lambda table, parentKey, childKey, whichRegion: None
SaveFogStateHandle = lambda table, parentKey, childKey, whichFogState: None
SaveFogModifierHandle = lambda table, parentKey, childKey, whichFogModifier: None
SaveAgentHandle = lambda table, parentKey, childKey, whichAgent: None
SaveHashtableHandle = lambda table, parentKey, childKey, whichHashtable: None
SaveFrameHandle = lambda table, parentKey, childKey, whichFrameHandle: None
LoadInteger = lambda table, parentKey, childKey: None
LoadReal = lambda table, parentKey, childKey: None
LoadBoolean = lambda table, parentKey, childKey: None
LoadStr = lambda table, parentKey, childKey: None
LoadPlayerHandle = lambda table, parentKey, childKey: None
LoadWidgetHandle = lambda table, parentKey, childKey: None
LoadDestructableHandle = lambda table, parentKey, childKey: None
LoadItemHandle = lambda table, parentKey, childKey: None
LoadUnitHandle = lambda table, parentKey, childKey: None
LoadAbilityHandle = lambda table, parentKey, childKey: None
LoadTimerHandle = lambda table, parentKey, childKey: None
LoadTriggerHandle = lambda table, parentKey, childKey: None
LoadTriggerConditionHandle = lambda table, parentKey, childKey: None
LoadTriggerActionHandle = lambda table, parentKey, childKey: None
LoadTriggerEventHandle = lambda table, parentKey, childKey: None
LoadForceHandle = lambda table, parentKey, childKey: None
LoadGroupHandle = lambda table, parentKey, childKey: None
LoadLocationHandle = lambda table, parentKey, childKey: None
LoadRectHandle = lambda table, parentKey, childKey: None
LoadBooleanExprHandle = lambda table, parentKey, childKey: None
LoadSoundHandle = lambda table, parentKey, childKey: None
LoadEffectHandle = lambda table, parentKey, childKey: None
LoadUnitPoolHandle = lambda table, parentKey, childKey: None
LoadItemPoolHandle = lambda table, parentKey, childKey: None
LoadQuestHandle = lambda table, parentKey, childKey: None
LoadQuestItemHandle = lambda table, parentKey, childKey: None
LoadDefeatConditionHandle = lambda table, parentKey, childKey: None
LoadTimerDialogHandle = lambda table, parentKey, childKey: None
LoadLeaderboardHandle = lambda table, parentKey, childKey: None
LoadMultiboardHandle = lambda table, parentKey, childKey: None
LoadMultiboardItemHandle = lambda table, parentKey, childKey: None
LoadTrackableHandle = lambda table, parentKey, childKey: None
LoadDialogHandle = lambda table, parentKey, childKey: None
LoadButtonHandle = lambda table, parentKey, childKey: None
LoadTextTagHandle = lambda table, parentKey, childKey: None
LoadLightningHandle = lambda table, parentKey, childKey: None
LoadImageHandle = lambda table, parentKey, childKey: None
LoadUbersplatHandle = lambda table, parentKey, childKey: None
LoadRegionHandle = lambda table, parentKey, childKey: None
LoadFogStateHandle = lambda table, parentKey, childKey: None
LoadFogModifierHandle = lambda table, parentKey, childKey: None
LoadHashtableHandle = lambda table, parentKey, childKey: None
LoadFrameHandle = lambda table, parentKey, childKey: None
HaveSavedInteger = lambda table, parentKey, childKey: None
HaveSavedReal = lambda table, parentKey, childKey: None
HaveSavedBoolean = lambda table, parentKey, childKey: None
HaveSavedString = lambda table, parentKey, childKey: None
HaveSavedHandle = lambda table, parentKey, childKey: None
RemoveSavedInteger = lambda table, parentKey, childKey: None
RemoveSavedReal = lambda table, parentKey, childKey: None
RemoveSavedBoolean = lambda table, parentKey, childKey: None
RemoveSavedString = lambda table, parentKey, childKey: None
RemoveSavedHandle = lambda table, parentKey, childKey: None
FlushParentHashtable = lambda table: None
FlushChildHashtable = lambda table, parentKey: None
GetRandomInt = lambda lowBound, highBound: None
GetRandomReal = lambda lowBound, highBound: None
CreateUnitPool = lambda : None
DestroyUnitPool = lambda whichPool: None
UnitPoolAddUnitType = lambda whichPool, unitId, weight: None
UnitPoolRemoveUnitType = lambda whichPool, unitId: None
PlaceRandomUnit = lambda whichPool, forWhichPlayer, x, y, facing: None
CreateItemPool = lambda : None
DestroyItemPool = lambda whichItemPool: None
ItemPoolAddItemType = lambda whichItemPool, itemId, weight: None
ItemPoolRemoveItemType = lambda whichItemPool, itemId: None
PlaceRandomItem = lambda whichItemPool, x, y: None
ChooseRandomCreep = lambda level: None
ChooseRandomNPBuilding = lambda : None
ChooseRandomItem = lambda level: None
ChooseRandomItemEx = lambda whichType, level: None
SetRandomSeed = lambda seed: None
SetTerrainFog = lambda a, b, c, d, e: None
ResetTerrainFog = lambda : None
SetUnitFog = lambda a, b, c, d, e: None
SetTerrainFogEx = lambda style, zstart, zend, density, red, green, blue: None
DisplayTextToPlayer = lambda toPlayer, x, y, message: None
DisplayTimedTextToPlayer = lambda toPlayer, x, y, duration, message: None
DisplayTimedTextFromPlayer = lambda toPlayer, x, y, duration, message: None
ClearTextMessages = lambda : None
SetDayNightModels = lambda terrainDNCFile, unitDNCFile: None
SetPortraitLight = lambda portraitDNCFile: None
SetSkyModel = lambda skyModelFile: None
EnableUserControl = lambda b: None
EnableUserUI = lambda b: None
SuspendTimeOfDay = lambda b: None
SetTimeOfDayScale = lambda r: None
GetTimeOfDayScale = lambda : None
ShowInterface = lambda flag, fadeDuration: None
PauseGame = lambda flag: None
UnitAddIndicator = lambda whichUnit, red, green, blue, alpha: None
AddIndicator = lambda whichWidget, red, green, blue, alpha: None
PingMinimap = lambda x, y, duration: None
PingMinimapEx = lambda x, y, duration, red, green, blue, extraEffects: None
CreateMinimapIconOnUnit = lambda whichUnit, red, green, blue, pingPath, fogVisibility: None
CreateMinimapIconAtLoc = lambda where, red, green, blue, pingPath, fogVisibility: None
CreateMinimapIcon = lambda x, y, red, green, blue, pingPath, fogVisibility: None
SkinManagerGetLocalPath = lambda key: None
DestroyMinimapIcon = lambda pingId: None
SetMinimapIconVisible = lambda whichMinimapIcon, visible: None
SetMinimapIconOrphanDestroy = lambda whichMinimapIcon, doDestroy: None
EnableOcclusion = lambda flag: None
SetIntroShotText = lambda introText: None
SetIntroShotModel = lambda introModelPath: None
EnableWorldFogBoundary = lambda b: None
PlayModelCinematic = lambda modelName: None
PlayCinematic = lambda movieName: None
ForceUIKey = lambda key: None
ForceUICancel = lambda : None
DisplayLoadDialog = lambda : None
SetAltMinimapIcon = lambda iconPath: None
DisableRestartMission = lambda flag: None
CreateTextTag = lambda : None
DestroyTextTag = lambda t: None
SetTextTagText = lambda t, s, height: None
SetTextTagPos = lambda t, x, y, heightOffset: None
SetTextTagPosUnit = lambda t, whichUnit, heightOffset: None
SetTextTagColor = lambda t, red, green, blue, alpha: None
SetTextTagVelocity = lambda t, xvel, yvel: None
SetTextTagVisibility = lambda t, flag: None
SetTextTagSuspended = lambda t, flag: None
SetTextTagPermanent = lambda t, flag: None
SetTextTagAge = lambda t, age: None
SetTextTagLifespan = lambda t, lifespan: None
SetTextTagFadepoint = lambda t, fadepoint: None
SetReservedLocalHeroButtons = lambda reserved: None
GetAllyColorFilterState = lambda : None
SetAllyColorFilterState = lambda state: None
GetCreepCampFilterState = lambda : None
SetCreepCampFilterState = lambda state: None
EnableMinimapFilterButtons = lambda enableAlly, enableCreep: None
EnableDragSelect = lambda state, ui: None
EnablePreSelect = lambda state, ui: None
EnableSelect = lambda state, ui: None
CreateTrackable = lambda trackableModelPath, x, y, facing: None
CreateQuest = lambda : None
DestroyQuest = lambda whichQuest: None
QuestSetTitle = lambda whichQuest, title: None
QuestSetDescription = lambda whichQuest, description: None
QuestSetIconPath = lambda whichQuest, iconPath: None
QuestSetRequired = lambda whichQuest, : None
QuestSetCompleted = lambda whichQuest, : None
QuestSetDiscovered = lambda whichQuest, discovered: None
QuestSetFailed = lambda whichQuest, : None
QuestSetEnabled = lambda whichQuest, : None
IsQuestRequired = lambda whichQuest: None
IsQuestCompleted = lambda whichQuest: None
IsQuestDiscovered = lambda whichQuest: None
IsQuestFailed = lambda whichQuest: None
IsQuestEnabled = lambda whichQuest: None
QuestCreateItem = lambda whichQuest: None
QuestItemSetDescription = lambda whichQuestItem, description: None
QuestItemSetCompleted = lambda whichQuestItem, completed: None
IsQuestItemCompleted = lambda whichQuestItem: None
CreateDefeatCondition = lambda : None
DestroyDefeatCondition = lambda whichCondition: None
DefeatConditionSetDescription = lambda whichCondition, description: None
FlashQuestDialogButton = lambda : None
ForceQuestDialogUpdate = lambda : None
CreateTimerDialog = lambda t: None
DestroyTimerDialog = lambda whichDialog: None
TimerDialogSetTitle = lambda whichDialog, title: None
TimerDialogSetTitleColor = lambda whichDialog, red, green, blue, alpha: None
TimerDialogSetTimeColor = lambda whichDialog, red, green, blue, alpha: None
TimerDialogSetSpeed = lambda whichDialog, speedMultFactor: None
TimerDialogDisplay = lambda whichDialog, display: None
IsTimerDialogDisplayed = lambda whichDialog: None
TimerDialogSetRealTimeRemaining = lambda whichDialog, timeRemaining: None
CreateLeaderboard = lambda : None
DestroyLeaderboard = lambda lb: None
LeaderboardDisplay = lambda lb, show: None
IsLeaderboardDisplayed = lambda lb: None
LeaderboardGetItemCount = lambda lb: None
LeaderboardSetSizeByItemCount = lambda lb, count: None
LeaderboardAddItem = lambda lb, label, value, p: None
LeaderboardRemoveItem = lambda lb, index: None
LeaderboardRemovePlayerItem = lambda lb, p: None
LeaderboardClear = lambda lb: None
LeaderboardSortItemsByValue = lambda lb, ascending: None
LeaderboardSortItemsByPlayer = lambda lb, ascending: None
LeaderboardSortItemsByLabel = lambda lb, ascending: None
LeaderboardHasPlayerItem = lambda lb, p: None
LeaderboardGetPlayerIndex = lambda lb, p: None
LeaderboardSetLabel = lambda lb, label: None
LeaderboardGetLabelText = lambda lb: None
PlayerSetLeaderboard = lambda toPlayer, lb: None
PlayerGetLeaderboard = lambda toPlayer: None
LeaderboardSetLabelColor = lambda lb, red, green, blue, alpha: None
LeaderboardSetValueColor = lambda lb, red, green, blue, alpha: None
LeaderboardSetStyle = lambda lb, showLabel, showNames, showValues, showIcons: None
LeaderboardSetItemValue = lambda lb, whichItem, val: None
LeaderboardSetItemLabel = lambda lb, whichItem, val: None
LeaderboardSetItemStyle = lambda lb, whichItem, showLabel, showValue, showIcon: None
LeaderboardSetItemLabelColor = lambda lb, whichItem, red, green, blue, alpha: None
LeaderboardSetItemValueColor = lambda lb, whichItem, red, green, blue, alpha: None
CreateMultiboard = lambda : None
DestroyMultiboard = lambda lb: None
MultiboardDisplay = lambda lb, show: None
IsMultiboardDisplayed = lambda lb: None
MultiboardMinimize = lambda lb, minimize: None
IsMultiboardMinimized = lambda lb: None
MultiboardClear = lambda lb: None
MultiboardSetTitleText = lambda lb, label: None
MultiboardGetTitleText = lambda lb: None
MultiboardSetTitleTextColor = lambda lb, red, green, blue, alpha: None
MultiboardGetRowCount = lambda lb: None
MultiboardGetColumnCount = lambda lb: None
MultiboardSetColumnCount = lambda lb, count: None
MultiboardSetRowCount = lambda lb, count: None
MultiboardSetItemsStyle = lambda lb, showValues, showIcons: None
MultiboardSetItemsValue = lambda lb, value: None
MultiboardSetItemsValueColor = lambda lb, red, green, blue, alpha: None
MultiboardSetItemsWidth = lambda lb, width: None
MultiboardSetItemsIcon = lambda lb, iconPath: None
MultiboardGetItem = lambda lb, row, column: None
MultiboardReleaseItem = lambda mbi: None
MultiboardSetItemStyle = lambda mbi, showValue, showIcon: None
MultiboardSetItemValue = lambda mbi, val: None
MultiboardSetItemValueColor = lambda mbi, red, green, blue, alpha: None
MultiboardSetItemWidth = lambda mbi, width: None
MultiboardSetItemIcon = lambda mbi, iconFileName: None
MultiboardSuppressDisplay = lambda flag: None
SetCameraPosition = lambda x, y: None
SetCameraQuickPosition = lambda x, y: None
SetCameraBounds = lambda x1, y1, x2, y2, x3, y3, x4, y4: None
StopCamera = lambda : None
ResetToGameCamera = lambda duration: None
PanCameraTo = lambda x, y: None
PanCameraToTimed = lambda x, y, duration: None
PanCameraToWithZ = lambda x, y, zOffsetDest: None
PanCameraToTimedWithZ = lambda x, y, zOffsetDest, duration: None
SetCinematicCamera = lambda cameraModelFile: None
SetCameraRotateMode = lambda x, y, radiansToSweep, duration: None
SetCameraField = lambda whichField, value, duration: None
AdjustCameraField = lambda whichField, offset, duration: None
SetCameraTargetController = lambda whichUnit, xoffset, yoffset, inheritOrientation: None
SetCameraOrientController = lambda whichUnit, xoffset, yoffset: None
CreateCameraSetup = lambda : None
CameraSetupSetField = lambda whichSetup, whichField, value, duration: None
CameraSetupGetField = lambda whichSetup, whichField: None
CameraSetupSetDestPosition = lambda whichSetup, x, y, duration: None
CameraSetupGetDestPositionLoc = lambda whichSetup: None
CameraSetupGetDestPositionX = lambda whichSetup: None
CameraSetupGetDestPositionY = lambda whichSetup: None
CameraSetupApply = lambda whichSetup, doPan, panTimed: None
CameraSetupApplyWithZ = lambda whichSetup, zDestOffset: None
CameraSetupApplyForceDuration = lambda whichSetup, doPan, forceDuration: None
CameraSetupApplyForceDurationWithZ = lambda whichSetup, zDestOffset, forceDuration: None
BlzCameraSetupSetLabel = lambda whichSetup, label: None
BlzCameraSetupGetLabel = lambda whichSetup: None
CameraSetTargetNoise = lambda mag, velocity: None
CameraSetSourceNoise = lambda mag, velocity: None
CameraSetTargetNoiseEx = lambda mag, velocity, vertOnly: None
CameraSetSourceNoiseEx = lambda mag, velocity, vertOnly: None
CameraSetSmoothingFactor = lambda factor: None
CameraSetFocalDistance = lambda distance: None
CameraSetDepthOfFieldScale = lambda scale: None
SetCineFilterTexture = lambda filename: None
SetCineFilterBlendMode = lambda whichMode: None
SetCineFilterTexMapFlags = lambda whichFlags: None
SetCineFilterStartUV = lambda minu, minv, maxu, maxv: None
SetCineFilterEndUV = lambda minu, minv, maxu, maxv: None
SetCineFilterStartColor = lambda red, green, blue, alpha: None
SetCineFilterEndColor = lambda red, green, blue, alpha: None
SetCineFilterDuration = lambda duration: None
DisplayCineFilter = lambda flag: None
IsCineFilterDisplayed = lambda : None
SetCinematicScene = lambda portraitUnitId, color, speakerTitle, text, sceneDuration, voiceoverDuration: None
EndCinematicScene = lambda : None
ForceCinematicSubtitles = lambda flag: None
SetCinematicAudio = lambda cinematicAudio: None
GetCameraMargin = lambda whichMargin: None
GetCameraBoundMinX = lambda : None
GetCameraBoundMinY = lambda : None
GetCameraBoundMaxX = lambda : None
GetCameraBoundMaxY = lambda : None
GetCameraField = lambda whichField: None
GetCameraTargetPositionX = lambda : None
GetCameraTargetPositionY = lambda : None
GetCameraTargetPositionZ = lambda : None
GetCameraTargetPositionLoc = lambda : None
GetCameraEyePositionX = lambda : None
GetCameraEyePositionY = lambda : None
GetCameraEyePositionZ = lambda : None
GetCameraEyePositionLoc = lambda : None
NewSoundEnvironment = lambda environmentName: None
CreateSound = lambda fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting: None
CreateSoundFilenameWithLabel = lambda fileName, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, SLKEntryName: None
CreateSoundFromLabel = lambda soundLabel, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate: None
CreateMIDISound = lambda soundLabel, fadeInRate, fadeOutRate: None
SetSoundParamsFromLabel = lambda soundHandle, soundLabel: None
SetSoundDistanceCutoff = lambda soundHandle, cutoff: None
SetSoundChannel = lambda soundHandle, channel: None
SetSoundVolume = lambda soundHandle, volume: None
SetSoundPitch = lambda soundHandle, pitch: None
SetSoundPlayPosition = lambda soundHandle, millisecs: None
SetSoundDistances = lambda soundHandle, minDist, maxDist: None
SetSoundConeAngles = lambda soundHandle, inside, outside, outsideVolume: None
SetSoundConeOrientation = lambda soundHandle, x, y, z: None
SetSoundPosition = lambda soundHandle, x, y, z: None
SetSoundVelocity = lambda soundHandle, x, y, z: None
AttachSoundToUnit = lambda soundHandle, whichUnit: None
StartSound = lambda soundHandle: None
StopSound = lambda soundHandle, killWhenDone, fadeOut: None
KillSoundWhenDone = lambda soundHandle: None
SetMapMusic = lambda musicName, random, index: None
ClearMapMusic = lambda : None
PlayMusic = lambda musicName: None
PlayMusicEx = lambda musicName, frommsecs, fadeinmsecs: None
StopMusic = lambda fadeOut: None
ResumeMusic = lambda : None
PlayThematicMusic = lambda musicFileName: None
PlayThematicMusicEx = lambda musicFileName, frommsecs: None
EndThematicMusic = lambda : None
SetMusicVolume = lambda volume: None
SetMusicPlayPosition = lambda millisecs: None
SetThematicMusicVolume = lambda volume: None
SetThematicMusicPlayPosition = lambda millisecs: None
SetSoundDuration = lambda soundHandle, duration: None
GetSoundDuration = lambda soundHandle: None
GetSoundFileDuration = lambda musicFileName: None
VolumeGroupSetVolume = lambda vgroup, scale: None
VolumeGroupReset = lambda : None
GetSoundIsPlaying = lambda soundHandle: None
GetSoundIsLoading = lambda soundHandle: None
RegisterStackedSound = lambda soundHandle, byPosition, rectwidth, rectheight: None
UnregisterStackedSound = lambda soundHandle, byPosition, rectwidth, rectheight: None
SetSoundFacialAnimationLabel = lambda soundHandle, animationLabel: None
SetSoundFacialAnimationGroupLabel = lambda soundHandle, groupLabel: None
SetSoundFacialAnimationSetFilepath = lambda soundHandle, animationSetFilepath: None
SetDialogueSpeakerNameKey = lambda soundHandle, speakerName: None
GetDialogueSpeakerNameKey = lambda soundHandle: None
SetDialogueTextKey = lambda soundHandle, dialogueText: None
GetDialogueTextKey = lambda soundHandle: None
AddWeatherEffect = lambda where, effectID: None
RemoveWeatherEffect = lambda whichEffect: None
EnableWeatherEffect = lambda whichEffect, enable: None
TerrainDeformCrater = lambda x, y, radius, depth, duration, permanent: None
TerrainDeformRipple = lambda x, y, radius, depth, duration, count, spaceWaves, timeWaves, radiusStartPct, limitNeg: None
TerrainDeformWave = lambda x, y, dirX, dirY, distance, speed, radius, depth, trailTime, count: None
TerrainDeformRandom = lambda x, y, radius, minDelta, maxDelta, duration, updateInterval: None
TerrainDeformStop = lambda deformation, duration: None
TerrainDeformStopAll = lambda : None
AddSpecialEffect = lambda modelName, x, y: None
AddSpecialEffectLoc = lambda modelName, where: None
AddSpecialEffectTarget = lambda modelName, targetWidget, attachPointName: None
DestroyEffect = lambda whichEffect: None
AddSpellEffect = lambda abilityString, t, x, y: None
AddSpellEffectLoc = lambda abilityString, t, where: None
AddSpellEffectById = lambda abilityId, t, x, y: None
AddSpellEffectByIdLoc = lambda abilityId, t, where: None
AddSpellEffectTarget = lambda modelName, t, targetWidget, attachPoint: None
AddSpellEffectTargetById = lambda abilityId, t, targetWidget, attachPoint: None
AddLightning = lambda codeName, checkVisibility, x1, y1, x2, y2: None
AddLightningEx = lambda codeName, checkVisibility, x1, y1, z1, x2, y2, z2: None
DestroyLightning = lambda whichBolt: None
MoveLightning = lambda whichBolt, checkVisibility, x1, y1, x2, y2: None
MoveLightningEx = lambda whichBolt, checkVisibility, x1, y1, z1, x2, y2, z2: None
GetLightningColorA = lambda whichBolt: None
GetLightningColorR = lambda whichBolt: None
GetLightningColorG = lambda whichBolt: None
GetLightningColorB = lambda whichBolt: None
SetLightningColor = lambda whichBolt, r, g, b, a: None
GetAbilityEffect = lambda abilityString, t, index: None
GetAbilityEffectById = lambda abilityId, t, index: None
GetAbilitySound = lambda abilityString, t: None
GetAbilitySoundById = lambda abilityId, t: None
GetTerrainCliffLevel = lambda x, y: None
SetWaterBaseColor = lambda red, green, blue, alpha: None
SetWaterDeforms = lambda val: None
GetTerrainType = lambda x, y: None
GetTerrainVariance = lambda x, y: None
SetTerrainType = lambda x, y, terrainType, variation, area, shape: None
IsTerrainPathable = lambda x, y, t: None
SetTerrainPathable = lambda x, y, t, flag: None
CreateImage = lambda file, sizeX, sizeY, sizeZ, posX, posY, posZ, originX, originY, originZ, imageType: None
DestroyImage = lambda whichImage: None
ShowImage = lambda whichImage, flag: None
SetImageConstantHeight = lambda whichImage, flag, height: None
SetImagePosition = lambda whichImage, x, y, z: None
SetImageColor = lambda whichImage, red, green, blue, alpha: None
SetImageRender = lambda whichImage, flag: None
SetImageRenderAlways = lambda whichImage, flag: None
SetImageAboveWater = lambda whichImage, flag, useWaterAlpha: None
SetImageType = lambda whichImage, imageType: None
CreateUbersplat = lambda x, y, name, red, green, blue, alpha, forcePaused, noBirthTime: None
DestroyUbersplat = lambda whichSplat: None
ResetUbersplat = lambda whichSplat: None
FinishUbersplat = lambda whichSplat: None
ShowUbersplat = lambda whichSplat, flag: None
SetUbersplatRender = lambda whichSplat, flag: None
SetUbersplatRenderAlways = lambda whichSplat, flag: None
SetBlight = lambda whichPlayer, x, y, radius, addBlight: None
SetBlightRect = lambda whichPlayer, r, addBlight: None
SetBlightPoint = lambda whichPlayer, x, y, addBlight: None
SetBlightLoc = lambda whichPlayer, whichLocation, radius, addBlight: None
CreateBlightedGoldmine = lambda id, x, y, face: None
IsPointBlighted = lambda x, y: None
SetDoodadAnimation = lambda x, y, radius, doodadID, nearestOnly, animName, animRandom: None
SetDoodadAnimationRect = lambda r, doodadID, animName, animRandom: None
StartMeleeAI = lambda num, : None
StartCampaignAI = lambda num, : None
CommandAI = lambda num, command, data: None
PauseCompAI = lambda p, : None
GetAIDifficulty = lambda : None
RemoveGuardPosition = lambda : None
RecycleGuardPosition = lambda : None
RemoveAllGuardPositions = lambda : None
Cheat = lambda cheatStr: None
IsNoVictoryCheat = lambda : None
IsNoDefeatCheat = lambda : None
Preload = lambda filename: None
PreloadEnd = lambda timeout: None
PreloadStart = lambda : None
PreloadRefresh = lambda : None
PreloadEndEx = lambda : None
PreloadGenClear = lambda : None
PreloadGenStart = lambda : None
PreloadGenEnd = lambda filename: None
Preloader = lambda filename: None
BlzHideCinematicPanels = lambda enable: None
AutomationSetTestType = lambda testType: None
AutomationTestStart = lambda testName: None
AutomationTestEnd = lambda : None
AutomationTestingFinished = lambda : None
BlzGetTriggerPlayerMouseX = lambda : None
BlzGetTriggerPlayerMouseY = lambda : None
BlzGetTriggerPlayerMousePosition = lambda : None
BlzGetTriggerPlayerMouseButton = lambda : None
BlzSetAbilityTooltip = lambda abilCode, tooltip, level: None
BlzSetAbilityActivatedTooltip = lambda abilCode, tooltip, level: None
BlzSetAbilityExtendedTooltip = lambda abilCode, extendedTooltip, level: None
BlzSetAbilityActivatedExtendedTooltip = lambda abilCode, extendedTooltip, level: None
BlzSetAbilityResearchTooltip = lambda abilCode, researchTooltip, level: None
BlzSetAbilityResearchExtendedTooltip = lambda abilCode, researchExtendedTooltip, level: None
BlzGetAbilityTooltip = lambda abilCode, level: None
BlzGetAbilityActivatedTooltip = lambda abilCode, level: None
BlzGetAbilityExtendedTooltip = lambda abilCode, level: None
BlzGetAbilityActivatedExtendedTooltip = lambda abilCode, level: None
BlzGetAbilityResearchTooltip = lambda abilCode, level: None
BlzGetAbilityResearchExtendedTooltip = lambda abilCode, level: None
BlzSetAbilityIcon = lambda abilCode, iconPath: None
BlzGetAbilityIcon = lambda abilCode: None
BlzSetAbilityActivatedIcon = lambda abilCode, iconPath: None
BlzGetAbilityActivatedIcon = lambda abilCode: None
BlzGetAbilityPosX = lambda abilCode: None
BlzGetAbilityPosY = lambda abilCode: None
BlzSetAbilityPosX = lambda abilCode, x: None
BlzSetAbilityPosY = lambda abilCode, y: None
BlzGetAbilityActivatedPosX = lambda abilCode: None
BlzGetAbilityActivatedPosY = lambda abilCode: None
BlzSetAbilityActivatedPosX = lambda abilCode, x: None
BlzSetAbilityActivatedPosY = lambda abilCode, y: None
BlzGetUnitMaxHP = lambda whichUnit: None
BlzSetUnitMaxHP = lambda whichUnit, hp: None
BlzGetUnitMaxMana = lambda whichUnit: None
BlzSetUnitMaxMana = lambda whichUnit, mana: None
BlzSetItemName = lambda whichItem, name: None
BlzSetItemDescription = lambda whichItem, description: None
BlzGetItemDescription = lambda whichItem: None
BlzSetItemTooltip = lambda whichItem, tooltip: None
BlzGetItemTooltip = lambda whichItem: None
BlzSetItemExtendedTooltip = lambda whichItem, extendedTooltip: None
BlzGetItemExtendedTooltip = lambda whichItem: None
BlzSetItemIconPath = lambda whichItem, iconPath: None
BlzGetItemIconPath = lambda whichItem: None
BlzSetUnitName = lambda whichUnit, name: None
BlzSetHeroProperName = lambda whichUnit, heroProperName: None
BlzGetUnitBaseDamage = lambda whichUnit, weaponIndex: None
BlzSetUnitBaseDamage = lambda whichUnit, baseDamage, weaponIndex: None
BlzGetUnitDiceNumber = lambda whichUnit, weaponIndex: None
BlzSetUnitDiceNumber = lambda whichUnit, diceNumber, weaponIndex: None
BlzGetUnitDiceSides = lambda whichUnit, weaponIndex: None
BlzSetUnitDiceSides = lambda whichUnit, diceSides, weaponIndex: None
BlzGetUnitAttackCooldown = lambda whichUnit, weaponIndex: None
BlzSetUnitAttackCooldown = lambda whichUnit, cooldown, weaponIndex: None
BlzSetSpecialEffectColorByPlayer = lambda whichEffect, whichPlayer: None
BlzSetSpecialEffectColor = lambda whichEffect, r, g, b: None
BlzSetSpecialEffectAlpha = lambda whichEffect, alpha: None
BlzSetSpecialEffectScale = lambda whichEffect, scale: None
BlzSetSpecialEffectPosition = lambda whichEffect, x, y, z: None
BlzSetSpecialEffectHeight = lambda whichEffect, height: None
BlzSetSpecialEffectTimeScale = lambda whichEffect, timeScale: None
BlzSetSpecialEffectTime = lambda whichEffect, time: None
BlzSetSpecialEffectOrientation = lambda whichEffect, yaw, pitch, roll: None
BlzSetSpecialEffectYaw = lambda whichEffect, yaw: None
BlzSetSpecialEffectPitch = lambda whichEffect, pitch: None
BlzSetSpecialEffectRoll = lambda whichEffect, roll: None
BlzSetSpecialEffectX = lambda whichEffect, x: None
BlzSetSpecialEffectY = lambda whichEffect, y: None
BlzSetSpecialEffectZ = lambda whichEffect, z: None
BlzSetSpecialEffectPositionLoc = lambda whichEffect, loc: None
BlzGetLocalSpecialEffectX = lambda whichEffect: None
BlzGetLocalSpecialEffectY = lambda whichEffect: None
BlzGetLocalSpecialEffectZ = lambda whichEffect: None
BlzSpecialEffectClearSubAnimations = lambda whichEffect: None
BlzSpecialEffectRemoveSubAnimation = lambda whichEffect, whichSubAnim: None
BlzSpecialEffectAddSubAnimation = lambda whichEffect, whichSubAnim: None
BlzPlaySpecialEffect = lambda whichEffect, whichAnim: None
BlzPlaySpecialEffectWithTimeScale = lambda whichEffect, whichAnim, timeScale: None
BlzGetAnimName = lambda whichAnim: None
BlzGetUnitArmor = lambda whichUnit: None
BlzSetUnitArmor = lambda whichUnit, armorAmount: None
BlzUnitHideAbility = lambda whichUnit, abilId, flag: None
BlzUnitDisableAbility = lambda whichUnit, abilId, flag, hideUI: None
BlzUnitCancelTimedLife = lambda whichUnit: None
BlzIsUnitSelectable = lambda whichUnit: None
BlzIsUnitInvulnerable = lambda whichUnit: None
BlzUnitInterruptAttack = lambda whichUnit: None
BlzGetUnitCollisionSize = lambda whichUnit: None
BlzGetAbilityManaCost = lambda abilId, level: None
BlzGetAbilityCooldown = lambda abilId, level: None
BlzSetUnitAbilityCooldown = lambda whichUnit, abilId, level, cooldown: None
BlzGetUnitAbilityCooldown = lambda whichUnit, abilId, level: None
BlzGetUnitAbilityCooldownRemaining = lambda whichUnit, abilId: None
BlzEndUnitAbilityCooldown = lambda whichUnit, abilCode: None
BlzStartUnitAbilityCooldown = lambda whichUnit, abilCode, cooldown: None
BlzGetUnitAbilityManaCost = lambda whichUnit, abilId, level: None
BlzSetUnitAbilityManaCost = lambda whichUnit, abilId, level, manaCost: None
BlzGetLocalUnitZ = lambda whichUnit: None
BlzDecPlayerTechResearched = lambda whichPlayer, techid, levels: None
BlzSetEventDamage = lambda damage: None
BlzGetEventDamageTarget = lambda : None
BlzGetEventAttackType = lambda : None
BlzGetEventDamageType = lambda : None
BlzGetEventWeaponType = lambda : None
BlzSetEventAttackType = lambda attackType: None
BlzSetEventDamageType = lambda damageType: None
BlzSetEventWeaponType = lambda weaponType: None
BlzGetEventIsAttack = lambda : None
RequestExtraIntegerData = lambda dataType, whichPlayer, param1, param2, param3, param4, param5, param6: None
RequestExtraBooleanData = lambda dataType, whichPlayer, param1, param2, param3, param4, param5, param6: None
RequestExtraStringData = lambda dataType, whichPlayer, param1, param2, param3, param4, param5, param6: None
RequestExtraRealData = lambda dataType, whichPlayer, param1, param2, param3, param4, param5, param6: None
BlzGetUnitZ = lambda whichUnit: None
BlzEnableSelections = lambda enableSelection, enableSelectionCircle: None
BlzIsSelectionEnabled = lambda : None
BlzIsSelectionCircleEnabled = lambda : None
BlzCameraSetupApplyForceDurationSmooth = lambda whichSetup, doPan, forcedDuration, easeInDuration, easeOutDuration, smoothFactor: None
BlzEnableTargetIndicator = lambda enable: None
BlzIsTargetIndicatorEnabled = lambda : None
BlzShowTerrain = lambda show: None
BlzShowSkyBox = lambda show: None
BlzStartRecording = lambda fps: None
BlzEndRecording = lambda : None
BlzShowUnitTeamGlow = lambda whichUnit, show: None
BlzGetOriginFrame = lambda frameType, index: None
BlzEnableUIAutoPosition = lambda enable: None
BlzHideOriginFrames = lambda enable: None
BlzConvertColor = lambda a, r, g, b: None
BlzLoadTOCFile = lambda TOCFile: None
BlzCreateFrame = lambda name, owner, priority, createContext: None
BlzCreateSimpleFrame = lambda name, owner, createContext: None
BlzCreateFrameByType = lambda typeName, name, owner, inherits, createContext: None
BlzDestroyFrame = lambda frame: None
BlzFrameSetPoint = lambda frame, point, relative, relativePoint, x, y: None
BlzFrameSetAbsPoint = lambda frame, point, x, y: None
BlzFrameClearAllPoints = lambda frame: None
BlzFrameSetAllPoints = lambda frame, relative: None
BlzFrameSetVisible = lambda frame, visible: None
BlzFrameIsVisible = lambda frame: None
BlzGetFrameByName = lambda name, createContext: None
BlzFrameGetName = lambda frame: None
BlzFrameClick = lambda frame: None
BlzFrameSetText = lambda frame, text: None
BlzFrameGetText = lambda frame: None
BlzFrameAddText = lambda frame, text: None
BlzFrameSetTextSizeLimit = lambda frame, size: None
BlzFrameGetTextSizeLimit = lambda frame: None
BlzFrameSetTextColor = lambda frame, color: None
BlzFrameSetFocus = lambda frame, flag: None
BlzFrameSetModel = lambda frame, modelFile, cameraIndex: None
BlzFrameSetEnable = lambda frame, enabled: None
BlzFrameGetEnable = lambda frame: None
BlzFrameSetAlpha = lambda frame, alpha: None
BlzFrameGetAlpha = lambda frame: None
BlzFrameSetSpriteAnimate = lambda frame, primaryProp, flags: None
BlzFrameSetTexture = lambda frame, texFile, flag, blend: None
BlzFrameSetScale = lambda frame, scale: None
BlzFrameSetTooltip = lambda frame, tooltip: None
BlzFrameCageMouse = lambda frame, enable: None
BlzFrameSetValue = lambda frame, value: None
BlzFrameGetValue = lambda frame: None
BlzFrameSetMinMaxValue = lambda frame, minValue, maxValue: None
BlzFrameSetStepSize = lambda frame, stepSize: None
BlzFrameSetSize = lambda frame, width, height: None
BlzFrameSetVertexColor = lambda frame, color: None
BlzFrameSetLevel = lambda frame, level: None
BlzFrameSetParent = lambda frame, parent: None
BlzFrameGetParent = lambda frame: None
BlzFrameGetHeight = lambda frame: None
BlzFrameGetWidth = lambda frame: None
BlzFrameSetFont = lambda frame, fileName, height, flags: None
BlzFrameSetTextAlignment = lambda frame, vert, horz: None
BlzFrameGetChildrenCount = lambda frame: None
BlzFrameGetChild = lambda frame, index: None
BlzTriggerRegisterFrameEvent = lambda whichTrigger, frame, eventId: None
BlzGetTriggerFrame = lambda : None
BlzGetTriggerFrameEvent = lambda : None
BlzGetTriggerFrameValue = lambda : None
BlzGetTriggerFrameText = lambda : None
BlzTriggerRegisterPlayerSyncEvent = lambda whichTrigger, whichPlayer, prefix, fromServer: None
BlzSendSyncData = lambda prefix, data: None
BlzGetTriggerSyncPrefix = lambda : None
BlzGetTriggerSyncData = lambda : None
BlzTriggerRegisterPlayerKeyEvent = lambda whichTrigger, whichPlayer, key, metaKey, keyDown: None
BlzGetTriggerPlayerKey = lambda : None
BlzGetTriggerPlayerMetaKey = lambda : None
BlzGetTriggerPlayerIsKeyDown = lambda : None
BlzEnableCursor = lambda enable: None
BlzSetMousePos = lambda x, y: None
BlzGetLocalClientWidth = lambda : None
BlzGetLocalClientHeight = lambda : None
BlzIsLocalClientActive = lambda : None
BlzGetMouseFocusUnit = lambda : None
BlzChangeMinimapTerrainTex = lambda texFile: None
BlzGetLocale = lambda : None
BlzGetSpecialEffectScale = lambda whichEffect: None
BlzSetSpecialEffectMatrixScale = lambda whichEffect, x, y, z: None
BlzResetSpecialEffectMatrix = lambda whichEffect: None
BlzGetUnitAbility = lambda whichUnit, abilId: None
BlzGetUnitAbilityByIndex = lambda whichUnit, index: None
BlzDisplayChatMessage = lambda whichPlayer, recipient, message: None
BlzPauseUnitEx = lambda whichUnit, flag: None
BlzSetUnitFacingEx = lambda whichUnit, facingAngle: None
CreateCommandButtonEffect = lambda abilityId, order: None
CreateUpgradeCommandButtonEffect = lambda whichUprgade: None
CreateLearnCommandButtonEffect = lambda abilityId: None
DestroyCommandButtonEffect = lambda whichEffect: None
BlzBitOr = lambda x, y: None
BlzBitAnd = lambda x, y: None
BlzBitXor = lambda x, y: None
BlzGetAbilityBooleanField = lambda whichAbility, whichField: None
BlzGetAbilityIntegerField = lambda whichAbility, whichField: None
BlzGetAbilityRealField = lambda whichAbility, whichField: None
BlzGetAbilityStringField = lambda whichAbility, whichField: None
BlzGetAbilityBooleanLevelField = lambda whichAbility, whichField, level: None
BlzGetAbilityIntegerLevelField = lambda whichAbility, whichField, level: None
BlzGetAbilityRealLevelField = lambda whichAbility, whichField, level: None
BlzGetAbilityStringLevelField = lambda whichAbility, whichField, level: None
BlzGetAbilityBooleanLevelArrayField = lambda whichAbility, whichField, level, index: None
BlzGetAbilityIntegerLevelArrayField = lambda whichAbility, whichField, level, index: None
BlzGetAbilityRealLevelArrayField = lambda whichAbility, whichField, level, index: None
BlzGetAbilityStringLevelArrayField = lambda whichAbility, whichField, level, index: None
BlzSetAbilityBooleanField = lambda whichAbility, whichField, value: None
BlzSetAbilityIntegerField = lambda whichAbility, whichField, value: None
BlzSetAbilityRealField = lambda whichAbility, whichField, value: None
BlzSetAbilityStringField = lambda whichAbility, whichField, value: None
BlzSetAbilityBooleanLevelField = lambda whichAbility, whichField, level, value: None
BlzSetAbilityIntegerLevelField = lambda whichAbility, whichField, level, value: None
BlzSetAbilityRealLevelField = lambda whichAbility, whichField, level, value: None
BlzSetAbilityStringLevelField = lambda whichAbility, whichField, level, value: None
BlzSetAbilityBooleanLevelArrayField = lambda whichAbility, whichField, level, index, value: None
BlzSetAbilityIntegerLevelArrayField = lambda whichAbility, whichField, level, index, value: None
BlzSetAbilityRealLevelArrayField = lambda whichAbility, whichField, level, index, value: None
BlzSetAbilityStringLevelArrayField = lambda whichAbility, whichField, level, index, value: None
BlzAddAbilityBooleanLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzAddAbilityIntegerLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzAddAbilityRealLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzAddAbilityStringLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityBooleanLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityIntegerLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityRealLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzRemoveAbilityStringLevelArrayField = lambda whichAbility, whichField, level, value: None
BlzGetItemAbilityByIndex = lambda whichItem, index: None
BlzGetItemAbility = lambda whichItem, abilCode: None
BlzItemAddAbility = lambda whichItem, abilCode: None
BlzGetItemBooleanField = lambda whichItem, whichField: None
BlzGetItemIntegerField = lambda whichItem, whichField: None
BlzGetItemRealField = lambda whichItem, whichField: None
BlzGetItemStringField = lambda whichItem, whichField: None
BlzSetItemBooleanField = lambda whichItem, whichField, value: None
BlzSetItemIntegerField = lambda whichItem, whichField, value: None
BlzSetItemRealField = lambda whichItem, whichField, value: None
BlzSetItemStringField = lambda whichItem, whichField, value: None
BlzItemRemoveAbility = lambda whichItem, abilCode: None
BlzGetUnitBooleanField = lambda whichUnit, whichField: None
BlzGetUnitIntegerField = lambda whichUnit, whichField: None
BlzGetUnitRealField = lambda whichUnit, whichField: None
BlzGetUnitStringField = lambda whichUnit, whichField: None
BlzSetUnitBooleanField = lambda whichUnit, whichField, value: None
BlzSetUnitIntegerField = lambda whichUnit, whichField, value: None
BlzSetUnitRealField = lambda whichUnit, whichField, value: None
BlzSetUnitStringField = lambda whichUnit, whichField, value: None
BlzGetUnitWeaponBooleanField = lambda whichUnit, whichField, index: None
BlzGetUnitWeaponIntegerField = lambda whichUnit, whichField, index: None
BlzGetUnitWeaponRealField = lambda whichUnit, whichField, index: None
BlzGetUnitWeaponStringField = lambda whichUnit, whichField, index: None
BlzSetUnitWeaponBooleanField = lambda whichUnit, whichField, index, value: None
BlzSetUnitWeaponIntegerField = lambda whichUnit, whichField, index, value: None
BlzSetUnitWeaponRealField = lambda whichUnit, whichField, index, value: None
BlzSetUnitWeaponStringField = lambda whichUnit, whichField, index, value: None
BlzGetUnitSkin = lambda whichUnit: None
BlzGetItemSkin = lambda whichItem: None
BlzSetUnitSkin = lambda whichUnit, skinId: None
BlzSetItemSkin = lambda whichItem, skinId: None
BlzCreateItemWithSkin = lambda itemid, x, y, skinId: None
BlzCreateUnitWithSkin = lambda id, unitid, x, y, face, skinId: None
BlzCreateDestructableWithSkin = lambda objectid, x, y, face, scale, variation, skinId: None
BlzCreateDestructableZWithSkin = lambda objectid, x, y, z, face, scale, variation, skinId: None
BlzCreateDeadDestructableWithSkin = lambda objectid, x, y, face, scale, variation, skinId: None
BlzCreateDeadDestructableZWithSkin = lambda objectid, x, y, z, face, scale, variation, skinId: None
BlzGetPlayerTownHallCount = lambda whichPlayer: None
FALSE = False
TRUE = True
JASS_MAX_ARRAY_SIZE = 32768
PLAYER_NEUTRAL_PASSIVE = GetPlayerNeutralPassive()
PLAYER_NEUTRAL_AGGRESSIVE = GetPlayerNeutralAggressive()
PLAYER_COLOR_RED = ConvertPlayerColor(0)
PLAYER_COLOR_BLUE = ConvertPlayerColor(1)
PLAYER_COLOR_CYAN = ConvertPlayerColor(2)
PLAYER_COLOR_PURPLE = ConvertPlayerColor(3)
PLAYER_COLOR_YELLOW = ConvertPlayerColor(4)
PLAYER_COLOR_ORANGE = ConvertPlayerColor(5)
PLAYER_COLOR_GREEN = ConvertPlayerColor(6)
PLAYER_COLOR_PINK = ConvertPlayerColor(7)
PLAYER_COLOR_LIGHT_GRAY = ConvertPlayerColor(8)
PLAYER_COLOR_LIGHT_BLUE = ConvertPlayerColor(9)
PLAYER_COLOR_AQUA = ConvertPlayerColor(10)
PLAYER_COLOR_BROWN = ConvertPlayerColor(11)
PLAYER_COLOR_MAROON = ConvertPlayerColor(12)
PLAYER_COLOR_NAVY = ConvertPlayerColor(13)
PLAYER_COLOR_TURQUOISE = ConvertPlayerColor(14)
PLAYER_COLOR_VIOLET = ConvertPlayerColor(15)
PLAYER_COLOR_WHEAT = ConvertPlayerColor(16)
PLAYER_COLOR_PEACH = ConvertPlayerColor(17)
PLAYER_COLOR_MINT = ConvertPlayerColor(18)
PLAYER_COLOR_LAVENDER = ConvertPlayerColor(19)
PLAYER_COLOR_COAL = ConvertPlayerColor(20)
PLAYER_COLOR_SNOW = ConvertPlayerColor(21)
PLAYER_COLOR_EMERALD = ConvertPlayerColor(22)
PLAYER_COLOR_PEANUT = ConvertPlayerColor(23)
RACE_HUMAN = ConvertRace(1)
RACE_ORC = ConvertRace(2)
RACE_UNDEAD = ConvertRace(3)
RACE_NIGHTELF = ConvertRace(4)
RACE_DEMON = ConvertRace(5)
RACE_OTHER = ConvertRace(7)
PLAYER_GAME_RESULT_VICTORY = ConvertPlayerGameResult(0)
PLAYER_GAME_RESULT_DEFEAT = ConvertPlayerGameResult(1)
PLAYER_GAME_RESULT_TIE = ConvertPlayerGameResult(2)
PLAYER_GAME_RESULT_NEUTRAL = ConvertPlayerGameResult(3)
ALLIANCE_PASSIVE = ConvertAllianceType(0)
ALLIANCE_HELP_REQUEST = ConvertAllianceType(1)
ALLIANCE_HELP_RESPONSE = ConvertAllianceType(2)
ALLIANCE_SHARED_XP = ConvertAllianceType(3)
ALLIANCE_SHARED_SPELLS = ConvertAllianceType(4)
ALLIANCE_SHARED_VISION = ConvertAllianceType(5)
ALLIANCE_SHARED_CONTROL = ConvertAllianceType(6)
ALLIANCE_RESCUABLE = ConvertAllianceType(8)
ALLIANCE_SHARED_VISION_FORCED = ConvertAllianceType(9)
VERSION_REIGN_OF_CHAOS = ConvertVersion(0)
VERSION_FROZEN_THRONE = ConvertVersion(1)
ATTACK_TYPE_NORMAL = ConvertAttackType(0)
ATTACK_TYPE_MELEE = ConvertAttackType(1)
ATTACK_TYPE_PIERCE = ConvertAttackType(2)
ATTACK_TYPE_SIEGE = ConvertAttackType(3)
ATTACK_TYPE_MAGIC = ConvertAttackType(4)
ATTACK_TYPE_CHAOS = ConvertAttackType(5)
ATTACK_TYPE_HERO = ConvertAttackType(6)
DAMAGE_TYPE_UNKNOWN = ConvertDamageType(0)
DAMAGE_TYPE_NORMAL = ConvertDamageType(4)
DAMAGE_TYPE_ENHANCED = ConvertDamageType(5)
DAMAGE_TYPE_FIRE = ConvertDamageType(8)
DAMAGE_TYPE_COLD = ConvertDamageType(9)
DAMAGE_TYPE_LIGHTNING = ConvertDamageType(10)
DAMAGE_TYPE_POISON = ConvertDamageType(11)
DAMAGE_TYPE_DISEASE = ConvertDamageType(12)
DAMAGE_TYPE_DIVINE = ConvertDamageType(13)
DAMAGE_TYPE_MAGIC = ConvertDamageType(14)
DAMAGE_TYPE_SONIC = ConvertDamageType(15)
DAMAGE_TYPE_ACID = ConvertDamageType(16)
DAMAGE_TYPE_FORCE = ConvertDamageType(17)
DAMAGE_TYPE_DEATH = ConvertDamageType(18)
DAMAGE_TYPE_MIND = ConvertDamageType(19)
DAMAGE_TYPE_PLANT = ConvertDamageType(20)
DAMAGE_TYPE_DEFENSIVE = ConvertDamageType(21)
DAMAGE_TYPE_DEMOLITION = ConvertDamageType(22)
DAMAGE_TYPE_SLOW_POISON = ConvertDamageType(23)
DAMAGE_TYPE_SPIRIT_LINK = ConvertDamageType(24)
DAMAGE_TYPE_SHADOW_STRIKE = ConvertDamageType(25)
DAMAGE_TYPE_UNIVERSAL = ConvertDamageType(26)
WEAPON_TYPE_WHOKNOWS = ConvertWeaponType(0)
WEAPON_TYPE_METAL_LIGHT_CHOP = ConvertWeaponType(1)
WEAPON_TYPE_METAL_MEDIUM_CHOP = ConvertWeaponType(2)
WEAPON_TYPE_METAL_HEAVY_CHOP = ConvertWeaponType(3)
WEAPON_TYPE_METAL_LIGHT_SLICE = ConvertWeaponType(4)
WEAPON_TYPE_METAL_MEDIUM_SLICE = ConvertWeaponType(5)
WEAPON_TYPE_METAL_HEAVY_SLICE = ConvertWeaponType(6)
WEAPON_TYPE_METAL_MEDIUM_BASH = ConvertWeaponType(7)
WEAPON_TYPE_METAL_HEAVY_BASH = ConvertWeaponType(8)
WEAPON_TYPE_METAL_MEDIUM_STAB = ConvertWeaponType(9)
WEAPON_TYPE_METAL_HEAVY_STAB = ConvertWeaponType(10)
WEAPON_TYPE_WOOD_LIGHT_SLICE = ConvertWeaponType(11)
WEAPON_TYPE_WOOD_MEDIUM_SLICE = ConvertWeaponType(12)
WEAPON_TYPE_WOOD_HEAVY_SLICE = ConvertWeaponType(13)
WEAPON_TYPE_WOOD_LIGHT_BASH = ConvertWeaponType(14)
WEAPON_TYPE_WOOD_MEDIUM_BASH = ConvertWeaponType(15)
WEAPON_TYPE_WOOD_HEAVY_BASH = ConvertWeaponType(16)
WEAPON_TYPE_WOOD_LIGHT_STAB = ConvertWeaponType(17)
WEAPON_TYPE_WOOD_MEDIUM_STAB = ConvertWeaponType(18)
WEAPON_TYPE_CLAW_LIGHT_SLICE = ConvertWeaponType(19)
WEAPON_TYPE_CLAW_MEDIUM_SLICE = ConvertWeaponType(20)
WEAPON_TYPE_CLAW_HEAVY_SLICE = ConvertWeaponType(21)
WEAPON_TYPE_AXE_MEDIUM_CHOP = ConvertWeaponType(22)
WEAPON_TYPE_ROCK_HEAVY_BASH = ConvertWeaponType(23)
PATHING_TYPE_ANY = ConvertPathingType(0)
PATHING_TYPE_WALKABILITY = ConvertPathingType(1)
PATHING_TYPE_FLYABILITY = ConvertPathingType(2)
PATHING_TYPE_BUILDABILITY = ConvertPathingType(3)
PATHING_TYPE_PEONHARVESTPATHING = ConvertPathingType(4)
PATHING_TYPE_BLIGHTPATHING = ConvertPathingType(5)
PATHING_TYPE_FLOATABILITY = ConvertPathingType(6)
PATHING_TYPE_AMPHIBIOUSPATHING = ConvertPathingType(7)
MOUSE_BUTTON_TYPE_LEFT = ConvertMouseButtonType(1)
MOUSE_BUTTON_TYPE_MIDDLE = ConvertMouseButtonType(2)
MOUSE_BUTTON_TYPE_RIGHT = ConvertMouseButtonType(3)
ANIM_TYPE_BIRTH = ConvertAnimType(0)
ANIM_TYPE_DEATH = ConvertAnimType(1)
ANIM_TYPE_DECAY = ConvertAnimType(2)
ANIM_TYPE_DISSIPATE = ConvertAnimType(3)
ANIM_TYPE_STAND = ConvertAnimType(4)
ANIM_TYPE_WALK = ConvertAnimType(5)
ANIM_TYPE_ATTACK = ConvertAnimType(6)
ANIM_TYPE_MORPH = ConvertAnimType(7)
ANIM_TYPE_SLEEP = ConvertAnimType(8)
ANIM_TYPE_SPELL = ConvertAnimType(9)
ANIM_TYPE_PORTRAIT = ConvertAnimType(10)
SUBANIM_TYPE_ROOTED = ConvertSubAnimType(11)
SUBANIM_TYPE_ALTERNATE_EX = ConvertSubAnimType(12)
SUBANIM_TYPE_LOOPING = ConvertSubAnimType(13)
SUBANIM_TYPE_SLAM = ConvertSubAnimType(14)
SUBANIM_TYPE_THROW = ConvertSubAnimType(15)
SUBANIM_TYPE_SPIKED = ConvertSubAnimType(16)
SUBANIM_TYPE_FAST = ConvertSubAnimType(17)
SUBANIM_TYPE_SPIN = ConvertSubAnimType(18)
SUBANIM_TYPE_READY = ConvertSubAnimType(19)
SUBANIM_TYPE_CHANNEL = ConvertSubAnimType(20)
SUBANIM_TYPE_DEFEND = ConvertSubAnimType(21)
SUBANIM_TYPE_VICTORY = ConvertSubAnimType(22)
SUBANIM_TYPE_TURN = ConvertSubAnimType(23)
SUBANIM_TYPE_LEFT = ConvertSubAnimType(24)
SUBANIM_TYPE_RIGHT = ConvertSubAnimType(25)
SUBANIM_TYPE_FIRE = ConvertSubAnimType(26)
SUBANIM_TYPE_FLESH = ConvertSubAnimType(27)
SUBANIM_TYPE_HIT = ConvertSubAnimType(28)
SUBANIM_TYPE_WOUNDED = ConvertSubAnimType(29)
SUBANIM_TYPE_LIGHT = ConvertSubAnimType(30)
SUBANIM_TYPE_MODERATE = ConvertSubAnimType(31)
SUBANIM_TYPE_SEVERE = ConvertSubAnimType(32)
SUBANIM_TYPE_CRITICAL = ConvertSubAnimType(33)
SUBANIM_TYPE_COMPLETE = ConvertSubAnimType(34)
SUBANIM_TYPE_GOLD = ConvertSubAnimType(35)
SUBANIM_TYPE_LUMBER = ConvertSubAnimType(36)
SUBANIM_TYPE_WORK = ConvertSubAnimType(37)
SUBANIM_TYPE_TALK = ConvertSubAnimType(38)
SUBANIM_TYPE_FIRST = ConvertSubAnimType(39)
SUBANIM_TYPE_SECOND = ConvertSubAnimType(40)
SUBANIM_TYPE_THIRD = ConvertSubAnimType(41)
SUBANIM_TYPE_FOURTH = ConvertSubAnimType(42)
SUBANIM_TYPE_FIFTH = ConvertSubAnimType(43)
SUBANIM_TYPE_ONE = ConvertSubAnimType(44)
SUBANIM_TYPE_TWO = ConvertSubAnimType(45)
SUBANIM_TYPE_THREE = ConvertSubAnimType(46)
SUBANIM_TYPE_FOUR = ConvertSubAnimType(47)
SUBANIM_TYPE_FIVE = ConvertSubAnimType(48)
SUBANIM_TYPE_SMALL = ConvertSubAnimType(49)
SUBANIM_TYPE_MEDIUM = ConvertSubAnimType(50)
SUBANIM_TYPE_LARGE = ConvertSubAnimType(51)
SUBANIM_TYPE_UPGRADE = ConvertSubAnimType(52)
SUBANIM_TYPE_DRAIN = ConvertSubAnimType(53)
SUBANIM_TYPE_FILL = ConvertSubAnimType(54)
SUBANIM_TYPE_CHAINLIGHTNING = ConvertSubAnimType(55)
SUBANIM_TYPE_EATTREE = ConvertSubAnimType(56)
SUBANIM_TYPE_PUKE = ConvertSubAnimType(57)
SUBANIM_TYPE_FLAIL = ConvertSubAnimType(58)
SUBANIM_TYPE_OFF = ConvertSubAnimType(59)
SUBANIM_TYPE_SWIM = ConvertSubAnimType(60)
SUBANIM_TYPE_ENTANGLE = ConvertSubAnimType(61)
SUBANIM_TYPE_BERSERK = ConvertSubAnimType(62)
RACE_PREF_HUMAN = ConvertRacePref(1)
RACE_PREF_ORC = ConvertRacePref(2)
RACE_PREF_NIGHTELF = ConvertRacePref(4)
RACE_PREF_UNDEAD = ConvertRacePref(8)
RACE_PREF_DEMON = ConvertRacePref(16)
RACE_PREF_RANDOM = ConvertRacePref(32)
RACE_PREF_USER_SELECTABLE = ConvertRacePref(64)
MAP_CONTROL_USER = ConvertMapControl(0)
MAP_CONTROL_COMPUTER = ConvertMapControl(1)
MAP_CONTROL_RESCUABLE = ConvertMapControl(2)
MAP_CONTROL_NEUTRAL = ConvertMapControl(3)
MAP_CONTROL_CREEP = ConvertMapControl(4)
MAP_CONTROL_NONE = ConvertMapControl(5)
GAME_TYPE_MELEE = ConvertGameType(1)
GAME_TYPE_FFA = ConvertGameType(2)
GAME_TYPE_USE_MAP_SETTINGS = ConvertGameType(4)
GAME_TYPE_BLIZ = ConvertGameType(8)
GAME_TYPE_ONE_ON_ONE = ConvertGameType(16)
GAME_TYPE_TWO_TEAM_PLAY = ConvertGameType(32)
GAME_TYPE_THREE_TEAM_PLAY = ConvertGameType(64)
GAME_TYPE_FOUR_TEAM_PLAY = ConvertGameType(128)
MAP_FOG_HIDE_TERRAIN = ConvertMapFlag(1)
MAP_FOG_MAP_EXPLORED = ConvertMapFlag(2)
MAP_FOG_ALWAYS_VISIBLE = ConvertMapFlag(4)
MAP_USE_HANDICAPS = ConvertMapFlag(8)
MAP_OBSERVERS = ConvertMapFlag(16)
MAP_OBSERVERS_ON_DEATH = ConvertMapFlag(32)
MAP_FIXED_COLORS = ConvertMapFlag(128)
MAP_LOCK_RESOURCE_TRADING = ConvertMapFlag(256)
MAP_RESOURCE_TRADING_ALLIES_ONLY = ConvertMapFlag(512)
MAP_LOCK_ALLIANCE_CHANGES = ConvertMapFlag(1024)
MAP_ALLIANCE_CHANGES_HIDDEN = ConvertMapFlag(2048)
MAP_CHEATS = ConvertMapFlag(4096)
MAP_CHEATS_HIDDEN = ConvertMapFlag(8192)
MAP_LOCK_SPEED = ConvertMapFlag(8192*2)
MAP_LOCK_RANDOM_SEED = ConvertMapFlag(8192*4)
MAP_SHARED_ADVANCED_CONTROL = ConvertMapFlag(8192*8)
MAP_RANDOM_HERO = ConvertMapFlag(8192*16)
MAP_RANDOM_RACES = ConvertMapFlag(8192*32)
MAP_RELOADED = ConvertMapFlag(8192*64)
MAP_PLACEMENT_RANDOM = ConvertPlacement(0)   
MAP_PLACEMENT_FIXED = ConvertPlacement(1)   
MAP_PLACEMENT_USE_MAP_SETTINGS = ConvertPlacement(2)   
MAP_PLACEMENT_TEAMS_TOGETHER = ConvertPlacement(3)   
MAP_LOC_PRIO_LOW = ConvertStartLocPrio(0)
MAP_LOC_PRIO_HIGH = ConvertStartLocPrio(1)
MAP_LOC_PRIO_NOT = ConvertStartLocPrio(2)
MAP_DENSITY_NONE = ConvertMapDensity(0)
MAP_DENSITY_LIGHT = ConvertMapDensity(1)
MAP_DENSITY_MEDIUM = ConvertMapDensity(2)
MAP_DENSITY_HEAVY = ConvertMapDensity(3)
MAP_DIFFICULTY_EASY = ConvertGameDifficulty(0)
MAP_DIFFICULTY_NORMAL = ConvertGameDifficulty(1)
MAP_DIFFICULTY_HARD = ConvertGameDifficulty(2)
MAP_DIFFICULTY_INSANE = ConvertGameDifficulty(3)
MAP_SPEED_SLOWEST = ConvertGameSpeed(0)
MAP_SPEED_SLOW = ConvertGameSpeed(1)
MAP_SPEED_NORMAL = ConvertGameSpeed(2)
MAP_SPEED_FAST = ConvertGameSpeed(3)
MAP_SPEED_FASTEST = ConvertGameSpeed(4)
PLAYER_SLOT_STATE_EMPTY = ConvertPlayerSlotState(0)
PLAYER_SLOT_STATE_PLAYING = ConvertPlayerSlotState(1)
PLAYER_SLOT_STATE_LEFT = ConvertPlayerSlotState(2)
SOUND_VOLUMEGROUP_UNITMOVEMENT = ConvertVolumeGroup(0)
SOUND_VOLUMEGROUP_UNITSOUNDS = ConvertVolumeGroup(1)
SOUND_VOLUMEGROUP_COMBAT = ConvertVolumeGroup(2)
SOUND_VOLUMEGROUP_SPELLS = ConvertVolumeGroup(3)
SOUND_VOLUMEGROUP_UI = ConvertVolumeGroup(4)
SOUND_VOLUMEGROUP_MUSIC = ConvertVolumeGroup(5)
SOUND_VOLUMEGROUP_AMBIENTSOUNDS = ConvertVolumeGroup(6)
SOUND_VOLUMEGROUP_FIRE = ConvertVolumeGroup(7)
GAME_STATE_DIVINE_INTERVENTION = ConvertIGameState(0)
GAME_STATE_DISCONNECTED = ConvertIGameState(1)
GAME_STATE_TIME_OF_DAY = ConvertFGameState(2)
PLAYER_STATE_GAME_RESULT = ConvertPlayerState(0)
PLAYER_STATE_RESOURCE_GOLD = ConvertPlayerState(1)
PLAYER_STATE_RESOURCE_LUMBER = ConvertPlayerState(2)
PLAYER_STATE_RESOURCE_HERO_TOKENS = ConvertPlayerState(3)
PLAYER_STATE_RESOURCE_FOOD_CAP = ConvertPlayerState(4)
PLAYER_STATE_RESOURCE_FOOD_USED = ConvertPlayerState(5)
PLAYER_STATE_FOOD_CAP_CEILING = ConvertPlayerState(6)
PLAYER_STATE_GIVES_BOUNTY = ConvertPlayerState(7)
PLAYER_STATE_ALLIED_VICTORY = ConvertPlayerState(8)
PLAYER_STATE_PLACED = ConvertPlayerState(9)
PLAYER_STATE_OBSERVER_ON_DEATH = ConvertPlayerState(10)
PLAYER_STATE_OBSERVER = ConvertPlayerState(11)
PLAYER_STATE_UNFOLLOWABLE = ConvertPlayerState(12)
PLAYER_STATE_GOLD_UPKEEP_RATE = ConvertPlayerState(13)
PLAYER_STATE_LUMBER_UPKEEP_RATE = ConvertPlayerState(14)
PLAYER_STATE_GOLD_GATHERED = ConvertPlayerState(15)
PLAYER_STATE_LUMBER_GATHERED = ConvertPlayerState(16)
PLAYER_STATE_NO_CREEP_SLEEP = ConvertPlayerState(25)
UNIT_STATE_LIFE = ConvertUnitState(0)
UNIT_STATE_MAX_LIFE = ConvertUnitState(1)
UNIT_STATE_MANA = ConvertUnitState(2)
UNIT_STATE_MAX_MANA = ConvertUnitState(3)
AI_DIFFICULTY_NEWBIE = ConvertAIDifficulty(0)
AI_DIFFICULTY_NORMAL = ConvertAIDifficulty(1)
AI_DIFFICULTY_INSANE = ConvertAIDifficulty(2)
PLAYER_SCORE_UNITS_TRAINED = ConvertPlayerScore(0)
PLAYER_SCORE_UNITS_KILLED = ConvertPlayerScore(1)
PLAYER_SCORE_STRUCT_BUILT = ConvertPlayerScore(2)
PLAYER_SCORE_STRUCT_RAZED = ConvertPlayerScore(3)
PLAYER_SCORE_TECH_PERCENT = ConvertPlayerScore(4)
PLAYER_SCORE_FOOD_MAXPROD = ConvertPlayerScore(5)
PLAYER_SCORE_FOOD_MAXUSED = ConvertPlayerScore(6)
PLAYER_SCORE_HEROES_KILLED = ConvertPlayerScore(7)
PLAYER_SCORE_ITEMS_GAINED = ConvertPlayerScore(8)
PLAYER_SCORE_MERCS_HIRED = ConvertPlayerScore(9)
PLAYER_SCORE_GOLD_MINED_TOTAL = ConvertPlayerScore(10)
PLAYER_SCORE_GOLD_MINED_UPKEEP = ConvertPlayerScore(11)
PLAYER_SCORE_GOLD_LOST_UPKEEP = ConvertPlayerScore(12)
PLAYER_SCORE_GOLD_LOST_TAX = ConvertPlayerScore(13)
PLAYER_SCORE_GOLD_GIVEN = ConvertPlayerScore(14)
PLAYER_SCORE_GOLD_RECEIVED = ConvertPlayerScore(15)
PLAYER_SCORE_LUMBER_TOTAL = ConvertPlayerScore(16)
PLAYER_SCORE_LUMBER_LOST_UPKEEP = ConvertPlayerScore(17)
PLAYER_SCORE_LUMBER_LOST_TAX = ConvertPlayerScore(18)
PLAYER_SCORE_LUMBER_GIVEN = ConvertPlayerScore(19)
PLAYER_SCORE_LUMBER_RECEIVED = ConvertPlayerScore(20)
PLAYER_SCORE_UNIT_TOTAL = ConvertPlayerScore(21)
PLAYER_SCORE_HERO_TOTAL = ConvertPlayerScore(22)
PLAYER_SCORE_RESOURCE_TOTAL = ConvertPlayerScore(23)
PLAYER_SCORE_TOTAL = ConvertPlayerScore(24)
EVENT_GAME_VICTORY = ConvertGameEvent(0)
EVENT_GAME_END_LEVEL = ConvertGameEvent(1)
EVENT_GAME_VARIABLE_LIMIT = ConvertGameEvent(2)
EVENT_GAME_STATE_LIMIT = ConvertGameEvent(3)
EVENT_GAME_TIMER_EXPIRED = ConvertGameEvent(4)
EVENT_GAME_ENTER_REGION = ConvertGameEvent(5)
EVENT_GAME_LEAVE_REGION = ConvertGameEvent(6)
EVENT_GAME_TRACKABLE_HIT = ConvertGameEvent(7)
EVENT_GAME_TRACKABLE_TRACK = ConvertGameEvent(8)
EVENT_GAME_SHOW_SKILL = ConvertGameEvent(9)
EVENT_GAME_BUILD_SUBMENU = ConvertGameEvent(10)
EVENT_PLAYER_STATE_LIMIT = ConvertPlayerEvent(11)
EVENT_PLAYER_ALLIANCE_CHANGED = ConvertPlayerEvent(12)
EVENT_PLAYER_DEFEAT = ConvertPlayerEvent(13)
EVENT_PLAYER_VICTORY = ConvertPlayerEvent(14)
EVENT_PLAYER_LEAVE = ConvertPlayerEvent(15)
EVENT_PLAYER_CHAT = ConvertPlayerEvent(16)
EVENT_PLAYER_END_CINEMATIC = ConvertPlayerEvent(17)
EVENT_PLAYER_UNIT_ATTACKED = ConvertPlayerUnitEvent(18)
EVENT_PLAYER_UNIT_RESCUED = ConvertPlayerUnitEvent(19)
EVENT_PLAYER_UNIT_DEATH = ConvertPlayerUnitEvent(20)
EVENT_PLAYER_UNIT_DECAY = ConvertPlayerUnitEvent(21)
EVENT_PLAYER_UNIT_DETECTED = ConvertPlayerUnitEvent(22)
EVENT_PLAYER_UNIT_HIDDEN = ConvertPlayerUnitEvent(23)
EVENT_PLAYER_UNIT_SELECTED = ConvertPlayerUnitEvent(24)
EVENT_PLAYER_UNIT_DESELECTED = ConvertPlayerUnitEvent(25)
EVENT_PLAYER_UNIT_CONSTRUCT_START = ConvertPlayerUnitEvent(26)
EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL = ConvertPlayerUnitEvent(27)
EVENT_PLAYER_UNIT_CONSTRUCT_FINISH = ConvertPlayerUnitEvent(28)
EVENT_PLAYER_UNIT_UPGRADE_START = ConvertPlayerUnitEvent(29)
EVENT_PLAYER_UNIT_UPGRADE_CANCEL = ConvertPlayerUnitEvent(30)
EVENT_PLAYER_UNIT_UPGRADE_FINISH = ConvertPlayerUnitEvent(31)
EVENT_PLAYER_UNIT_TRAIN_START = ConvertPlayerUnitEvent(32)
EVENT_PLAYER_UNIT_TRAIN_CANCEL = ConvertPlayerUnitEvent(33)
EVENT_PLAYER_UNIT_TRAIN_FINISH = ConvertPlayerUnitEvent(34)
EVENT_PLAYER_UNIT_RESEARCH_START = ConvertPlayerUnitEvent(35)
EVENT_PLAYER_UNIT_RESEARCH_CANCEL = ConvertPlayerUnitEvent(36)
EVENT_PLAYER_UNIT_RESEARCH_FINISH = ConvertPlayerUnitEvent(37)
EVENT_PLAYER_UNIT_ISSUED_ORDER = ConvertPlayerUnitEvent(38)
EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER = ConvertPlayerUnitEvent(39)
EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER = ConvertPlayerUnitEvent(40)
EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER = ConvertPlayerUnitEvent(40)    
EVENT_PLAYER_HERO_LEVEL = ConvertPlayerUnitEvent(41)
EVENT_PLAYER_HERO_SKILL = ConvertPlayerUnitEvent(42)
EVENT_PLAYER_HERO_REVIVABLE = ConvertPlayerUnitEvent(43)
EVENT_PLAYER_HERO_REVIVE_START = ConvertPlayerUnitEvent(44)
EVENT_PLAYER_HERO_REVIVE_CANCEL = ConvertPlayerUnitEvent(45)
EVENT_PLAYER_HERO_REVIVE_FINISH = ConvertPlayerUnitEvent(46)
EVENT_PLAYER_UNIT_SUMMON = ConvertPlayerUnitEvent(47)
EVENT_PLAYER_UNIT_DROP_ITEM = ConvertPlayerUnitEvent(48)
EVENT_PLAYER_UNIT_PICKUP_ITEM = ConvertPlayerUnitEvent(49)
EVENT_PLAYER_UNIT_USE_ITEM = ConvertPlayerUnitEvent(50)
EVENT_PLAYER_UNIT_LOADED = ConvertPlayerUnitEvent(51)
EVENT_PLAYER_UNIT_DAMAGED = ConvertPlayerUnitEvent(308)
EVENT_PLAYER_UNIT_DAMAGING = ConvertPlayerUnitEvent(315)
EVENT_UNIT_DAMAGED = ConvertUnitEvent(52)
EVENT_UNIT_DAMAGING = ConvertUnitEvent(314)
EVENT_UNIT_DEATH = ConvertUnitEvent(53)
EVENT_UNIT_DECAY = ConvertUnitEvent(54)
EVENT_UNIT_DETECTED = ConvertUnitEvent(55)
EVENT_UNIT_HIDDEN = ConvertUnitEvent(56)
EVENT_UNIT_SELECTED = ConvertUnitEvent(57)
EVENT_UNIT_DESELECTED = ConvertUnitEvent(58)
EVENT_UNIT_STATE_LIMIT = ConvertUnitEvent(59)                                                                        
EVENT_UNIT_ACQUIRED_TARGET = ConvertUnitEvent(60)
EVENT_UNIT_TARGET_IN_RANGE = ConvertUnitEvent(61)
EVENT_UNIT_ATTACKED = ConvertUnitEvent(62)
EVENT_UNIT_RESCUED = ConvertUnitEvent(63)
EVENT_UNIT_CONSTRUCT_CANCEL = ConvertUnitEvent(64)
EVENT_UNIT_CONSTRUCT_FINISH = ConvertUnitEvent(65)
EVENT_UNIT_UPGRADE_START = ConvertUnitEvent(66)
EVENT_UNIT_UPGRADE_CANCEL = ConvertUnitEvent(67)
EVENT_UNIT_UPGRADE_FINISH = ConvertUnitEvent(68)
EVENT_UNIT_TRAIN_START = ConvertUnitEvent(69)
EVENT_UNIT_TRAIN_CANCEL = ConvertUnitEvent(70)
EVENT_UNIT_TRAIN_FINISH = ConvertUnitEvent(71)
EVENT_UNIT_RESEARCH_START = ConvertUnitEvent(72)
EVENT_UNIT_RESEARCH_CANCEL = ConvertUnitEvent(73)
EVENT_UNIT_RESEARCH_FINISH = ConvertUnitEvent(74)
EVENT_UNIT_ISSUED_ORDER = ConvertUnitEvent(75)
EVENT_UNIT_ISSUED_POINT_ORDER = ConvertUnitEvent(76)
EVENT_UNIT_ISSUED_TARGET_ORDER = ConvertUnitEvent(77)
EVENT_UNIT_HERO_LEVEL = ConvertUnitEvent(78)
EVENT_UNIT_HERO_SKILL = ConvertUnitEvent(79)
EVENT_UNIT_HERO_REVIVABLE = ConvertUnitEvent(80)
EVENT_UNIT_HERO_REVIVE_START = ConvertUnitEvent(81)
EVENT_UNIT_HERO_REVIVE_CANCEL = ConvertUnitEvent(82)
EVENT_UNIT_HERO_REVIVE_FINISH = ConvertUnitEvent(83)
EVENT_UNIT_SUMMON = ConvertUnitEvent(84)
EVENT_UNIT_DROP_ITEM = ConvertUnitEvent(85)
EVENT_UNIT_PICKUP_ITEM = ConvertUnitEvent(86)
EVENT_UNIT_USE_ITEM = ConvertUnitEvent(87)
EVENT_UNIT_LOADED = ConvertUnitEvent(88)
EVENT_WIDGET_DEATH = ConvertWidgetEvent(89)
EVENT_DIALOG_BUTTON_CLICK = ConvertDialogEvent(90)
EVENT_DIALOG_CLICK = ConvertDialogEvent(91)
EVENT_GAME_LOADED = ConvertGameEvent(256)
EVENT_GAME_TOURNAMENT_FINISH_SOON = ConvertGameEvent(257)
EVENT_GAME_TOURNAMENT_FINISH_NOW = ConvertGameEvent(258)
EVENT_GAME_SAVE = ConvertGameEvent(259)
EVENT_GAME_CUSTOM_UI_FRAME = ConvertGameEvent(310)
EVENT_PLAYER_ARROW_LEFT_DOWN = ConvertPlayerEvent(261)
EVENT_PLAYER_ARROW_LEFT_UP = ConvertPlayerEvent(262)
EVENT_PLAYER_ARROW_RIGHT_DOWN = ConvertPlayerEvent(263)
EVENT_PLAYER_ARROW_RIGHT_UP = ConvertPlayerEvent(264)
EVENT_PLAYER_ARROW_DOWN_DOWN = ConvertPlayerEvent(265)
EVENT_PLAYER_ARROW_DOWN_UP = ConvertPlayerEvent(266)
EVENT_PLAYER_ARROW_UP_DOWN = ConvertPlayerEvent(267)
EVENT_PLAYER_ARROW_UP_UP = ConvertPlayerEvent(268)
EVENT_PLAYER_MOUSE_DOWN = ConvertPlayerEvent(305)
EVENT_PLAYER_MOUSE_UP = ConvertPlayerEvent(306)
EVENT_PLAYER_MOUSE_MOVE = ConvertPlayerEvent(307)
EVENT_PLAYER_SYNC_DATA = ConvertPlayerEvent(309)
EVENT_PLAYER_KEY = ConvertPlayerEvent(311)
EVENT_PLAYER_KEY_DOWN = ConvertPlayerEvent(312)
EVENT_PLAYER_KEY_UP = ConvertPlayerEvent(313)
EVENT_PLAYER_UNIT_SELL = ConvertPlayerUnitEvent(269)
EVENT_PLAYER_UNIT_CHANGE_OWNER = ConvertPlayerUnitEvent(270)
EVENT_PLAYER_UNIT_SELL_ITEM = ConvertPlayerUnitEvent(271)
EVENT_PLAYER_UNIT_SPELL_CHANNEL = ConvertPlayerUnitEvent(272)
EVENT_PLAYER_UNIT_SPELL_CAST = ConvertPlayerUnitEvent(273)
EVENT_PLAYER_UNIT_SPELL_EFFECT = ConvertPlayerUnitEvent(274)
EVENT_PLAYER_UNIT_SPELL_FINISH = ConvertPlayerUnitEvent(275)
EVENT_PLAYER_UNIT_SPELL_ENDCAST = ConvertPlayerUnitEvent(276)
EVENT_PLAYER_UNIT_PAWN_ITEM = ConvertPlayerUnitEvent(277)
EVENT_PLAYER_UNIT_STACK_ITEM = ConvertPlayerUnitEvent(319)
EVENT_UNIT_SELL = ConvertUnitEvent(286)
EVENT_UNIT_CHANGE_OWNER = ConvertUnitEvent(287)
EVENT_UNIT_SELL_ITEM = ConvertUnitEvent(288)
EVENT_UNIT_SPELL_CHANNEL = ConvertUnitEvent(289)
EVENT_UNIT_SPELL_CAST = ConvertUnitEvent(290)
EVENT_UNIT_SPELL_EFFECT = ConvertUnitEvent(291)
EVENT_UNIT_SPELL_FINISH = ConvertUnitEvent(292)
EVENT_UNIT_SPELL_ENDCAST = ConvertUnitEvent(293)
EVENT_UNIT_PAWN_ITEM = ConvertUnitEvent(294)
EVENT_UNIT_STACK_ITEM = ConvertUnitEvent(318)
LESS_THAN = ConvertLimitOp(0)
LESS_THAN_OR_EQUAL = ConvertLimitOp(1)
EQUAL = ConvertLimitOp(2)
GREATER_THAN_OR_EQUAL = ConvertLimitOp(3)
GREATER_THAN = ConvertLimitOp(4)
NOT_EQUAL = ConvertLimitOp(5)
UNIT_TYPE_HERO = ConvertUnitType(0)
UNIT_TYPE_DEAD = ConvertUnitType(1)
UNIT_TYPE_STRUCTURE = ConvertUnitType(2)
UNIT_TYPE_FLYING = ConvertUnitType(3)
UNIT_TYPE_GROUND = ConvertUnitType(4)
UNIT_TYPE_ATTACKS_FLYING = ConvertUnitType(5)
UNIT_TYPE_ATTACKS_GROUND = ConvertUnitType(6)
UNIT_TYPE_MELEE_ATTACKER = ConvertUnitType(7)
UNIT_TYPE_RANGED_ATTACKER = ConvertUnitType(8)
UNIT_TYPE_GIANT = ConvertUnitType(9)
UNIT_TYPE_SUMMONED = ConvertUnitType(10)
UNIT_TYPE_STUNNED = ConvertUnitType(11)
UNIT_TYPE_PLAGUED = ConvertUnitType(12)
UNIT_TYPE_SNARED = ConvertUnitType(13)
UNIT_TYPE_UNDEAD = ConvertUnitType(14)
UNIT_TYPE_MECHANICAL = ConvertUnitType(15)
UNIT_TYPE_PEON = ConvertUnitType(16)
UNIT_TYPE_SAPPER = ConvertUnitType(17)
UNIT_TYPE_TOWNHALL = ConvertUnitType(18)
UNIT_TYPE_ANCIENT = ConvertUnitType(19)
UNIT_TYPE_TAUREN = ConvertUnitType(20)
UNIT_TYPE_POISONED = ConvertUnitType(21)
UNIT_TYPE_POLYMORPHED = ConvertUnitType(22)
UNIT_TYPE_SLEEPING = ConvertUnitType(23)
UNIT_TYPE_RESISTANT = ConvertUnitType(24)
UNIT_TYPE_ETHEREAL = ConvertUnitType(25)
UNIT_TYPE_MAGIC_IMMUNE = ConvertUnitType(26)
ITEM_TYPE_PERMANENT = ConvertItemType(0)
ITEM_TYPE_CHARGED = ConvertItemType(1)
ITEM_TYPE_POWERUP = ConvertItemType(2)
ITEM_TYPE_ARTIFACT = ConvertItemType(3)
ITEM_TYPE_PURCHASABLE = ConvertItemType(4)
ITEM_TYPE_CAMPAIGN = ConvertItemType(5)
ITEM_TYPE_MISCELLANEOUS = ConvertItemType(6)
ITEM_TYPE_UNKNOWN = ConvertItemType(7)
ITEM_TYPE_ANY = ConvertItemType(8)
ITEM_TYPE_TOME = ConvertItemType(2)
CAMERA_FIELD_TARGET_DISTANCE = ConvertCameraField(0)
CAMERA_FIELD_FARZ = ConvertCameraField(1)
CAMERA_FIELD_ANGLE_OF_ATTACK = ConvertCameraField(2)
CAMERA_FIELD_FIELD_OF_VIEW = ConvertCameraField(3)
CAMERA_FIELD_ROLL = ConvertCameraField(4)
CAMERA_FIELD_ROTATION = ConvertCameraField(5)
CAMERA_FIELD_ZOFFSET = ConvertCameraField(6)
CAMERA_FIELD_NEARZ = ConvertCameraField(7)
CAMERA_FIELD_LOCAL_PITCH = ConvertCameraField(8)
CAMERA_FIELD_LOCAL_YAW = ConvertCameraField(9)
CAMERA_FIELD_LOCAL_ROLL = ConvertCameraField(10)
BLEND_MODE_NONE = ConvertBlendMode(0)
BLEND_MODE_DONT_CARE = ConvertBlendMode(0)
BLEND_MODE_KEYALPHA = ConvertBlendMode(1)
BLEND_MODE_BLEND = ConvertBlendMode(2)
BLEND_MODE_ADDITIVE = ConvertBlendMode(3)
BLEND_MODE_MODULATE = ConvertBlendMode(4)
BLEND_MODE_MODULATE_2X = ConvertBlendMode(5)
RARITY_FREQUENT = ConvertRarityControl(0)
RARITY_RARE = ConvertRarityControl(1)
TEXMAP_FLAG_NONE = ConvertTexMapFlags(0)
TEXMAP_FLAG_WRAP_U = ConvertTexMapFlags(1)
TEXMAP_FLAG_WRAP_V = ConvertTexMapFlags(2)
TEXMAP_FLAG_WRAP_UV = ConvertTexMapFlags(3)
FOG_OF_WAR_MASKED = ConvertFogState(1)
FOG_OF_WAR_FOGGED = ConvertFogState(2)
FOG_OF_WAR_VISIBLE = ConvertFogState(4)
CAMERA_MARGIN_LEFT = 0
CAMERA_MARGIN_RIGHT = 1
CAMERA_MARGIN_TOP = 2
CAMERA_MARGIN_BOTTOM = 3
EFFECT_TYPE_EFFECT = ConvertEffectType(0)
EFFECT_TYPE_TARGET = ConvertEffectType(1)
EFFECT_TYPE_CASTER = ConvertEffectType(2)
EFFECT_TYPE_SPECIAL = ConvertEffectType(3)
EFFECT_TYPE_AREA_EFFECT = ConvertEffectType(4)
EFFECT_TYPE_MISSILE = ConvertEffectType(5)
EFFECT_TYPE_LIGHTNING = ConvertEffectType(6)
SOUND_TYPE_EFFECT = ConvertSoundType(0)
SOUND_TYPE_EFFECT_LOOPED = ConvertSoundType(1)
ORIGIN_FRAME_GAME_UI = ConvertOriginFrameType(0)
ORIGIN_FRAME_COMMAND_BUTTON = ConvertOriginFrameType(1)
ORIGIN_FRAME_HERO_BAR = ConvertOriginFrameType(2)
ORIGIN_FRAME_HERO_BUTTON = ConvertOriginFrameType(3)
ORIGIN_FRAME_HERO_HP_BAR = ConvertOriginFrameType(4)
ORIGIN_FRAME_HERO_MANA_BAR = ConvertOriginFrameType(5)
ORIGIN_FRAME_HERO_BUTTON_INDICATOR = ConvertOriginFrameType(6)
ORIGIN_FRAME_ITEM_BUTTON = ConvertOriginFrameType(7)
ORIGIN_FRAME_MINIMAP = ConvertOriginFrameType(8)
ORIGIN_FRAME_MINIMAP_BUTTON = ConvertOriginFrameType(9)
ORIGIN_FRAME_SYSTEM_BUTTON = ConvertOriginFrameType(10)
ORIGIN_FRAME_TOOLTIP = ConvertOriginFrameType(11)
ORIGIN_FRAME_UBERTOOLTIP = ConvertOriginFrameType(12)
ORIGIN_FRAME_CHAT_MSG = ConvertOriginFrameType(13)
ORIGIN_FRAME_UNIT_MSG = ConvertOriginFrameType(14)
ORIGIN_FRAME_TOP_MSG = ConvertOriginFrameType(15)
ORIGIN_FRAME_PORTRAIT = ConvertOriginFrameType(16)
ORIGIN_FRAME_WORLD_FRAME = ConvertOriginFrameType(17)
ORIGIN_FRAME_SIMPLE_UI_PARENT = ConvertOriginFrameType(18)
ORIGIN_FRAME_PORTRAIT_HP_TEXT = ConvertOriginFrameType(19)
ORIGIN_FRAME_PORTRAIT_MANA_TEXT = ConvertOriginFrameType(20)
ORIGIN_FRAME_UNIT_PANEL_BUFF_BAR = ConvertOriginFrameType(21)
ORIGIN_FRAME_UNIT_PANEL_BUFF_BAR_LABEL = ConvertOriginFrameType(22)
FRAMEPOINT_TOPLEFT = ConvertFramePointType(0)
FRAMEPOINT_TOP = ConvertFramePointType(1)
FRAMEPOINT_TOPRIGHT = ConvertFramePointType(2)
FRAMEPOINT_LEFT = ConvertFramePointType(3)
FRAMEPOINT_CENTER = ConvertFramePointType(4)
FRAMEPOINT_RIGHT = ConvertFramePointType(5)
FRAMEPOINT_BOTTOMLEFT = ConvertFramePointType(6)
FRAMEPOINT_BOTTOM = ConvertFramePointType(7)
FRAMEPOINT_BOTTOMRIGHT = ConvertFramePointType(8)
TEXT_JUSTIFY_TOP = ConvertTextAlignType(0)
TEXT_JUSTIFY_MIDDLE = ConvertTextAlignType(1)
TEXT_JUSTIFY_BOTTOM = ConvertTextAlignType(2)
TEXT_JUSTIFY_LEFT = ConvertTextAlignType(3)
TEXT_JUSTIFY_CENTER = ConvertTextAlignType(4)
TEXT_JUSTIFY_RIGHT = ConvertTextAlignType(5)
FRAMEEVENT_CONTROL_CLICK = ConvertFrameEventType(1)
FRAMEEVENT_MOUSE_ENTER = ConvertFrameEventType(2)
FRAMEEVENT_MOUSE_LEAVE = ConvertFrameEventType(3)
FRAMEEVENT_MOUSE_UP = ConvertFrameEventType(4)
FRAMEEVENT_MOUSE_DOWN = ConvertFrameEventType(5)
FRAMEEVENT_MOUSE_WHEEL = ConvertFrameEventType(6)
FRAMEEVENT_CHECKBOX_CHECKED = ConvertFrameEventType(7)
FRAMEEVENT_CHECKBOX_UNCHECKED = ConvertFrameEventType(8)
FRAMEEVENT_EDITBOX_TEXT_CHANGED = ConvertFrameEventType(9)
FRAMEEVENT_POPUPMENU_ITEM_CHANGED = ConvertFrameEventType(10)
FRAMEEVENT_MOUSE_DOUBLECLICK = ConvertFrameEventType(11)
FRAMEEVENT_SPRITE_ANIM_UPDATE = ConvertFrameEventType(12)
FRAMEEVENT_SLIDER_VALUE_CHANGED = ConvertFrameEventType(13)
FRAMEEVENT_DIALOG_CANCEL = ConvertFrameEventType(14)
FRAMEEVENT_DIALOG_ACCEPT = ConvertFrameEventType(15)
FRAMEEVENT_EDITBOX_ENTER = ConvertFrameEventType(16)
OSKEY_BACKSPACE = ConvertOsKeyType(8)
OSKEY_TAB = ConvertOsKeyType(9)
OSKEY_CLEAR = ConvertOsKeyType(12)
OSKEY_RETURN = ConvertOsKeyType(13)
OSKEY_SHIFT = ConvertOsKeyType(16)
OSKEY_CONTROL = ConvertOsKeyType(17)
OSKEY_ALT = ConvertOsKeyType(18)
OSKEY_PAUSE = ConvertOsKeyType(19)
OSKEY_CAPSLOCK = ConvertOsKeyType(20)
OSKEY_KANA = ConvertOsKeyType(21)
OSKEY_HANGUL = ConvertOsKeyType(21)
OSKEY_JUNJA = ConvertOsKeyType(23)
OSKEY_FINAL = ConvertOsKeyType(24)
OSKEY_HANJA = ConvertOsKeyType(25)
OSKEY_KANJI = ConvertOsKeyType(25)
OSKEY_ESCAPE = ConvertOsKeyType(27)
OSKEY_CONVERT = ConvertOsKeyType(28)
OSKEY_NONCONVERT = ConvertOsKeyType(29)
OSKEY_ACCEPT = ConvertOsKeyType(30)
OSKEY_MODECHANGE = ConvertOsKeyType(31)
OSKEY_SPACE = ConvertOsKeyType(32)
OSKEY_PAGEUP = ConvertOsKeyType(33)
OSKEY_PAGEDOWN = ConvertOsKeyType(34)
OSKEY_END = ConvertOsKeyType(35)
OSKEY_HOME = ConvertOsKeyType(36)
OSKEY_LEFT = ConvertOsKeyType(37)
OSKEY_UP = ConvertOsKeyType(38)
OSKEY_RIGHT = ConvertOsKeyType(39)
OSKEY_DOWN = ConvertOsKeyType(40)
OSKEY_SELECT = ConvertOsKeyType(41)
OSKEY_PRINT = ConvertOsKeyType(42)
OSKEY_EXECUTE = ConvertOsKeyType(43)
OSKEY_PRINTSCREEN = ConvertOsKeyType(44)
OSKEY_INSERT = ConvertOsKeyType(45)
OSKEY_DELETE = ConvertOsKeyType(46)
OSKEY_HELP = ConvertOsKeyType(47)
OSKEY_0 = ConvertOsKeyType(48)
OSKEY_1 = ConvertOsKeyType(49)
OSKEY_2 = ConvertOsKeyType(50)
OSKEY_3 = ConvertOsKeyType(51)
OSKEY_4 = ConvertOsKeyType(52)
OSKEY_5 = ConvertOsKeyType(53)
OSKEY_6 = ConvertOsKeyType(54)
OSKEY_7 = ConvertOsKeyType(55)
OSKEY_8 = ConvertOsKeyType(56)
OSKEY_9 = ConvertOsKeyType(57)
OSKEY_A = ConvertOsKeyType(65)
OSKEY_B = ConvertOsKeyType(66)
OSKEY_C = ConvertOsKeyType(67)
OSKEY_D = ConvertOsKeyType(68)
OSKEY_E = ConvertOsKeyType(69)
OSKEY_F = ConvertOsKeyType(70)
OSKEY_G = ConvertOsKeyType(71)
OSKEY_H = ConvertOsKeyType(72)
OSKEY_I = ConvertOsKeyType(73)
OSKEY_J = ConvertOsKeyType(74)
OSKEY_K = ConvertOsKeyType(75)
OSKEY_L = ConvertOsKeyType(76)
OSKEY_M = ConvertOsKeyType(77)
OSKEY_N = ConvertOsKeyType(78)
OSKEY_O = ConvertOsKeyType(79)
OSKEY_P = ConvertOsKeyType(80)
OSKEY_Q = ConvertOsKeyType(81)
OSKEY_R = ConvertOsKeyType(82)
OSKEY_S = ConvertOsKeyType(83)
OSKEY_T = ConvertOsKeyType(84)
OSKEY_U = ConvertOsKeyType(85)
OSKEY_V = ConvertOsKeyType(86)
OSKEY_W = ConvertOsKeyType(87)
OSKEY_X = ConvertOsKeyType(88)
OSKEY_Y = ConvertOsKeyType(89)
OSKEY_Z = ConvertOsKeyType(90)
OSKEY_LMETA = ConvertOsKeyType(91)
OSKEY_RMETA = ConvertOsKeyType(92)
OSKEY_APPS = ConvertOsKeyType(93)
OSKEY_SLEEP = ConvertOsKeyType(95)
OSKEY_NUMPAD0 = ConvertOsKeyType(96)
OSKEY_NUMPAD1 = ConvertOsKeyType(97)
OSKEY_NUMPAD2 = ConvertOsKeyType(98)
OSKEY_NUMPAD3 = ConvertOsKeyType(99)
OSKEY_NUMPAD4 = ConvertOsKeyType(100)
OSKEY_NUMPAD5 = ConvertOsKeyType(101)
OSKEY_NUMPAD6 = ConvertOsKeyType(102)
OSKEY_NUMPAD7 = ConvertOsKeyType(103)
OSKEY_NUMPAD8 = ConvertOsKeyType(104)
OSKEY_NUMPAD9 = ConvertOsKeyType(105)
OSKEY_MULTIPLY = ConvertOsKeyType(106)
OSKEY_ADD = ConvertOsKeyType(107)
OSKEY_SEPARATOR = ConvertOsKeyType(108)
OSKEY_SUBTRACT = ConvertOsKeyType(109)
OSKEY_DECIMAL = ConvertOsKeyType(110)
OSKEY_DIVIDE = ConvertOsKeyType(111)
OSKEY_F1 = ConvertOsKeyType(112)
OSKEY_F2 = ConvertOsKeyType(113)
OSKEY_F3 = ConvertOsKeyType(114)
OSKEY_F4 = ConvertOsKeyType(115)
OSKEY_F5 = ConvertOsKeyType(116)
OSKEY_F6 = ConvertOsKeyType(117)
OSKEY_F7 = ConvertOsKeyType(118)
OSKEY_F8 = ConvertOsKeyType(119)
OSKEY_F9 = ConvertOsKeyType(120)
OSKEY_F10 = ConvertOsKeyType(121)
OSKEY_F11 = ConvertOsKeyType(122)
OSKEY_F12 = ConvertOsKeyType(123)
OSKEY_F13 = ConvertOsKeyType(124)
OSKEY_F14 = ConvertOsKeyType(125)
OSKEY_F15 = ConvertOsKeyType(126)
OSKEY_F16 = ConvertOsKeyType(127)
OSKEY_F17 = ConvertOsKeyType(128)
OSKEY_F18 = ConvertOsKeyType(129)
OSKEY_F19 = ConvertOsKeyType(130)
OSKEY_F20 = ConvertOsKeyType(131)
OSKEY_F21 = ConvertOsKeyType(132)
OSKEY_F22 = ConvertOsKeyType(133)
OSKEY_F23 = ConvertOsKeyType(134)
OSKEY_F24 = ConvertOsKeyType(135)
OSKEY_NUMLOCK = ConvertOsKeyType(144)
OSKEY_SCROLLLOCK = ConvertOsKeyType(145)
OSKEY_OEM_NEC_EQUAL = ConvertOsKeyType(146)
OSKEY_OEM_FJ_JISHO = ConvertOsKeyType(146)
OSKEY_OEM_FJ_MASSHOU = ConvertOsKeyType(147)
OSKEY_OEM_FJ_TOUROKU = ConvertOsKeyType(148)
OSKEY_OEM_FJ_LOYA = ConvertOsKeyType(149)
OSKEY_OEM_FJ_ROYA = ConvertOsKeyType(150)
OSKEY_LSHIFT = ConvertOsKeyType(160)
OSKEY_RSHIFT = ConvertOsKeyType(161)
OSKEY_LCONTROL = ConvertOsKeyType(162)
OSKEY_RCONTROL = ConvertOsKeyType(163)
OSKEY_LALT = ConvertOsKeyType(164)
OSKEY_RALT = ConvertOsKeyType(165)
OSKEY_BROWSER_BACK = ConvertOsKeyType(166)
OSKEY_BROWSER_FORWARD = ConvertOsKeyType(167)
OSKEY_BROWSER_REFRESH = ConvertOsKeyType(168)
OSKEY_BROWSER_STOP = ConvertOsKeyType(169)
OSKEY_BROWSER_SEARCH = ConvertOsKeyType(170)
OSKEY_BROWSER_FAVORITES = ConvertOsKeyType(171)
OSKEY_BROWSER_HOME = ConvertOsKeyType(172)
OSKEY_VOLUME_MUTE = ConvertOsKeyType(173)
OSKEY_VOLUME_DOWN = ConvertOsKeyType(174)
OSKEY_VOLUME_UP = ConvertOsKeyType(175)
OSKEY_MEDIA_NEXT_TRACK = ConvertOsKeyType(176)
OSKEY_MEDIA_PREV_TRACK = ConvertOsKeyType(177)
OSKEY_MEDIA_STOP = ConvertOsKeyType(178)
OSKEY_MEDIA_PLAY_PAUSE = ConvertOsKeyType(179)
OSKEY_LAUNCH_MAIL = ConvertOsKeyType(180)
OSKEY_LAUNCH_MEDIA_SELECT = ConvertOsKeyType(181)
OSKEY_LAUNCH_APP1 = ConvertOsKeyType(182)
OSKEY_LAUNCH_APP2 = ConvertOsKeyType(183)
OSKEY_OEM_1 = ConvertOsKeyType(186)
OSKEY_OEM_PLUS = ConvertOsKeyType(187)
OSKEY_OEM_COMMA = ConvertOsKeyType(188)
OSKEY_OEM_MINUS = ConvertOsKeyType(189)
OSKEY_OEM_PERIOD = ConvertOsKeyType(190)
OSKEY_OEM_2 = ConvertOsKeyType(191)
OSKEY_OEM_3 = ConvertOsKeyType(192)
OSKEY_OEM_4 = ConvertOsKeyType(219)
OSKEY_OEM_5 = ConvertOsKeyType(220)
OSKEY_OEM_6 = ConvertOsKeyType(221)
OSKEY_OEM_7 = ConvertOsKeyType(222)
OSKEY_OEM_8 = ConvertOsKeyType(223)
OSKEY_OEM_AX = ConvertOsKeyType(225)
OSKEY_OEM_102 = ConvertOsKeyType(226)
OSKEY_ICO_HELP = ConvertOsKeyType(227)
OSKEY_ICO_00 = ConvertOsKeyType(228)
OSKEY_PROCESSKEY = ConvertOsKeyType(229)
OSKEY_ICO_CLEAR = ConvertOsKeyType(230)
OSKEY_PACKET = ConvertOsKeyType(231)
OSKEY_OEM_RESET = ConvertOsKeyType(233)
OSKEY_OEM_JUMP = ConvertOsKeyType(234)
OSKEY_OEM_PA1 = ConvertOsKeyType(235)
OSKEY_OEM_PA2 = ConvertOsKeyType(236)
OSKEY_OEM_PA3 = ConvertOsKeyType(237)
OSKEY_OEM_WSCTRL = ConvertOsKeyType(238)
OSKEY_OEM_CUSEL = ConvertOsKeyType(239)
OSKEY_OEM_ATTN = ConvertOsKeyType(240)
OSKEY_OEM_FINISH = ConvertOsKeyType(241)
OSKEY_OEM_COPY = ConvertOsKeyType(242)
OSKEY_OEM_AUTO = ConvertOsKeyType(243)
OSKEY_OEM_ENLW = ConvertOsKeyType(244)
OSKEY_OEM_BACKTAB = ConvertOsKeyType(245)
OSKEY_ATTN = ConvertOsKeyType(246)
OSKEY_CRSEL = ConvertOsKeyType(247)
OSKEY_EXSEL = ConvertOsKeyType(248)
OSKEY_EREOF = ConvertOsKeyType(249)
OSKEY_PLAY = ConvertOsKeyType(250)
OSKEY_ZOOM = ConvertOsKeyType(251)
OSKEY_NONAME = ConvertOsKeyType(252)
OSKEY_PA1 = ConvertOsKeyType(253)
OSKEY_OEM_CLEAR = ConvertOsKeyType(254)
ABILITY_IF_BUTTON_POSITION_NORMAL_X = ConvertAbilityIntegerField('abpx')
ABILITY_IF_BUTTON_POSITION_NORMAL_Y = ConvertAbilityIntegerField('abpy')
ABILITY_IF_BUTTON_POSITION_ACTIVATED_X = ConvertAbilityIntegerField('aubx')
ABILITY_IF_BUTTON_POSITION_ACTIVATED_Y = ConvertAbilityIntegerField('auby')
ABILITY_IF_BUTTON_POSITION_RESEARCH_X = ConvertAbilityIntegerField('arpx')
ABILITY_IF_BUTTON_POSITION_RESEARCH_Y = ConvertAbilityIntegerField('arpy')
ABILITY_IF_MISSILE_SPEED = ConvertAbilityIntegerField('amsp')
ABILITY_IF_TARGET_ATTACHMENTS = ConvertAbilityIntegerField('atac')
ABILITY_IF_CASTER_ATTACHMENTS = ConvertAbilityIntegerField('acac')
ABILITY_IF_PRIORITY = ConvertAbilityIntegerField('apri')
ABILITY_IF_LEVELS = ConvertAbilityIntegerField('alev')
ABILITY_IF_REQUIRED_LEVEL = ConvertAbilityIntegerField('arlv')
ABILITY_IF_LEVEL_SKIP_REQUIREMENT = ConvertAbilityIntegerField('alsk') 
ABILITY_BF_HERO_ABILITY = ConvertAbilityBooleanField('aher') 
ABILITY_BF_ITEM_ABILITY = ConvertAbilityBooleanField('aite')
ABILITY_BF_CHECK_DEPENDENCIES = ConvertAbilityBooleanField('achd')
ABILITY_RF_ARF_MISSILE_ARC = ConvertAbilityRealField('amac')
ABILITY_SF_NAME = ConvertAbilityStringField('anam') 
ABILITY_SF_ICON_ACTIVATED = ConvertAbilityStringField('auar')
ABILITY_SF_ICON_RESEARCH = ConvertAbilityStringField('arar')
ABILITY_SF_EFFECT_SOUND = ConvertAbilityStringField('aefs')
ABILITY_SF_EFFECT_SOUND_LOOPING = ConvertAbilityStringField('aefl')
ABILITY_ILF_MANA_COST = ConvertAbilityIntegerLevelField('amcs')
ABILITY_ILF_NUMBER_OF_WAVES = ConvertAbilityIntegerLevelField('Hbz1')
ABILITY_ILF_NUMBER_OF_SHARDS = ConvertAbilityIntegerLevelField('Hbz3')
ABILITY_ILF_NUMBER_OF_UNITS_TELEPORTED = ConvertAbilityIntegerLevelField('Hmt1')
ABILITY_ILF_SUMMONED_UNIT_COUNT_HWE2 = ConvertAbilityIntegerLevelField('Hwe2')
ABILITY_ILF_NUMBER_OF_IMAGES = ConvertAbilityIntegerLevelField('Omi1')
ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_UAN1 = ConvertAbilityIntegerLevelField('Uan1')
ABILITY_ILF_MORPHING_FLAGS = ConvertAbilityIntegerLevelField('Eme2')
ABILITY_ILF_STRENGTH_BONUS_NRG5 = ConvertAbilityIntegerLevelField('Nrg5')
ABILITY_ILF_DEFENSE_BONUS_NRG6 = ConvertAbilityIntegerLevelField('Nrg6')
ABILITY_ILF_NUMBER_OF_TARGETS_HIT = ConvertAbilityIntegerLevelField('Ocl2')
ABILITY_ILF_DETECTION_TYPE_OFS1 = ConvertAbilityIntegerLevelField('Ofs1')
ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_OSF2 = ConvertAbilityIntegerLevelField('Osf2')
ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_EFN1 = ConvertAbilityIntegerLevelField('Efn1')
ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_HRE1 = ConvertAbilityIntegerLevelField('Hre1')
ABILITY_ILF_STACK_FLAGS = ConvertAbilityIntegerLevelField('Hca4')
ABILITY_ILF_MINIMUM_NUMBER_OF_UNITS = ConvertAbilityIntegerLevelField('Ndp2')
ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_NDP3 = ConvertAbilityIntegerLevelField('Ndp3')
ABILITY_ILF_NUMBER_OF_UNITS_CREATED_NRC2 = ConvertAbilityIntegerLevelField('Nrc2')
ABILITY_ILF_SHIELD_LIFE = ConvertAbilityIntegerLevelField('Ams3')
ABILITY_ILF_MANA_LOSS_AMS4 = ConvertAbilityIntegerLevelField('Ams4')
ABILITY_ILF_GOLD_PER_INTERVAL_BGM1 = ConvertAbilityIntegerLevelField('Bgm1')
ABILITY_ILF_MAX_NUMBER_OF_MINERS = ConvertAbilityIntegerLevelField('Bgm3')
ABILITY_ILF_CARGO_CAPACITY = ConvertAbilityIntegerLevelField('Car1')
ABILITY_ILF_MAXIMUM_CREEP_LEVEL_DEV3 = ConvertAbilityIntegerLevelField('Dev3')
ABILITY_ILF_MAX_CREEP_LEVEL_DEV1 = ConvertAbilityIntegerLevelField('Dev1')
ABILITY_ILF_GOLD_PER_INTERVAL_EGM1 = ConvertAbilityIntegerLevelField('Egm1')
ABILITY_ILF_DEFENSE_REDUCTION = ConvertAbilityIntegerLevelField('Fae1')
ABILITY_ILF_DETECTION_TYPE_FLA1 = ConvertAbilityIntegerLevelField('Fla1')
ABILITY_ILF_FLARE_COUNT = ConvertAbilityIntegerLevelField('Fla3')
ABILITY_ILF_MAX_GOLD = ConvertAbilityIntegerLevelField('Gld1')
ABILITY_ILF_MINING_CAPACITY = ConvertAbilityIntegerLevelField('Gld3')
ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_GYD1 = ConvertAbilityIntegerLevelField('Gyd1')
ABILITY_ILF_DAMAGE_TO_TREE = ConvertAbilityIntegerLevelField('Har1')
ABILITY_ILF_LUMBER_CAPACITY = ConvertAbilityIntegerLevelField('Har2')
ABILITY_ILF_GOLD_CAPACITY = ConvertAbilityIntegerLevelField('Har3')
ABILITY_ILF_DEFENSE_INCREASE_INF2 = ConvertAbilityIntegerLevelField('Inf2')
ABILITY_ILF_INTERACTION_TYPE = ConvertAbilityIntegerLevelField('Neu2')
ABILITY_ILF_GOLD_COST_NDT1 = ConvertAbilityIntegerLevelField('Ndt1')
ABILITY_ILF_LUMBER_COST_NDT2 = ConvertAbilityIntegerLevelField('Ndt2')
ABILITY_ILF_DETECTION_TYPE_NDT3 = ConvertAbilityIntegerLevelField('Ndt3')
ABILITY_ILF_STACKING_TYPE_POI4 = ConvertAbilityIntegerLevelField('Poi4')
ABILITY_ILF_STACKING_TYPE_POA5 = ConvertAbilityIntegerLevelField('Poa5')
ABILITY_ILF_MAXIMUM_CREEP_LEVEL_PLY1 = ConvertAbilityIntegerLevelField('Ply1')
ABILITY_ILF_MAXIMUM_CREEP_LEVEL_POS1 = ConvertAbilityIntegerLevelField('Pos1')
ABILITY_ILF_MOVEMENT_UPDATE_FREQUENCY_PRG1 = ConvertAbilityIntegerLevelField('Prg1')
ABILITY_ILF_ATTACK_UPDATE_FREQUENCY_PRG2 = ConvertAbilityIntegerLevelField('Prg2')
ABILITY_ILF_MANA_LOSS_PRG6 = ConvertAbilityIntegerLevelField('Prg6')
ABILITY_ILF_UNITS_SUMMONED_TYPE_ONE = ConvertAbilityIntegerLevelField('Rai1')
ABILITY_ILF_UNITS_SUMMONED_TYPE_TWO = ConvertAbilityIntegerLevelField('Rai2')
ABILITY_ILF_MAX_UNITS_SUMMONED = ConvertAbilityIntegerLevelField('Ucb5')
ABILITY_ILF_ALLOW_WHEN_FULL_REJ3 = ConvertAbilityIntegerLevelField('Rej3')
ABILITY_ILF_MAXIMUM_UNITS_CHARGED_TO_CASTER = ConvertAbilityIntegerLevelField('Rpb5')
ABILITY_ILF_MAXIMUM_UNITS_AFFECTED = ConvertAbilityIntegerLevelField('Rpb6')
ABILITY_ILF_DEFENSE_INCREASE_ROA2 = ConvertAbilityIntegerLevelField('Roa2')
ABILITY_ILF_MAX_UNITS_ROA7 = ConvertAbilityIntegerLevelField('Roa7')
ABILITY_ILF_ROOTED_WEAPONS = ConvertAbilityIntegerLevelField('Roo1')
ABILITY_ILF_UPROOTED_WEAPONS = ConvertAbilityIntegerLevelField('Roo2')
ABILITY_ILF_UPROOTED_DEFENSE_TYPE = ConvertAbilityIntegerLevelField('Roo4')
ABILITY_ILF_ACCUMULATION_STEP = ConvertAbilityIntegerLevelField('Sal2')
ABILITY_ILF_NUMBER_OF_OWLS = ConvertAbilityIntegerLevelField('Esn4')
ABILITY_ILF_STACKING_TYPE_SPO4 = ConvertAbilityIntegerLevelField('Spo4')
ABILITY_ILF_NUMBER_OF_UNITS = ConvertAbilityIntegerLevelField('Sod1')
ABILITY_ILF_SPIDER_CAPACITY = ConvertAbilityIntegerLevelField('Spa1')
ABILITY_ILF_INTERVALS_BEFORE_CHANGING_TREES = ConvertAbilityIntegerLevelField('Wha2')
ABILITY_ILF_AGILITY_BONUS = ConvertAbilityIntegerLevelField('Iagi')
ABILITY_ILF_INTELLIGENCE_BONUS = ConvertAbilityIntegerLevelField('Iint')
ABILITY_ILF_STRENGTH_BONUS_ISTR = ConvertAbilityIntegerLevelField('Istr')
ABILITY_ILF_ATTACK_BONUS = ConvertAbilityIntegerLevelField('Iatt')
ABILITY_ILF_DEFENSE_BONUS_IDEF = ConvertAbilityIntegerLevelField('Idef')
ABILITY_ILF_SUMMON_1_AMOUNT = ConvertAbilityIntegerLevelField('Isn1')
ABILITY_ILF_SUMMON_2_AMOUNT = ConvertAbilityIntegerLevelField('Isn2')
ABILITY_ILF_EXPERIENCE_GAINED = ConvertAbilityIntegerLevelField('Ixpg')
ABILITY_ILF_HIT_POINTS_GAINED_IHPG = ConvertAbilityIntegerLevelField('Ihpg')
ABILITY_ILF_MANA_POINTS_GAINED_IMPG = ConvertAbilityIntegerLevelField('Impg')
ABILITY_ILF_HIT_POINTS_GAINED_IHP2 = ConvertAbilityIntegerLevelField('Ihp2')
ABILITY_ILF_MANA_POINTS_GAINED_IMP2 = ConvertAbilityIntegerLevelField('Imp2')
ABILITY_ILF_DAMAGE_BONUS_DICE = ConvertAbilityIntegerLevelField('Idic')
ABILITY_ILF_ARMOR_PENALTY_IARP = ConvertAbilityIntegerLevelField('Iarp')
ABILITY_ILF_ENABLED_ATTACK_INDEX_IOB5 = ConvertAbilityIntegerLevelField('Iob5')
ABILITY_ILF_LEVELS_GAINED = ConvertAbilityIntegerLevelField('Ilev')
ABILITY_ILF_MAX_LIFE_GAINED = ConvertAbilityIntegerLevelField('Ilif')
ABILITY_ILF_MAX_MANA_GAINED = ConvertAbilityIntegerLevelField('Iman')
ABILITY_ILF_GOLD_GIVEN = ConvertAbilityIntegerLevelField('Igol')
ABILITY_ILF_LUMBER_GIVEN = ConvertAbilityIntegerLevelField('Ilum')
ABILITY_ILF_DETECTION_TYPE_IFA1 = ConvertAbilityIntegerLevelField('Ifa1')
ABILITY_ILF_MAXIMUM_CREEP_LEVEL_ICRE = ConvertAbilityIntegerLevelField('Icre')
ABILITY_ILF_MOVEMENT_SPEED_BONUS = ConvertAbilityIntegerLevelField('Imvb')
ABILITY_ILF_HIT_POINTS_REGENERATED_PER_SECOND = ConvertAbilityIntegerLevelField('Ihpr')
ABILITY_ILF_SIGHT_RANGE_BONUS = ConvertAbilityIntegerLevelField('Isib')
ABILITY_ILF_DAMAGE_PER_DURATION = ConvertAbilityIntegerLevelField('Icfd')
ABILITY_ILF_MANA_USED_PER_SECOND = ConvertAbilityIntegerLevelField('Icfm')
ABILITY_ILF_EXTRA_MANA_REQUIRED = ConvertAbilityIntegerLevelField('Icfx')
ABILITY_ILF_DETECTION_RADIUS_IDET = ConvertAbilityIntegerLevelField('Idet')
ABILITY_ILF_MANA_LOSS_PER_UNIT_IDIM = ConvertAbilityIntegerLevelField('Idim')
ABILITY_ILF_DAMAGE_TO_SUMMONED_UNITS_IDID = ConvertAbilityIntegerLevelField('Idid')
ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_IREC = ConvertAbilityIntegerLevelField('Irec')
ABILITY_ILF_DELAY_AFTER_DEATH_SECONDS = ConvertAbilityIntegerLevelField('Ircd')
ABILITY_ILF_RESTORED_LIFE = ConvertAbilityIntegerLevelField('irc2')
ABILITY_ILF_RESTORED_MANA__1_FOR_CURRENT = ConvertAbilityIntegerLevelField('irc3')
ABILITY_ILF_HIT_POINTS_RESTORED = ConvertAbilityIntegerLevelField('Ihps')
ABILITY_ILF_MANA_POINTS_RESTORED = ConvertAbilityIntegerLevelField('Imps')
ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_ITPM = ConvertAbilityIntegerLevelField('Itpm')
ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_CAD1 = ConvertAbilityIntegerLevelField('Cad1')
ABILITY_ILF_TERRAIN_DEFORMATION_DURATION_MS = ConvertAbilityIntegerLevelField('Wrs3')
ABILITY_ILF_MAXIMUM_UNITS = ConvertAbilityIntegerLevelField('Uds1')
ABILITY_ILF_DETECTION_TYPE_DET1 = ConvertAbilityIntegerLevelField('Det1')
ABILITY_ILF_GOLD_COST_PER_STRUCTURE = ConvertAbilityIntegerLevelField('Nsp1')
ABILITY_ILF_LUMBER_COST_PER_USE = ConvertAbilityIntegerLevelField('Nsp2')
ABILITY_ILF_DETECTION_TYPE_NSP3 = ConvertAbilityIntegerLevelField('Nsp3')
ABILITY_ILF_NUMBER_OF_SWARM_UNITS = ConvertAbilityIntegerLevelField('Uls1')
ABILITY_ILF_MAX_SWARM_UNITS_PER_TARGET = ConvertAbilityIntegerLevelField('Uls3')
ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NBA2 = ConvertAbilityIntegerLevelField('Nba2')
ABILITY_ILF_MAXIMUM_CREEP_LEVEL_NCH1 = ConvertAbilityIntegerLevelField('Nch1')
ABILITY_ILF_ATTACKS_PREVENTED = ConvertAbilityIntegerLevelField('Nsi1')
ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_EFK3 = ConvertAbilityIntegerLevelField('Efk3')
ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_ESV1 = ConvertAbilityIntegerLevelField('Esv1')
ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_EXH1 = ConvertAbilityIntegerLevelField('exh1')
ABILITY_ILF_ITEM_CAPACITY = ConvertAbilityIntegerLevelField('inv1')
ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_SPL2 = ConvertAbilityIntegerLevelField('spl2')
ABILITY_ILF_ALLOW_WHEN_FULL_IRL3 = ConvertAbilityIntegerLevelField('irl3')
ABILITY_ILF_MAXIMUM_DISPELLED_UNITS = ConvertAbilityIntegerLevelField('idc3')
ABILITY_ILF_NUMBER_OF_LURES = ConvertAbilityIntegerLevelField('imo1')
ABILITY_ILF_NEW_TIME_OF_DAY_HOUR = ConvertAbilityIntegerLevelField('ict1')
ABILITY_ILF_NEW_TIME_OF_DAY_MINUTE = ConvertAbilityIntegerLevelField('ict2')
ABILITY_ILF_NUMBER_OF_UNITS_CREATED_MEC1 = ConvertAbilityIntegerLevelField('mec1')
ABILITY_ILF_MINIMUM_SPELLS = ConvertAbilityIntegerLevelField('spb3')
ABILITY_ILF_MAXIMUM_SPELLS = ConvertAbilityIntegerLevelField('spb4')
ABILITY_ILF_DISABLED_ATTACK_INDEX = ConvertAbilityIntegerLevelField('gra3')
ABILITY_ILF_ENABLED_ATTACK_INDEX_GRA4 = ConvertAbilityIntegerLevelField('gra4')
ABILITY_ILF_MAXIMUM_ATTACKS = ConvertAbilityIntegerLevelField('gra5')
ABILITY_ILF_BUILDING_TYPES_ALLOWED_NPR1 = ConvertAbilityIntegerLevelField('Npr1')
ABILITY_ILF_BUILDING_TYPES_ALLOWED_NSA1 = ConvertAbilityIntegerLevelField('Nsa1')
ABILITY_ILF_ATTACK_MODIFICATION = ConvertAbilityIntegerLevelField('Iaa1')
ABILITY_ILF_SUMMONED_UNIT_COUNT_NPA5 = ConvertAbilityIntegerLevelField('Npa5')
ABILITY_ILF_UPGRADE_LEVELS = ConvertAbilityIntegerLevelField('Igl1')
ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NDO2 = ConvertAbilityIntegerLevelField('Ndo2')
ABILITY_ILF_BEASTS_PER_SECOND = ConvertAbilityIntegerLevelField('Nst1')
ABILITY_ILF_TARGET_TYPE = ConvertAbilityIntegerLevelField('Ncl2')
ABILITY_ILF_OPTIONS = ConvertAbilityIntegerLevelField('Ncl3')
ABILITY_ILF_ARMOR_PENALTY_NAB3 = ConvertAbilityIntegerLevelField('Nab3')
ABILITY_ILF_WAVE_COUNT_NHS6 = ConvertAbilityIntegerLevelField('Nhs6')
ABILITY_ILF_MAX_CREEP_LEVEL_NTM3 = ConvertAbilityIntegerLevelField('Ntm3')
ABILITY_ILF_MISSILE_COUNT = ConvertAbilityIntegerLevelField('Ncs3')
ABILITY_ILF_SPLIT_ATTACK_COUNT = ConvertAbilityIntegerLevelField('Nlm3')
ABILITY_ILF_GENERATION_COUNT = ConvertAbilityIntegerLevelField('Nlm6')
ABILITY_ILF_ROCK_RING_COUNT = ConvertAbilityIntegerLevelField('Nvc1')
ABILITY_ILF_WAVE_COUNT_NVC2 = ConvertAbilityIntegerLevelField('Nvc2')
ABILITY_ILF_PREFER_HOSTILES_TAU1 = ConvertAbilityIntegerLevelField('Tau1')
ABILITY_ILF_PREFER_FRIENDLIES_TAU2 = ConvertAbilityIntegerLevelField('Tau2')
ABILITY_ILF_MAX_UNITS_TAU3 = ConvertAbilityIntegerLevelField('Tau3')
ABILITY_ILF_NUMBER_OF_PULSES = ConvertAbilityIntegerLevelField('Tau4')
ABILITY_ILF_SUMMONED_UNIT_TYPE_HWE1 = ConvertAbilityIntegerLevelField('Hwe1')
ABILITY_ILF_SUMMONED_UNIT_UIN4 = ConvertAbilityIntegerLevelField('Uin4')
ABILITY_ILF_SUMMONED_UNIT_OSF1 = ConvertAbilityIntegerLevelField('Osf1')
ABILITY_ILF_SUMMONED_UNIT_TYPE_EFNU = ConvertAbilityIntegerLevelField('Efnu')
ABILITY_ILF_SUMMONED_UNIT_TYPE_NBAU = ConvertAbilityIntegerLevelField('Nbau')
ABILITY_ILF_SUMMONED_UNIT_TYPE_NTOU = ConvertAbilityIntegerLevelField('Ntou')
ABILITY_ILF_SUMMONED_UNIT_TYPE_ESVU = ConvertAbilityIntegerLevelField('Esvu')
ABILITY_ILF_SUMMONED_UNIT_TYPES = ConvertAbilityIntegerLevelField('Nef1')
ABILITY_ILF_SUMMONED_UNIT_TYPE_NDOU = ConvertAbilityIntegerLevelField('Ndou')
ABILITY_ILF_ALTERNATE_FORM_UNIT_EMEU = ConvertAbilityIntegerLevelField('Emeu')
ABILITY_ILF_PLAGUE_WARD_UNIT_TYPE = ConvertAbilityIntegerLevelField('Aplu')
ABILITY_ILF_ALLOWED_UNIT_TYPE_BTL1 = ConvertAbilityIntegerLevelField('Btl1')
ABILITY_ILF_NEW_UNIT_TYPE = ConvertAbilityIntegerLevelField('Cha1')
ABILITY_ILF_RESULTING_UNIT_TYPE_ENT1 = ConvertAbilityIntegerLevelField('ent1')
ABILITY_ILF_CORPSE_UNIT_TYPE = ConvertAbilityIntegerLevelField('Gydu')
ABILITY_ILF_ALLOWED_UNIT_TYPE_LOA1 = ConvertAbilityIntegerLevelField('Loa1')
ABILITY_ILF_UNIT_TYPE_FOR_LIMIT_CHECK = ConvertAbilityIntegerLevelField('Raiu')
ABILITY_ILF_WARD_UNIT_TYPE_STAU = ConvertAbilityIntegerLevelField('Stau')
ABILITY_ILF_EFFECT_ABILITY = ConvertAbilityIntegerLevelField('Iobu')
ABILITY_ILF_CONVERSION_UNIT = ConvertAbilityIntegerLevelField('Ndc2')
ABILITY_ILF_UNIT_TO_PRESERVE = ConvertAbilityIntegerLevelField('Nsl1')
ABILITY_ILF_UNIT_TYPE_ALLOWED = ConvertAbilityIntegerLevelField('Chl1')
ABILITY_ILF_SWARM_UNIT_TYPE = ConvertAbilityIntegerLevelField('Ulsu')
ABILITY_ILF_RESULTING_UNIT_TYPE_COAU = ConvertAbilityIntegerLevelField('coau')
ABILITY_ILF_UNIT_TYPE_EXHU = ConvertAbilityIntegerLevelField('exhu')
ABILITY_ILF_WARD_UNIT_TYPE_HWDU = ConvertAbilityIntegerLevelField('hwdu')
ABILITY_ILF_LURE_UNIT_TYPE = ConvertAbilityIntegerLevelField('imou')
ABILITY_ILF_UNIT_TYPE_IPMU = ConvertAbilityIntegerLevelField('ipmu')
ABILITY_ILF_FACTORY_UNIT_ID = ConvertAbilityIntegerLevelField('Nsyu')
ABILITY_ILF_SPAWN_UNIT_ID_NFYU = ConvertAbilityIntegerLevelField('Nfyu')
ABILITY_ILF_DESTRUCTIBLE_ID = ConvertAbilityIntegerLevelField('Nvcu')
ABILITY_ILF_UPGRADE_TYPE = ConvertAbilityIntegerLevelField('Iglu')
ABILITY_RLF_CASTING_TIME = ConvertAbilityRealLevelField('acas')
ABILITY_RLF_DURATION_NORMAL = ConvertAbilityRealLevelField('adur')
ABILITY_RLF_DURATION_HERO = ConvertAbilityRealLevelField('ahdu')
ABILITY_RLF_COOLDOWN = ConvertAbilityRealLevelField('acdn')
ABILITY_RLF_AREA_OF_EFFECT = ConvertAbilityRealLevelField('aare')
ABILITY_RLF_CAST_RANGE = ConvertAbilityRealLevelField('aran')
ABILITY_RLF_DAMAGE_HBZ2 = ConvertAbilityRealLevelField('Hbz2')
ABILITY_RLF_BUILDING_REDUCTION_HBZ4 = ConvertAbilityRealLevelField('Hbz4')
ABILITY_RLF_DAMAGE_PER_SECOND_HBZ5 = ConvertAbilityRealLevelField('Hbz5')
ABILITY_RLF_MAXIMUM_DAMAGE_PER_WAVE = ConvertAbilityRealLevelField('Hbz6')
ABILITY_RLF_MANA_REGENERATION_INCREASE = ConvertAbilityRealLevelField('Hab1')
ABILITY_RLF_CASTING_DELAY = ConvertAbilityRealLevelField('Hmt2')
ABILITY_RLF_DAMAGE_PER_SECOND_OWW1 = ConvertAbilityRealLevelField('Oww1')
ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_OWW2 = ConvertAbilityRealLevelField('Oww2')
ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE = ConvertAbilityRealLevelField('Ocr1')
ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2 = ConvertAbilityRealLevelField('Ocr2')
ABILITY_RLF_DAMAGE_BONUS_OCR3 = ConvertAbilityRealLevelField('Ocr3')
ABILITY_RLF_CHANCE_TO_EVADE_OCR4 = ConvertAbilityRealLevelField('Ocr4')
ABILITY_RLF_DAMAGE_DEALT_PERCENT_OMI2 = ConvertAbilityRealLevelField('Omi2')
ABILITY_RLF_DAMAGE_TAKEN_PERCENT_OMI3 = ConvertAbilityRealLevelField('Omi3')
ABILITY_RLF_ANIMATION_DELAY = ConvertAbilityRealLevelField('Omi4')
ABILITY_RLF_TRANSITION_TIME = ConvertAbilityRealLevelField('Owk1')
ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OWK2 = ConvertAbilityRealLevelField('Owk2')
ABILITY_RLF_BACKSTAB_DAMAGE = ConvertAbilityRealLevelField('Owk3')
ABILITY_RLF_AMOUNT_HEALED_DAMAGED_UDC1 = ConvertAbilityRealLevelField('Udc1')
ABILITY_RLF_LIFE_CONVERTED_TO_MANA = ConvertAbilityRealLevelField('Udp1')
ABILITY_RLF_LIFE_CONVERTED_TO_LIFE = ConvertAbilityRealLevelField('Udp2')
ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_UAU1 = ConvertAbilityRealLevelField('Uau1')
ABILITY_RLF_LIFE_REGENERATION_INCREASE_PERCENT = ConvertAbilityRealLevelField('Uau2')
ABILITY_RLF_CHANCE_TO_EVADE_EEV1 = ConvertAbilityRealLevelField('Eev1')
ABILITY_RLF_DAMAGE_PER_INTERVAL = ConvertAbilityRealLevelField('Eim1')
ABILITY_RLF_MANA_DRAINED_PER_SECOND_EIM2 = ConvertAbilityRealLevelField('Eim2')
ABILITY_RLF_BUFFER_MANA_REQUIRED = ConvertAbilityRealLevelField('Eim3')
ABILITY_RLF_MAX_MANA_DRAINED = ConvertAbilityRealLevelField('Emb1')
ABILITY_RLF_BOLT_DELAY = ConvertAbilityRealLevelField('Emb2')
ABILITY_RLF_BOLT_LIFETIME = ConvertAbilityRealLevelField('Emb3')
ABILITY_RLF_ALTITUDE_ADJUSTMENT_DURATION = ConvertAbilityRealLevelField('Eme3')
ABILITY_RLF_LANDING_DELAY_TIME = ConvertAbilityRealLevelField('Eme4')
ABILITY_RLF_ALTERNATE_FORM_HIT_POINT_BONUS = ConvertAbilityRealLevelField('Eme5')
ABILITY_RLF_MOVE_SPEED_BONUS_INFO_PANEL_ONLY = ConvertAbilityRealLevelField('Ncr5')
ABILITY_RLF_ATTACK_SPEED_BONUS_INFO_PANEL_ONLY = ConvertAbilityRealLevelField('Ncr6')
ABILITY_RLF_LIFE_REGENERATION_RATE_PER_SECOND = ConvertAbilityRealLevelField('ave5')
ABILITY_RLF_STUN_DURATION_USL1 = ConvertAbilityRealLevelField('Usl1')
ABILITY_RLF_ATTACK_DAMAGE_STOLEN_PERCENT = ConvertAbilityRealLevelField('Uav1')
ABILITY_RLF_DAMAGE_UCS1 = ConvertAbilityRealLevelField('Ucs1')
ABILITY_RLF_MAX_DAMAGE_UCS2 = ConvertAbilityRealLevelField('Ucs2')
ABILITY_RLF_DISTANCE_UCS3 = ConvertAbilityRealLevelField('Ucs3')
ABILITY_RLF_FINAL_AREA_UCS4 = ConvertAbilityRealLevelField('Ucs4')
ABILITY_RLF_DAMAGE_UIN1 = ConvertAbilityRealLevelField('Uin1')
ABILITY_RLF_DURATION = ConvertAbilityRealLevelField('Uin2')
ABILITY_RLF_IMPACT_DELAY = ConvertAbilityRealLevelField('Uin3')
ABILITY_RLF_DAMAGE_PER_TARGET_OCL1 = ConvertAbilityRealLevelField('Ocl1')
ABILITY_RLF_DAMAGE_REDUCTION_PER_TARGET = ConvertAbilityRealLevelField('Ocl3')
ABILITY_RLF_EFFECT_DELAY_OEQ1 = ConvertAbilityRealLevelField('Oeq1')
ABILITY_RLF_DAMAGE_PER_SECOND_TO_BUILDINGS = ConvertAbilityRealLevelField('Oeq2')
ABILITY_RLF_UNITS_SLOWED_PERCENT = ConvertAbilityRealLevelField('Oeq3')
ABILITY_RLF_FINAL_AREA_OEQ4 = ConvertAbilityRealLevelField('Oeq4')
ABILITY_RLF_DAMAGE_PER_SECOND_EER1 = ConvertAbilityRealLevelField('Eer1')
ABILITY_RLF_DAMAGE_DEALT_TO_ATTACKERS = ConvertAbilityRealLevelField('Eah1')
ABILITY_RLF_LIFE_HEALED = ConvertAbilityRealLevelField('Etq1')
ABILITY_RLF_HEAL_INTERVAL = ConvertAbilityRealLevelField('Etq2')
ABILITY_RLF_BUILDING_REDUCTION_ETQ3 = ConvertAbilityRealLevelField('Etq3')
ABILITY_RLF_INITIAL_IMMUNITY_DURATION = ConvertAbilityRealLevelField('Etq4')
ABILITY_RLF_MAX_LIFE_DRAINED_PER_SECOND_PERCENT = ConvertAbilityRealLevelField('Udd1')
ABILITY_RLF_BUILDING_REDUCTION_UDD2 = ConvertAbilityRealLevelField('Udd2')
ABILITY_RLF_ARMOR_DURATION = ConvertAbilityRealLevelField('Ufa1')
ABILITY_RLF_ARMOR_BONUS_UFA2 = ConvertAbilityRealLevelField('Ufa2')
ABILITY_RLF_AREA_OF_EFFECT_DAMAGE = ConvertAbilityRealLevelField('Ufn1')
ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_UFN2 = ConvertAbilityRealLevelField('Ufn2')
ABILITY_RLF_DAMAGE_BONUS_HFA1 = ConvertAbilityRealLevelField('Hfa1')
ABILITY_RLF_DAMAGE_DEALT_ESF1 = ConvertAbilityRealLevelField('Esf1')
ABILITY_RLF_DAMAGE_INTERVAL_ESF2 = ConvertAbilityRealLevelField('Esf2')
ABILITY_RLF_BUILDING_REDUCTION_ESF3 = ConvertAbilityRealLevelField('Esf3')
ABILITY_RLF_DAMAGE_BONUS_PERCENT = ConvertAbilityRealLevelField('Ear1')
ABILITY_RLF_DEFENSE_BONUS_HAV1 = ConvertAbilityRealLevelField('Hav1')
ABILITY_RLF_HIT_POINT_BONUS = ConvertAbilityRealLevelField('Hav2')
ABILITY_RLF_DAMAGE_BONUS_HAV3 = ConvertAbilityRealLevelField('Hav3')
ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_HAV4 = ConvertAbilityRealLevelField('Hav4')
ABILITY_RLF_CHANCE_TO_BASH = ConvertAbilityRealLevelField('Hbh1')
ABILITY_RLF_DAMAGE_MULTIPLIER_HBH2 = ConvertAbilityRealLevelField('Hbh2')
ABILITY_RLF_DAMAGE_BONUS_HBH3 = ConvertAbilityRealLevelField('Hbh3')
ABILITY_RLF_CHANCE_TO_MISS_HBH4 = ConvertAbilityRealLevelField('Hbh4')
ABILITY_RLF_DAMAGE_HTB1 = ConvertAbilityRealLevelField('Htb1')
ABILITY_RLF_AOE_DAMAGE = ConvertAbilityRealLevelField('Htc1')
ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_HTC2 = ConvertAbilityRealLevelField('Htc2')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HTC3 = ConvertAbilityRealLevelField('Htc3')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HTC4 = ConvertAbilityRealLevelField('Htc4')
ABILITY_RLF_ARMOR_BONUS_HAD1 = ConvertAbilityRealLevelField('Had1')
ABILITY_RLF_AMOUNT_HEALED_DAMAGED_HHB1 = ConvertAbilityRealLevelField('Hhb1')
ABILITY_RLF_EXTRA_DAMAGE_HCA1 = ConvertAbilityRealLevelField('Hca1')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_HCA2 = ConvertAbilityRealLevelField('Hca2')
ABILITY_RLF_ATTACK_SPEED_FACTOR_HCA3 = ConvertAbilityRealLevelField('Hca3')
ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OAE1 = ConvertAbilityRealLevelField('Oae1')
ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_OAE2 = ConvertAbilityRealLevelField('Oae2')
ABILITY_RLF_REINCARNATION_DELAY = ConvertAbilityRealLevelField('Ore1')
ABILITY_RLF_DAMAGE_OSH1 = ConvertAbilityRealLevelField('Osh1')
ABILITY_RLF_MAXIMUM_DAMAGE_OSH2 = ConvertAbilityRealLevelField('Osh2')
ABILITY_RLF_DISTANCE_OSH3 = ConvertAbilityRealLevelField('Osh3')
ABILITY_RLF_FINAL_AREA_OSH4 = ConvertAbilityRealLevelField('Osh4')
ABILITY_RLF_GRAPHIC_DELAY_NFD1 = ConvertAbilityRealLevelField('Nfd1')
ABILITY_RLF_GRAPHIC_DURATION_NFD2 = ConvertAbilityRealLevelField('Nfd2')
ABILITY_RLF_DAMAGE_NFD3 = ConvertAbilityRealLevelField('Nfd3')
ABILITY_RLF_SUMMONED_UNIT_DAMAGE_AMS1 = ConvertAbilityRealLevelField('Ams1')
ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_AMS2 = ConvertAbilityRealLevelField('Ams2')
ABILITY_RLF_AURA_DURATION = ConvertAbilityRealLevelField('Apl1')
ABILITY_RLF_DAMAGE_PER_SECOND_APL2 = ConvertAbilityRealLevelField('Apl2')
ABILITY_RLF_DURATION_OF_PLAGUE_WARD = ConvertAbilityRealLevelField('Apl3')
ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED = ConvertAbilityRealLevelField('Oar1')
ABILITY_RLF_ATTACK_DAMAGE_INCREASE_AKB1 = ConvertAbilityRealLevelField('Akb1')
ABILITY_RLF_MANA_LOSS_ADM1 = ConvertAbilityRealLevelField('Adm1')
ABILITY_RLF_SUMMONED_UNIT_DAMAGE_ADM2 = ConvertAbilityRealLevelField('Adm2')
ABILITY_RLF_EXPANSION_AMOUNT = ConvertAbilityRealLevelField('Bli1')
ABILITY_RLF_INTERVAL_DURATION_BGM2 = ConvertAbilityRealLevelField('Bgm2')
ABILITY_RLF_RADIUS_OF_MINING_RING = ConvertAbilityRealLevelField('Bgm4')
ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_BLO1 = ConvertAbilityRealLevelField('Blo1')
ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_BLO2 = ConvertAbilityRealLevelField('Blo2')
ABILITY_RLF_SCALING_FACTOR = ConvertAbilityRealLevelField('Blo3')
ABILITY_RLF_HIT_POINTS_PER_SECOND_CAN1 = ConvertAbilityRealLevelField('Can1')
ABILITY_RLF_MAX_HIT_POINTS = ConvertAbilityRealLevelField('Can2')
ABILITY_RLF_DAMAGE_PER_SECOND_DEV2 = ConvertAbilityRealLevelField('Dev2')
ABILITY_RLF_MOVEMENT_UPDATE_FREQUENCY_CHD1 = ConvertAbilityRealLevelField('Chd1')
ABILITY_RLF_ATTACK_UPDATE_FREQUENCY_CHD2 = ConvertAbilityRealLevelField('Chd2')
ABILITY_RLF_SUMMONED_UNIT_DAMAGE_CHD3 = ConvertAbilityRealLevelField('Chd3')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_CRI1 = ConvertAbilityRealLevelField('Cri1')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_CRI2 = ConvertAbilityRealLevelField('Cri2')
ABILITY_RLF_DAMAGE_REDUCTION_CRI3 = ConvertAbilityRealLevelField('Cri3')
ABILITY_RLF_CHANCE_TO_MISS_CRS = ConvertAbilityRealLevelField('Crs1')
ABILITY_RLF_FULL_DAMAGE_RADIUS_DDA1 = ConvertAbilityRealLevelField('Dda1')
ABILITY_RLF_FULL_DAMAGE_AMOUNT_DDA2 = ConvertAbilityRealLevelField('Dda2')
ABILITY_RLF_PARTIAL_DAMAGE_RADIUS = ConvertAbilityRealLevelField('Dda3')
ABILITY_RLF_PARTIAL_DAMAGE_AMOUNT = ConvertAbilityRealLevelField('Dda4')
ABILITY_RLF_BUILDING_DAMAGE_FACTOR_SDS1 = ConvertAbilityRealLevelField('Sds1')
ABILITY_RLF_MAX_DAMAGE_UCO5 = ConvertAbilityRealLevelField('Uco5')
ABILITY_RLF_MOVE_SPEED_BONUS_UCO6 = ConvertAbilityRealLevelField('Uco6')
ABILITY_RLF_DAMAGE_TAKEN_PERCENT_DEF1 = ConvertAbilityRealLevelField('Def1')
ABILITY_RLF_DAMAGE_DEALT_PERCENT_DEF2 = ConvertAbilityRealLevelField('Def2')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_DEF3 = ConvertAbilityRealLevelField('Def3')
ABILITY_RLF_ATTACK_SPEED_FACTOR_DEF4 = ConvertAbilityRealLevelField('Def4')
ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_DEF5 = ConvertAbilityRealLevelField('Def5')
ABILITY_RLF_CHANCE_TO_DEFLECT = ConvertAbilityRealLevelField('Def6')
ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_PIERCING = ConvertAbilityRealLevelField('Def7')
ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_SPELLS = ConvertAbilityRealLevelField('Def8')
ABILITY_RLF_RIP_DELAY = ConvertAbilityRealLevelField('Eat1')
ABILITY_RLF_EAT_DELAY = ConvertAbilityRealLevelField('Eat2')
ABILITY_RLF_HIT_POINTS_GAINED_EAT3 = ConvertAbilityRealLevelField('Eat3')
ABILITY_RLF_AIR_UNIT_LOWER_DURATION = ConvertAbilityRealLevelField('Ens1')
ABILITY_RLF_AIR_UNIT_HEIGHT = ConvertAbilityRealLevelField('Ens2')
ABILITY_RLF_MELEE_ATTACK_RANGE = ConvertAbilityRealLevelField('Ens3')
ABILITY_RLF_INTERVAL_DURATION_EGM2 = ConvertAbilityRealLevelField('Egm2')
ABILITY_RLF_EFFECT_DELAY_FLA2 = ConvertAbilityRealLevelField('Fla2')
ABILITY_RLF_MINING_DURATION = ConvertAbilityRealLevelField('Gld2')
ABILITY_RLF_RADIUS_OF_GRAVESTONES = ConvertAbilityRealLevelField('Gyd2')
ABILITY_RLF_RADIUS_OF_CORPSES = ConvertAbilityRealLevelField('Gyd3')
ABILITY_RLF_HIT_POINTS_GAINED_HEA1 = ConvertAbilityRealLevelField('Hea1')
ABILITY_RLF_DAMAGE_INCREASE_PERCENT_INF1 = ConvertAbilityRealLevelField('Inf1')
ABILITY_RLF_AUTOCAST_RANGE = ConvertAbilityRealLevelField('Inf3')
ABILITY_RLF_LIFE_REGEN_RATE = ConvertAbilityRealLevelField('Inf4')
ABILITY_RLF_GRAPHIC_DELAY_LIT1 = ConvertAbilityRealLevelField('Lit1')
ABILITY_RLF_GRAPHIC_DURATION_LIT2 = ConvertAbilityRealLevelField('Lit2')
ABILITY_RLF_DAMAGE_PER_SECOND_LSH1 = ConvertAbilityRealLevelField('Lsh1')
ABILITY_RLF_MANA_GAINED = ConvertAbilityRealLevelField('Mbt1')
ABILITY_RLF_HIT_POINTS_GAINED_MBT2 = ConvertAbilityRealLevelField('Mbt2')
ABILITY_RLF_AUTOCAST_REQUIREMENT = ConvertAbilityRealLevelField('Mbt3')
ABILITY_RLF_WATER_HEIGHT = ConvertAbilityRealLevelField('Mbt4')
ABILITY_RLF_ACTIVATION_DELAY_MIN1 = ConvertAbilityRealLevelField('Min1')
ABILITY_RLF_INVISIBILITY_TRANSITION_TIME = ConvertAbilityRealLevelField('Min2')
ABILITY_RLF_ACTIVATION_RADIUS = ConvertAbilityRealLevelField('Neu1')
ABILITY_RLF_AMOUNT_REGENERATED = ConvertAbilityRealLevelField('Arm1')
ABILITY_RLF_DAMAGE_PER_SECOND_POI1 = ConvertAbilityRealLevelField('Poi1')
ABILITY_RLF_ATTACK_SPEED_FACTOR_POI2 = ConvertAbilityRealLevelField('Poi2')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POI3 = ConvertAbilityRealLevelField('Poi3')
ABILITY_RLF_EXTRA_DAMAGE_POA1 = ConvertAbilityRealLevelField('Poa1')
ABILITY_RLF_DAMAGE_PER_SECOND_POA2 = ConvertAbilityRealLevelField('Poa2')
ABILITY_RLF_ATTACK_SPEED_FACTOR_POA3 = ConvertAbilityRealLevelField('Poa3')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POA4 = ConvertAbilityRealLevelField('Poa4')   
ABILITY_RLF_DAMAGE_AMPLIFICATION = ConvertAbilityRealLevelField('Pos2')
ABILITY_RLF_CHANCE_TO_STOMP_PERCENT = ConvertAbilityRealLevelField('War1')
ABILITY_RLF_DAMAGE_DEALT_WAR2 = ConvertAbilityRealLevelField('War2')
ABILITY_RLF_FULL_DAMAGE_RADIUS_WAR3 = ConvertAbilityRealLevelField('War3')
ABILITY_RLF_HALF_DAMAGE_RADIUS_WAR4 = ConvertAbilityRealLevelField('War4')
ABILITY_RLF_SUMMONED_UNIT_DAMAGE_PRG3 = ConvertAbilityRealLevelField('Prg3')
ABILITY_RLF_UNIT_PAUSE_DURATION = ConvertAbilityRealLevelField('Prg4')
ABILITY_RLF_HERO_PAUSE_DURATION = ConvertAbilityRealLevelField('Prg5')
ABILITY_RLF_HIT_POINTS_GAINED_REJ1 = ConvertAbilityRealLevelField('Rej1')
ABILITY_RLF_MANA_POINTS_GAINED_REJ2 = ConvertAbilityRealLevelField('Rej2')
ABILITY_RLF_MINIMUM_LIFE_REQUIRED = ConvertAbilityRealLevelField('Rpb3')
ABILITY_RLF_MINIMUM_MANA_REQUIRED = ConvertAbilityRealLevelField('Rpb4')
ABILITY_RLF_REPAIR_COST_RATIO = ConvertAbilityRealLevelField('Rep1')
ABILITY_RLF_REPAIR_TIME_RATIO = ConvertAbilityRealLevelField('Rep2')
ABILITY_RLF_POWERBUILD_COST = ConvertAbilityRealLevelField('Rep3')
ABILITY_RLF_POWERBUILD_RATE = ConvertAbilityRealLevelField('Rep4')
ABILITY_RLF_NAVAL_RANGE_BONUS = ConvertAbilityRealLevelField('Rep5')
ABILITY_RLF_DAMAGE_INCREASE_PERCENT_ROA1 = ConvertAbilityRealLevelField('Roa1')
ABILITY_RLF_LIFE_REGENERATION_RATE = ConvertAbilityRealLevelField('Roa3')
ABILITY_RLF_MANA_REGEN = ConvertAbilityRealLevelField('Roa4')
ABILITY_RLF_DAMAGE_INCREASE = ConvertAbilityRealLevelField('Nbr1')
ABILITY_RLF_SALVAGE_COST_RATIO = ConvertAbilityRealLevelField('Sal1')
ABILITY_RLF_IN_FLIGHT_SIGHT_RADIUS = ConvertAbilityRealLevelField('Esn1')
ABILITY_RLF_HOVERING_SIGHT_RADIUS = ConvertAbilityRealLevelField('Esn2')
ABILITY_RLF_HOVERING_HEIGHT = ConvertAbilityRealLevelField('Esn3')
ABILITY_RLF_DURATION_OF_OWLS = ConvertAbilityRealLevelField('Esn5')
ABILITY_RLF_FADE_DURATION = ConvertAbilityRealLevelField('Shm1')
ABILITY_RLF_DAY_NIGHT_DURATION = ConvertAbilityRealLevelField('Shm2')
ABILITY_RLF_ACTION_DURATION = ConvertAbilityRealLevelField('Shm3')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SLO1 = ConvertAbilityRealLevelField('Slo1')
ABILITY_RLF_ATTACK_SPEED_FACTOR_SLO2 = ConvertAbilityRealLevelField('Slo2')
ABILITY_RLF_DAMAGE_PER_SECOND_SPO1 = ConvertAbilityRealLevelField('Spo1')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SPO2 = ConvertAbilityRealLevelField('Spo2')
ABILITY_RLF_ATTACK_SPEED_FACTOR_SPO3 = ConvertAbilityRealLevelField('Spo3')
ABILITY_RLF_ACTIVATION_DELAY_STA1 = ConvertAbilityRealLevelField('Sta1')
ABILITY_RLF_DETECTION_RADIUS_STA2 = ConvertAbilityRealLevelField('Sta2')
ABILITY_RLF_DETONATION_RADIUS = ConvertAbilityRealLevelField('Sta3')
ABILITY_RLF_STUN_DURATION_STA4 = ConvertAbilityRealLevelField('Sta4')
ABILITY_RLF_ATTACK_SPEED_BONUS_PERCENT = ConvertAbilityRealLevelField('Uhf1')
ABILITY_RLF_DAMAGE_PER_SECOND_UHF2 = ConvertAbilityRealLevelField('Uhf2')
ABILITY_RLF_LUMBER_PER_INTERVAL = ConvertAbilityRealLevelField('Wha1')
ABILITY_RLF_ART_ATTACHMENT_HEIGHT = ConvertAbilityRealLevelField('Wha3')
ABILITY_RLF_TELEPORT_AREA_WIDTH = ConvertAbilityRealLevelField('Wrp1')
ABILITY_RLF_TELEPORT_AREA_HEIGHT = ConvertAbilityRealLevelField('Wrp2')
ABILITY_RLF_LIFE_STOLEN_PER_ATTACK = ConvertAbilityRealLevelField('Ivam')
ABILITY_RLF_DAMAGE_BONUS_IDAM = ConvertAbilityRealLevelField('Idam')
ABILITY_RLF_CHANCE_TO_HIT_UNITS_PERCENT = ConvertAbilityRealLevelField('Iob2')
ABILITY_RLF_CHANCE_TO_HIT_HEROS_PERCENT = ConvertAbilityRealLevelField('Iob3')
ABILITY_RLF_CHANCE_TO_HIT_SUMMONS_PERCENT = ConvertAbilityRealLevelField('Iob4')
ABILITY_RLF_DELAY_FOR_TARGET_EFFECT = ConvertAbilityRealLevelField('Idel')
ABILITY_RLF_DAMAGE_DEALT_PERCENT_OF_NORMAL = ConvertAbilityRealLevelField('Iild')
ABILITY_RLF_DAMAGE_RECEIVED_MULTIPLIER = ConvertAbilityRealLevelField('Iilw')
ABILITY_RLF_MANA_REGENERATION_BONUS_AS_FRACTION_OF_NORMAL = ConvertAbilityRealLevelField('Imrp')
ABILITY_RLF_MOVEMENT_SPEED_INCREASE_ISPI = ConvertAbilityRealLevelField('Ispi')
ABILITY_RLF_DAMAGE_PER_SECOND_IDPS = ConvertAbilityRealLevelField('Idps')
ABILITY_RLF_ATTACK_DAMAGE_INCREASE_CAC1 = ConvertAbilityRealLevelField('Cac1')
ABILITY_RLF_DAMAGE_PER_SECOND_COR1 = ConvertAbilityRealLevelField('Cor1')
ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1 = ConvertAbilityRealLevelField('Isx1')
ABILITY_RLF_DAMAGE_WRS1 = ConvertAbilityRealLevelField('Wrs1')
ABILITY_RLF_TERRAIN_DEFORMATION_AMPLITUDE = ConvertAbilityRealLevelField('Wrs2')
ABILITY_RLF_DAMAGE_CTC1 = ConvertAbilityRealLevelField('Ctc1')
ABILITY_RLF_EXTRA_DAMAGE_TO_TARGET = ConvertAbilityRealLevelField('Ctc2')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_CTC3 = ConvertAbilityRealLevelField('Ctc3')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_CTC4 = ConvertAbilityRealLevelField('Ctc4')
ABILITY_RLF_DAMAGE_CTB1 = ConvertAbilityRealLevelField('Ctb1')
ABILITY_RLF_CASTING_DELAY_SECONDS = ConvertAbilityRealLevelField('Uds2')
ABILITY_RLF_MANA_LOSS_PER_UNIT_DTN1 = ConvertAbilityRealLevelField('Dtn1')
ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_DTN2 = ConvertAbilityRealLevelField('Dtn2')
ABILITY_RLF_TRANSITION_TIME_SECONDS = ConvertAbilityRealLevelField('Ivs1')
ABILITY_RLF_MANA_DRAINED_PER_SECOND_NMR1 = ConvertAbilityRealLevelField('Nmr1')
ABILITY_RLF_CHANCE_TO_REDUCE_DAMAGE_PERCENT = ConvertAbilityRealLevelField('Ssk1')
ABILITY_RLF_MINIMUM_DAMAGE = ConvertAbilityRealLevelField('Ssk2')
ABILITY_RLF_IGNORED_DAMAGE = ConvertAbilityRealLevelField('Ssk3')
ABILITY_RLF_FULL_DAMAGE_DEALT = ConvertAbilityRealLevelField('Hfs1')
ABILITY_RLF_FULL_DAMAGE_INTERVAL = ConvertAbilityRealLevelField('Hfs2')
ABILITY_RLF_HALF_DAMAGE_DEALT = ConvertAbilityRealLevelField('Hfs3')
ABILITY_RLF_HALF_DAMAGE_INTERVAL = ConvertAbilityRealLevelField('Hfs4')
ABILITY_RLF_BUILDING_REDUCTION_HFS5 = ConvertAbilityRealLevelField('Hfs5')
ABILITY_RLF_MAXIMUM_DAMAGE_HFS6 = ConvertAbilityRealLevelField('Hfs6')
ABILITY_RLF_MANA_PER_HIT_POINT = ConvertAbilityRealLevelField('Nms1')
ABILITY_RLF_DAMAGE_ABSORBED_PERCENT = ConvertAbilityRealLevelField('Nms2')
ABILITY_RLF_WAVE_DISTANCE = ConvertAbilityRealLevelField('Uim1')
ABILITY_RLF_WAVE_TIME_SECONDS = ConvertAbilityRealLevelField('Uim2')
ABILITY_RLF_DAMAGE_DEALT_UIM3 = ConvertAbilityRealLevelField('Uim3')
ABILITY_RLF_AIR_TIME_SECONDS_UIM4 = ConvertAbilityRealLevelField('Uim4')
ABILITY_RLF_UNIT_RELEASE_INTERVAL_SECONDS = ConvertAbilityRealLevelField('Uls2')
ABILITY_RLF_DAMAGE_RETURN_FACTOR = ConvertAbilityRealLevelField('Uls4')
ABILITY_RLF_DAMAGE_RETURN_THRESHOLD = ConvertAbilityRealLevelField('Uls5')
ABILITY_RLF_RETURNED_DAMAGE_FACTOR = ConvertAbilityRealLevelField('Uts1')
ABILITY_RLF_RECEIVED_DAMAGE_FACTOR = ConvertAbilityRealLevelField('Uts2')
ABILITY_RLF_DEFENSE_BONUS_UTS3 = ConvertAbilityRealLevelField('Uts3')
ABILITY_RLF_DAMAGE_BONUS_NBA1 = ConvertAbilityRealLevelField('Nba1')
ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NBA3 = ConvertAbilityRealLevelField('Nba3')
ABILITY_RLF_MANA_PER_SUMMONED_HITPOINT = ConvertAbilityRealLevelField('Cmg2')
ABILITY_RLF_CHARGE_FOR_CURRENT_LIFE = ConvertAbilityRealLevelField('Cmg3')
ABILITY_RLF_HIT_POINTS_DRAINED = ConvertAbilityRealLevelField('Ndr1')
ABILITY_RLF_MANA_POINTS_DRAINED = ConvertAbilityRealLevelField('Ndr2')
ABILITY_RLF_DRAIN_INTERVAL_SECONDS = ConvertAbilityRealLevelField('Ndr3')
ABILITY_RLF_LIFE_TRANSFERRED_PER_SECOND = ConvertAbilityRealLevelField('Ndr4')
ABILITY_RLF_MANA_TRANSFERRED_PER_SECOND = ConvertAbilityRealLevelField('Ndr5')
ABILITY_RLF_BONUS_LIFE_FACTOR = ConvertAbilityRealLevelField('Ndr6')
ABILITY_RLF_BONUS_LIFE_DECAY = ConvertAbilityRealLevelField('Ndr7')
ABILITY_RLF_BONUS_MANA_FACTOR = ConvertAbilityRealLevelField('Ndr8')
ABILITY_RLF_BONUS_MANA_DECAY = ConvertAbilityRealLevelField('Ndr9')
ABILITY_RLF_CHANCE_TO_MISS_PERCENT = ConvertAbilityRealLevelField('Nsi2')
ABILITY_RLF_MOVEMENT_SPEED_MODIFIER = ConvertAbilityRealLevelField('Nsi3')
ABILITY_RLF_ATTACK_SPEED_MODIFIER = ConvertAbilityRealLevelField('Nsi4')
ABILITY_RLF_DAMAGE_PER_SECOND_TDG1 = ConvertAbilityRealLevelField('Tdg1')
ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_TDG2 = ConvertAbilityRealLevelField('Tdg2')
ABILITY_RLF_MEDIUM_DAMAGE_PER_SECOND = ConvertAbilityRealLevelField('Tdg3')
ABILITY_RLF_SMALL_DAMAGE_RADIUS_TDG4 = ConvertAbilityRealLevelField('Tdg4')
ABILITY_RLF_SMALL_DAMAGE_PER_SECOND = ConvertAbilityRealLevelField('Tdg5')
ABILITY_RLF_AIR_TIME_SECONDS_TSP1 = ConvertAbilityRealLevelField('Tsp1')
ABILITY_RLF_MINIMUM_HIT_INTERVAL_SECONDS = ConvertAbilityRealLevelField('Tsp2')
ABILITY_RLF_DAMAGE_PER_SECOND_NBF5 = ConvertAbilityRealLevelField('Nbf5')
ABILITY_RLF_MAXIMUM_RANGE = ConvertAbilityRealLevelField('Ebl1')
ABILITY_RLF_MINIMUM_RANGE = ConvertAbilityRealLevelField('Ebl2')
ABILITY_RLF_DAMAGE_PER_TARGET_EFK1 = ConvertAbilityRealLevelField('Efk1')
ABILITY_RLF_MAXIMUM_TOTAL_DAMAGE = ConvertAbilityRealLevelField('Efk2')
ABILITY_RLF_MAXIMUM_SPEED_ADJUSTMENT = ConvertAbilityRealLevelField('Efk4')
ABILITY_RLF_DECAYING_DAMAGE = ConvertAbilityRealLevelField('Esh1')
ABILITY_RLF_MOVEMENT_SPEED_FACTOR_ESH2 = ConvertAbilityRealLevelField('Esh2')
ABILITY_RLF_ATTACK_SPEED_FACTOR_ESH3 = ConvertAbilityRealLevelField('Esh3')
ABILITY_RLF_DECAY_POWER = ConvertAbilityRealLevelField('Esh4')
ABILITY_RLF_INITIAL_DAMAGE_ESH5 = ConvertAbilityRealLevelField('Esh5')
ABILITY_RLF_MAXIMUM_LIFE_ABSORBED = ConvertAbilityRealLevelField('abs1')
ABILITY_RLF_MAXIMUM_MANA_ABSORBED = ConvertAbilityRealLevelField('abs2')
ABILITY_RLF_MOVEMENT_SPEED_INCREASE_BSK1 = ConvertAbilityRealLevelField('bsk1')
ABILITY_RLF_ATTACK_SPEED_INCREASE_BSK2 = ConvertAbilityRealLevelField('bsk2')
ABILITY_RLF_DAMAGE_TAKEN_INCREASE = ConvertAbilityRealLevelField('bsk3')
ABILITY_RLF_LIFE_PER_UNIT = ConvertAbilityRealLevelField('dvm1')
ABILITY_RLF_MANA_PER_UNIT = ConvertAbilityRealLevelField('dvm2')
ABILITY_RLF_LIFE_PER_BUFF = ConvertAbilityRealLevelField('dvm3')
ABILITY_RLF_MANA_PER_BUFF = ConvertAbilityRealLevelField('dvm4')
ABILITY_RLF_SUMMONED_UNIT_DAMAGE_DVM5 = ConvertAbilityRealLevelField('dvm5')
ABILITY_RLF_DAMAGE_BONUS_FAK1 = ConvertAbilityRealLevelField('fak1')
ABILITY_RLF_MEDIUM_DAMAGE_FACTOR_FAK2 = ConvertAbilityRealLevelField('fak2')
ABILITY_RLF_SMALL_DAMAGE_FACTOR_FAK3 = ConvertAbilityRealLevelField('fak3')
ABILITY_RLF_FULL_DAMAGE_RADIUS_FAK4 = ConvertAbilityRealLevelField('fak4')
ABILITY_RLF_HALF_DAMAGE_RADIUS_FAK5 = ConvertAbilityRealLevelField('fak5')
ABILITY_RLF_EXTRA_DAMAGE_PER_SECOND = ConvertAbilityRealLevelField('liq1')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_LIQ2 = ConvertAbilityRealLevelField('liq2')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_LIQ3 = ConvertAbilityRealLevelField('liq3')
ABILITY_RLF_MAGIC_DAMAGE_FACTOR = ConvertAbilityRealLevelField('mim1')
ABILITY_RLF_UNIT_DAMAGE_PER_MANA_POINT = ConvertAbilityRealLevelField('mfl1')
ABILITY_RLF_HERO_DAMAGE_PER_MANA_POINT = ConvertAbilityRealLevelField('mfl2')
ABILITY_RLF_UNIT_MAXIMUM_DAMAGE = ConvertAbilityRealLevelField('mfl3')
ABILITY_RLF_HERO_MAXIMUM_DAMAGE = ConvertAbilityRealLevelField('mfl4')
ABILITY_RLF_DAMAGE_COOLDOWN = ConvertAbilityRealLevelField('mfl5')
ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_SPL1 = ConvertAbilityRealLevelField('spl1')
ABILITY_RLF_LIFE_REGENERATED = ConvertAbilityRealLevelField('irl1')
ABILITY_RLF_MANA_REGENERATED = ConvertAbilityRealLevelField('irl2')
ABILITY_RLF_MANA_LOSS_PER_UNIT_IDC1 = ConvertAbilityRealLevelField('idc1')
ABILITY_RLF_SUMMONED_UNIT_DAMAGE_IDC2 = ConvertAbilityRealLevelField('idc2')
ABILITY_RLF_ACTIVATION_DELAY_IMO2 = ConvertAbilityRealLevelField('imo2')
ABILITY_RLF_LURE_INTERVAL_SECONDS = ConvertAbilityRealLevelField('imo3')
ABILITY_RLF_DAMAGE_BONUS_ISR1 = ConvertAbilityRealLevelField('isr1')
ABILITY_RLF_DAMAGE_REDUCTION_ISR2 = ConvertAbilityRealLevelField('isr2')
ABILITY_RLF_DAMAGE_BONUS_IPV1 = ConvertAbilityRealLevelField('ipv1')
ABILITY_RLF_LIFE_STEAL_AMOUNT = ConvertAbilityRealLevelField('ipv2')
ABILITY_RLF_LIFE_RESTORED_FACTOR = ConvertAbilityRealLevelField('ast1')
ABILITY_RLF_MANA_RESTORED_FACTOR = ConvertAbilityRealLevelField('ast2')
ABILITY_RLF_ATTACH_DELAY = ConvertAbilityRealLevelField('gra1')
ABILITY_RLF_REMOVE_DELAY = ConvertAbilityRealLevelField('gra2')
ABILITY_RLF_HERO_REGENERATION_DELAY = ConvertAbilityRealLevelField('Nsa2')
ABILITY_RLF_UNIT_REGENERATION_DELAY = ConvertAbilityRealLevelField('Nsa3')
ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_NSA4 = ConvertAbilityRealLevelField('Nsa4')
ABILITY_RLF_HIT_POINTS_PER_SECOND_NSA5 = ConvertAbilityRealLevelField('Nsa5')
ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_IXS1 = ConvertAbilityRealLevelField('Ixs1')
ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_IXS2 = ConvertAbilityRealLevelField('Ixs2')
ABILITY_RLF_SUMMONED_UNIT_DURATION = ConvertAbilityRealLevelField('Npa6')
ABILITY_RLF_SHIELD_COOLDOWN_TIME = ConvertAbilityRealLevelField('Nse1')
ABILITY_RLF_DAMAGE_PER_SECOND_NDO1 = ConvertAbilityRealLevelField('Ndo1')
ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NDO3 = ConvertAbilityRealLevelField('Ndo3')
ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_FLK1 = ConvertAbilityRealLevelField('flk1')
ABILITY_RLF_SMALL_DAMAGE_RADIUS_FLK2 = ConvertAbilityRealLevelField('flk2')
ABILITY_RLF_FULL_DAMAGE_AMOUNT_FLK3 = ConvertAbilityRealLevelField('flk3')
ABILITY_RLF_MEDIUM_DAMAGE_AMOUNT = ConvertAbilityRealLevelField('flk4')
ABILITY_RLF_SMALL_DAMAGE_AMOUNT = ConvertAbilityRealLevelField('flk5')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HBN1 = ConvertAbilityRealLevelField('Hbn1')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HBN2 = ConvertAbilityRealLevelField('Hbn2')
ABILITY_RLF_MAX_MANA_DRAINED_UNITS = ConvertAbilityRealLevelField('fbk1')
ABILITY_RLF_DAMAGE_RATIO_UNITS_PERCENT = ConvertAbilityRealLevelField('fbk2')
ABILITY_RLF_MAX_MANA_DRAINED_HEROS = ConvertAbilityRealLevelField('fbk3')
ABILITY_RLF_DAMAGE_RATIO_HEROS_PERCENT = ConvertAbilityRealLevelField('fbk4')
ABILITY_RLF_SUMMONED_DAMAGE = ConvertAbilityRealLevelField('fbk5')
ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_NCA1 = ConvertAbilityRealLevelField('nca1')
ABILITY_RLF_INITIAL_DAMAGE_PXF1 = ConvertAbilityRealLevelField('pxf1')
ABILITY_RLF_DAMAGE_PER_SECOND_PXF2 = ConvertAbilityRealLevelField('pxf2')
ABILITY_RLF_DAMAGE_PER_SECOND_MLS1 = ConvertAbilityRealLevelField('mls1')
ABILITY_RLF_BEAST_COLLISION_RADIUS = ConvertAbilityRealLevelField('Nst2')
ABILITY_RLF_DAMAGE_AMOUNT_NST3 = ConvertAbilityRealLevelField('Nst3')
ABILITY_RLF_DAMAGE_RADIUS = ConvertAbilityRealLevelField('Nst4')
ABILITY_RLF_DAMAGE_DELAY = ConvertAbilityRealLevelField('Nst5')
ABILITY_RLF_FOLLOW_THROUGH_TIME = ConvertAbilityRealLevelField('Ncl1')
ABILITY_RLF_ART_DURATION = ConvertAbilityRealLevelField('Ncl4')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NAB1 = ConvertAbilityRealLevelField('Nab1')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NAB2 = ConvertAbilityRealLevelField('Nab2')
ABILITY_RLF_PRIMARY_DAMAGE = ConvertAbilityRealLevelField('Nab4')
ABILITY_RLF_SECONDARY_DAMAGE = ConvertAbilityRealLevelField('Nab5')
ABILITY_RLF_DAMAGE_INTERVAL_NAB6 = ConvertAbilityRealLevelField('Nab6')
ABILITY_RLF_GOLD_COST_FACTOR = ConvertAbilityRealLevelField('Ntm1')
ABILITY_RLF_LUMBER_COST_FACTOR = ConvertAbilityRealLevelField('Ntm2')
ABILITY_RLF_MOVE_SPEED_BONUS_NEG1 = ConvertAbilityRealLevelField('Neg1')
ABILITY_RLF_DAMAGE_BONUS_NEG2 = ConvertAbilityRealLevelField('Neg2')
ABILITY_RLF_DAMAGE_AMOUNT_NCS1 = ConvertAbilityRealLevelField('Ncs1')
ABILITY_RLF_DAMAGE_INTERVAL_NCS2 = ConvertAbilityRealLevelField('Ncs2')
ABILITY_RLF_MAX_DAMAGE_NCS4 = ConvertAbilityRealLevelField('Ncs4')
ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NCS5 = ConvertAbilityRealLevelField('Ncs5')
ABILITY_RLF_EFFECT_DURATION = ConvertAbilityRealLevelField('Ncs6')
ABILITY_RLF_SPAWN_INTERVAL_NSY1 = ConvertAbilityRealLevelField('Nsy1')
ABILITY_RLF_SPAWN_UNIT_DURATION = ConvertAbilityRealLevelField('Nsy3')
ABILITY_RLF_SPAWN_UNIT_OFFSET = ConvertAbilityRealLevelField('Nsy4')
ABILITY_RLF_LEASH_RANGE_NSY5 = ConvertAbilityRealLevelField('Nsy5')
ABILITY_RLF_SPAWN_INTERVAL_NFY1 = ConvertAbilityRealLevelField('Nfy1')
ABILITY_RLF_LEASH_RANGE_NFY2 = ConvertAbilityRealLevelField('Nfy2')
ABILITY_RLF_CHANCE_TO_DEMOLISH = ConvertAbilityRealLevelField('Nde1')
ABILITY_RLF_DAMAGE_MULTIPLIER_BUILDINGS = ConvertAbilityRealLevelField('Nde2')
ABILITY_RLF_DAMAGE_MULTIPLIER_UNITS = ConvertAbilityRealLevelField('Nde3')
ABILITY_RLF_DAMAGE_MULTIPLIER_HEROES = ConvertAbilityRealLevelField('Nde4')
ABILITY_RLF_BONUS_DAMAGE_MULTIPLIER = ConvertAbilityRealLevelField('Nic1')
ABILITY_RLF_DEATH_DAMAGE_FULL_AMOUNT = ConvertAbilityRealLevelField('Nic2')
ABILITY_RLF_DEATH_DAMAGE_FULL_AREA = ConvertAbilityRealLevelField('Nic3')
ABILITY_RLF_DEATH_DAMAGE_HALF_AMOUNT = ConvertAbilityRealLevelField('Nic4')
ABILITY_RLF_DEATH_DAMAGE_HALF_AREA = ConvertAbilityRealLevelField('Nic5')
ABILITY_RLF_DEATH_DAMAGE_DELAY = ConvertAbilityRealLevelField('Nic6')
ABILITY_RLF_DAMAGE_AMOUNT_NSO1 = ConvertAbilityRealLevelField('Nso1')
ABILITY_RLF_DAMAGE_PERIOD = ConvertAbilityRealLevelField('Nso2')
ABILITY_RLF_DAMAGE_PENALTY = ConvertAbilityRealLevelField('Nso3')
ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NSO4 = ConvertAbilityRealLevelField('Nso4')
ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NSO5 = ConvertAbilityRealLevelField('Nso5')
ABILITY_RLF_SPLIT_DELAY = ConvertAbilityRealLevelField('Nlm2')
ABILITY_RLF_MAX_HITPOINT_FACTOR = ConvertAbilityRealLevelField('Nlm4')
ABILITY_RLF_LIFE_DURATION_SPLIT_BONUS = ConvertAbilityRealLevelField('Nlm5')
ABILITY_RLF_WAVE_INTERVAL = ConvertAbilityRealLevelField('Nvc3')
ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NVC4 = ConvertAbilityRealLevelField('Nvc4')
ABILITY_RLF_FULL_DAMAGE_AMOUNT_NVC5 = ConvertAbilityRealLevelField('Nvc5')
ABILITY_RLF_HALF_DAMAGE_FACTOR = ConvertAbilityRealLevelField('Nvc6')
ABILITY_RLF_INTERVAL_BETWEEN_PULSES = ConvertAbilityRealLevelField('Tau5')
ABILITY_BLF_PERCENT_BONUS_HAB2 = ConvertAbilityBooleanLevelField('Hab2')
ABILITY_BLF_USE_TELEPORT_CLUSTERING_HMT3 = ConvertAbilityBooleanLevelField('Hmt3')
ABILITY_BLF_NEVER_MISS_OCR5 = ConvertAbilityBooleanLevelField('Ocr5')
ABILITY_BLF_EXCLUDE_ITEM_DAMAGE = ConvertAbilityBooleanLevelField('Ocr6')
ABILITY_BLF_BACKSTAB_DAMAGE = ConvertAbilityBooleanLevelField('Owk4')
ABILITY_BLF_INHERIT_UPGRADES_UAN3 = ConvertAbilityBooleanLevelField('Uan3')
ABILITY_BLF_MANA_CONVERSION_AS_PERCENT = ConvertAbilityBooleanLevelField('Udp3')
ABILITY_BLF_LIFE_CONVERSION_AS_PERCENT = ConvertAbilityBooleanLevelField('Udp4')
ABILITY_BLF_LEAVE_TARGET_ALIVE = ConvertAbilityBooleanLevelField('Udp5')
ABILITY_BLF_PERCENT_BONUS_UAU3 = ConvertAbilityBooleanLevelField('Uau3')
ABILITY_BLF_DAMAGE_IS_PERCENT_RECEIVED = ConvertAbilityBooleanLevelField('Eah2')
ABILITY_BLF_MELEE_BONUS = ConvertAbilityBooleanLevelField('Ear2')
ABILITY_BLF_RANGED_BONUS = ConvertAbilityBooleanLevelField('Ear3')
ABILITY_BLF_FLAT_BONUS = ConvertAbilityBooleanLevelField('Ear4')
ABILITY_BLF_NEVER_MISS_HBH5 = ConvertAbilityBooleanLevelField('Hbh5')
ABILITY_BLF_PERCENT_BONUS_HAD2 = ConvertAbilityBooleanLevelField('Had2')
ABILITY_BLF_CAN_DEACTIVATE = ConvertAbilityBooleanLevelField('Hds1')
ABILITY_BLF_RAISED_UNITS_ARE_INVULNERABLE = ConvertAbilityBooleanLevelField('Hre2')
ABILITY_BLF_PERCENTAGE_OAR2 = ConvertAbilityBooleanLevelField('Oar2')
ABILITY_BLF_SUMMON_BUSY_UNITS = ConvertAbilityBooleanLevelField('Btl2')
ABILITY_BLF_CREATES_BLIGHT = ConvertAbilityBooleanLevelField('Bli2')
ABILITY_BLF_EXPLODES_ON_DEATH = ConvertAbilityBooleanLevelField('Sds6')
ABILITY_BLF_ALWAYS_AUTOCAST_FAE2 = ConvertAbilityBooleanLevelField('Fae2')
ABILITY_BLF_REGENERATE_ONLY_AT_NIGHT = ConvertAbilityBooleanLevelField('Mbt5')
ABILITY_BLF_SHOW_SELECT_UNIT_BUTTON = ConvertAbilityBooleanLevelField('Neu3')
ABILITY_BLF_SHOW_UNIT_INDICATOR = ConvertAbilityBooleanLevelField('Neu4')
ABILITY_BLF_CHARGE_OWNING_PLAYER = ConvertAbilityBooleanLevelField('Ans6')
ABILITY_BLF_PERCENTAGE_ARM2 = ConvertAbilityBooleanLevelField('Arm2')
ABILITY_BLF_TARGET_IS_INVULNERABLE = ConvertAbilityBooleanLevelField('Pos3')
ABILITY_BLF_TARGET_IS_MAGIC_IMMUNE = ConvertAbilityBooleanLevelField('Pos4')
ABILITY_BLF_KILL_ON_CASTER_DEATH = ConvertAbilityBooleanLevelField('Ucb6')
ABILITY_BLF_NO_TARGET_REQUIRED_REJ4 = ConvertAbilityBooleanLevelField('Rej4')
ABILITY_BLF_ACCEPTS_GOLD = ConvertAbilityBooleanLevelField('Rtn1')
ABILITY_BLF_ACCEPTS_LUMBER = ConvertAbilityBooleanLevelField('Rtn2')
ABILITY_BLF_PREFER_HOSTILES_ROA5 = ConvertAbilityBooleanLevelField('Roa5')
ABILITY_BLF_PREFER_FRIENDLIES_ROA6 = ConvertAbilityBooleanLevelField('Roa6')
ABILITY_BLF_ROOTED_TURNING = ConvertAbilityBooleanLevelField('Roo3')
ABILITY_BLF_ALWAYS_AUTOCAST_SLO3 = ConvertAbilityBooleanLevelField('Slo3')
ABILITY_BLF_HIDE_BUTTON = ConvertAbilityBooleanLevelField('Ihid')
ABILITY_BLF_USE_TELEPORT_CLUSTERING_ITP2 = ConvertAbilityBooleanLevelField('Itp2')
ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS = ConvertAbilityBooleanLevelField('Eth1')
ABILITY_BLF_DOES_NOT_BLOCK_BUILDINGS = ConvertAbilityBooleanLevelField('Eth2')
ABILITY_BLF_AUTO_ACQUIRE_ATTACK_TARGETS = ConvertAbilityBooleanLevelField('Gho1')
ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS_GHO2 = ConvertAbilityBooleanLevelField('Gho2')
ABILITY_BLF_DO_NOT_BLOCK_BUILDINGS = ConvertAbilityBooleanLevelField('Gho3')
ABILITY_BLF_INCLUDE_RANGED_DAMAGE = ConvertAbilityBooleanLevelField('Ssk4')
ABILITY_BLF_INCLUDE_MELEE_DAMAGE = ConvertAbilityBooleanLevelField('Ssk5')
ABILITY_BLF_MOVE_TO_PARTNER = ConvertAbilityBooleanLevelField('coa2')
ABILITY_BLF_CAN_BE_DISPELLED = ConvertAbilityBooleanLevelField('cyc1')
ABILITY_BLF_IGNORE_FRIENDLY_BUFFS = ConvertAbilityBooleanLevelField('dvm6')
ABILITY_BLF_DROP_ITEMS_ON_DEATH = ConvertAbilityBooleanLevelField('inv2')
ABILITY_BLF_CAN_USE_ITEMS = ConvertAbilityBooleanLevelField('inv3')
ABILITY_BLF_CAN_GET_ITEMS = ConvertAbilityBooleanLevelField('inv4')
ABILITY_BLF_CAN_DROP_ITEMS = ConvertAbilityBooleanLevelField('inv5')
ABILITY_BLF_REPAIRS_ALLOWED = ConvertAbilityBooleanLevelField('liq4')
ABILITY_BLF_CASTER_ONLY_SPLASH = ConvertAbilityBooleanLevelField('mfl6')
ABILITY_BLF_NO_TARGET_REQUIRED_IRL4 = ConvertAbilityBooleanLevelField('irl4')
ABILITY_BLF_DISPEL_ON_ATTACK = ConvertAbilityBooleanLevelField('irl5')
ABILITY_BLF_AMOUNT_IS_RAW_VALUE = ConvertAbilityBooleanLevelField('ipv3')
ABILITY_BLF_SHARED_SPELL_COOLDOWN = ConvertAbilityBooleanLevelField('spb2')
ABILITY_BLF_SLEEP_ONCE = ConvertAbilityBooleanLevelField('sla1')
ABILITY_BLF_ALLOW_ON_ANY_PLAYER_SLOT = ConvertAbilityBooleanLevelField('sla2')
ABILITY_BLF_DISABLE_OTHER_ABILITIES = ConvertAbilityBooleanLevelField('Ncl5')
ABILITY_BLF_ALLOW_BOUNTY = ConvertAbilityBooleanLevelField('Ntm4')
ABILITY_SLF_ICON_NORMAL = ConvertAbilityStringLevelField('aart')
ABILITY_SLF_CASTER = ConvertAbilityStringLevelField('acat')
ABILITY_SLF_TARGET = ConvertAbilityStringLevelField('atat')
ABILITY_SLF_SPECIAL = ConvertAbilityStringLevelField('asat')
ABILITY_SLF_EFFECT = ConvertAbilityStringLevelField('aeat')
ABILITY_SLF_AREA_EFFECT = ConvertAbilityStringLevelField('aaea')
ABILITY_SLF_LIGHTNING_EFFECTS = ConvertAbilityStringLevelField('alig')
ABILITY_SLF_MISSILE_ART = ConvertAbilityStringLevelField('amat')
ABILITY_SLF_TOOLTIP_LEARN = ConvertAbilityStringLevelField('aret')
ABILITY_SLF_TOOLTIP_LEARN_EXTENDED = ConvertAbilityStringLevelField('arut')
ABILITY_SLF_TOOLTIP_NORMAL = ConvertAbilityStringLevelField('atp1')
ABILITY_SLF_TOOLTIP_TURN_OFF = ConvertAbilityStringLevelField('aut1')
ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED = ConvertAbilityStringLevelField('aub1')
ABILITY_SLF_TOOLTIP_TURN_OFF_EXTENDED = ConvertAbilityStringLevelField('auu1')
ABILITY_SLF_NORMAL_FORM_UNIT_EME1 = ConvertAbilityStringLevelField('Eme1')
ABILITY_SLF_SPAWNED_UNITS = ConvertAbilityStringLevelField('Ndp1')
ABILITY_SLF_ABILITY_FOR_UNIT_CREATION = ConvertAbilityStringLevelField('Nrc1')
ABILITY_SLF_NORMAL_FORM_UNIT_MIL1 = ConvertAbilityStringLevelField('Mil1')
ABILITY_SLF_ALTERNATE_FORM_UNIT_MIL2 = ConvertAbilityStringLevelField('Mil2')
ABILITY_SLF_BASE_ORDER_ID_ANS5 = ConvertAbilityStringLevelField('Ans5')
ABILITY_SLF_MORPH_UNITS_GROUND = ConvertAbilityStringLevelField('Ply2')
ABILITY_SLF_MORPH_UNITS_AIR = ConvertAbilityStringLevelField('Ply3')
ABILITY_SLF_MORPH_UNITS_AMPHIBIOUS = ConvertAbilityStringLevelField('Ply4')
ABILITY_SLF_MORPH_UNITS_WATER = ConvertAbilityStringLevelField('Ply5')
ABILITY_SLF_UNIT_TYPE_ONE = ConvertAbilityStringLevelField('Rai3')
ABILITY_SLF_UNIT_TYPE_TWO = ConvertAbilityStringLevelField('Rai4')
ABILITY_SLF_UNIT_TYPE_SOD2 = ConvertAbilityStringLevelField('Sod2')
ABILITY_SLF_SUMMON_1_UNIT_TYPE = ConvertAbilityStringLevelField('Ist1')
ABILITY_SLF_SUMMON_2_UNIT_TYPE = ConvertAbilityStringLevelField('Ist2')
ABILITY_SLF_RACE_TO_CONVERT = ConvertAbilityStringLevelField('Ndc1')
ABILITY_SLF_PARTNER_UNIT_TYPE = ConvertAbilityStringLevelField('coa1')
ABILITY_SLF_PARTNER_UNIT_TYPE_ONE = ConvertAbilityStringLevelField('dcp1')
ABILITY_SLF_PARTNER_UNIT_TYPE_TWO = ConvertAbilityStringLevelField('dcp2')
ABILITY_SLF_REQUIRED_UNIT_TYPE = ConvertAbilityStringLevelField('tpi1')
ABILITY_SLF_CONVERTED_UNIT_TYPE = ConvertAbilityStringLevelField('tpi2')
ABILITY_SLF_SPELL_LIST = ConvertAbilityStringLevelField('spb1')
ABILITY_SLF_BASE_ORDER_ID_SPB5 = ConvertAbilityStringLevelField('spb5')
ABILITY_SLF_BASE_ORDER_ID_NCL6 = ConvertAbilityStringLevelField('Ncl6')
ABILITY_SLF_ABILITY_UPGRADE_1 = ConvertAbilityStringLevelField('Neg3')
ABILITY_SLF_ABILITY_UPGRADE_2 = ConvertAbilityStringLevelField('Neg4')
ABILITY_SLF_ABILITY_UPGRADE_3 = ConvertAbilityStringLevelField('Neg5')
ABILITY_SLF_ABILITY_UPGRADE_4 = ConvertAbilityStringLevelField('Neg6')
ABILITY_SLF_SPAWN_UNIT_ID_NSY2 = ConvertAbilityStringLevelField('Nsy2')
ITEM_IF_LEVEL = ConvertItemIntegerField('ilev')
ITEM_IF_NUMBER_OF_CHARGES = ConvertItemIntegerField('iuse')
ITEM_IF_COOLDOWN_GROUP = ConvertItemIntegerField('icid')
ITEM_IF_MAX_HIT_POINTS = ConvertItemIntegerField('ihtp')
ITEM_IF_HIT_POINTS = ConvertItemIntegerField('ihpc')
ITEM_IF_PRIORITY = ConvertItemIntegerField('ipri')
ITEM_IF_ARMOR_TYPE = ConvertItemIntegerField('iarm')
ITEM_IF_TINTING_COLOR_RED = ConvertItemIntegerField('iclr')
ITEM_IF_TINTING_COLOR_GREEN = ConvertItemIntegerField('iclg')
ITEM_IF_TINTING_COLOR_BLUE = ConvertItemIntegerField('iclb')
ITEM_IF_TINTING_COLOR_ALPHA = ConvertItemIntegerField('ical')
ITEM_RF_SCALING_VALUE = ConvertItemRealField('isca')
ITEM_BF_DROPPED_WHEN_CARRIER_DIES = ConvertItemBooleanField('idrp')
ITEM_BF_CAN_BE_DROPPED = ConvertItemBooleanField('idro')
ITEM_BF_PERISHABLE = ConvertItemBooleanField('iper')
ITEM_BF_INCLUDE_AS_RANDOM_CHOICE = ConvertItemBooleanField('iprn')
ITEM_BF_USE_AUTOMATICALLY_WHEN_ACQUIRED = ConvertItemBooleanField('ipow')
ITEM_BF_CAN_BE_SOLD_TO_MERCHANTS = ConvertItemBooleanField('ipaw')
ITEM_BF_ACTIVELY_USED = ConvertItemBooleanField('iusa')
ITEM_SF_MODEL_USED = ConvertItemStringField('ifil')
UNIT_IF_DEFENSE_TYPE = ConvertUnitIntegerField('udty')
UNIT_IF_ARMOR_TYPE = ConvertUnitIntegerField('uarm')
UNIT_IF_LOOPING_FADE_IN_RATE = ConvertUnitIntegerField('ulfi')
UNIT_IF_LOOPING_FADE_OUT_RATE = ConvertUnitIntegerField('ulfo')
UNIT_IF_AGILITY = ConvertUnitIntegerField('uagc')
UNIT_IF_INTELLIGENCE = ConvertUnitIntegerField('uinc')
UNIT_IF_STRENGTH = ConvertUnitIntegerField('ustc')
UNIT_IF_AGILITY_PERMANENT = ConvertUnitIntegerField('uagm')
UNIT_IF_INTELLIGENCE_PERMANENT = ConvertUnitIntegerField('uinm')
UNIT_IF_STRENGTH_PERMANENT = ConvertUnitIntegerField('ustm')
UNIT_IF_AGILITY_WITH_BONUS = ConvertUnitIntegerField('uagb')
UNIT_IF_INTELLIGENCE_WITH_BONUS = ConvertUnitIntegerField('uinb')
UNIT_IF_STRENGTH_WITH_BONUS = ConvertUnitIntegerField('ustb')
UNIT_IF_GOLD_BOUNTY_AWARDED_NUMBER_OF_DICE = ConvertUnitIntegerField('ubdi')
UNIT_IF_GOLD_BOUNTY_AWARDED_BASE = ConvertUnitIntegerField('ubba')
UNIT_IF_GOLD_BOUNTY_AWARDED_SIDES_PER_DIE = ConvertUnitIntegerField('ubsi')
UNIT_IF_LUMBER_BOUNTY_AWARDED_NUMBER_OF_DICE = ConvertUnitIntegerField('ulbd')
UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE = ConvertUnitIntegerField('ulba')
UNIT_IF_LUMBER_BOUNTY_AWARDED_SIDES_PER_DIE = ConvertUnitIntegerField('ulbs')
UNIT_IF_LEVEL = ConvertUnitIntegerField('ulev')
UNIT_IF_FORMATION_RANK = ConvertUnitIntegerField('ufor')
UNIT_IF_ORIENTATION_INTERPOLATION = ConvertUnitIntegerField('uori')
UNIT_IF_ELEVATION_SAMPLE_POINTS = ConvertUnitIntegerField('uept')
UNIT_IF_TINTING_COLOR_RED = ConvertUnitIntegerField('uclr')
UNIT_IF_TINTING_COLOR_GREEN = ConvertUnitIntegerField('uclg')
UNIT_IF_TINTING_COLOR_BLUE = ConvertUnitIntegerField('uclb')
UNIT_IF_TINTING_COLOR_ALPHA = ConvertUnitIntegerField('ucal')
UNIT_IF_MOVE_TYPE = ConvertUnitIntegerField('umvt')
UNIT_IF_TARGETED_AS = ConvertUnitIntegerField('utar')
UNIT_IF_UNIT_CLASSIFICATION = ConvertUnitIntegerField('utyp')
UNIT_IF_HIT_POINTS_REGENERATION_TYPE = ConvertUnitIntegerField('uhrt')
UNIT_IF_PLACEMENT_PREVENTED_BY = ConvertUnitIntegerField('upar')
UNIT_IF_PRIMARY_ATTRIBUTE = ConvertUnitIntegerField('upra')
UNIT_RF_STRENGTH_PER_LEVEL = ConvertUnitRealField('ustp')
UNIT_RF_AGILITY_PER_LEVEL = ConvertUnitRealField('uagp')
UNIT_RF_INTELLIGENCE_PER_LEVEL = ConvertUnitRealField('uinp')
UNIT_RF_HIT_POINTS_REGENERATION_RATE = ConvertUnitRealField('uhpr')
UNIT_RF_MANA_REGENERATION = ConvertUnitRealField('umpr')
UNIT_RF_DEATH_TIME = ConvertUnitRealField('udtm')
UNIT_RF_FLY_HEIGHT = ConvertUnitRealField('ufyh')
UNIT_RF_TURN_RATE = ConvertUnitRealField('umvr')
UNIT_RF_ELEVATION_SAMPLE_RADIUS = ConvertUnitRealField('uerd')
UNIT_RF_FOG_OF_WAR_SAMPLE_RADIUS = ConvertUnitRealField('ufrd')
UNIT_RF_MAXIMUM_PITCH_ANGLE_DEGREES = ConvertUnitRealField('umxp')
UNIT_RF_MAXIMUM_ROLL_ANGLE_DEGREES = ConvertUnitRealField('umxr')
UNIT_RF_SCALING_VALUE = ConvertUnitRealField('usca')
UNIT_RF_ANIMATION_RUN_SPEED = ConvertUnitRealField('urun')
UNIT_RF_SELECTION_SCALE = ConvertUnitRealField('ussc')
UNIT_RF_SELECTION_CIRCLE_HEIGHT = ConvertUnitRealField('uslz')
UNIT_RF_SHADOW_IMAGE_HEIGHT = ConvertUnitRealField('ushh')
UNIT_RF_SHADOW_IMAGE_WIDTH = ConvertUnitRealField('ushw')
UNIT_RF_SHADOW_IMAGE_CENTER_X = ConvertUnitRealField('ushx')
UNIT_RF_SHADOW_IMAGE_CENTER_Y = ConvertUnitRealField('ushy')
UNIT_RF_ANIMATION_WALK_SPEED = ConvertUnitRealField('uwal')
UNIT_RF_DEFENSE = ConvertUnitRealField('udfc')
UNIT_RF_SIGHT_RADIUS = ConvertUnitRealField('usir')
UNIT_RF_PRIORITY = ConvertUnitRealField('upri')
UNIT_RF_SPEED = ConvertUnitRealField('umvc')
UNIT_RF_OCCLUDER_HEIGHT = ConvertUnitRealField('uocc')
UNIT_RF_HP = ConvertUnitRealField('uhpc')
UNIT_RF_MANA = ConvertUnitRealField('umpc')
UNIT_RF_ACQUISITION_RANGE = ConvertUnitRealField('uacq')
UNIT_RF_CAST_BACK_SWING = ConvertUnitRealField('ucbs')
UNIT_RF_CAST_POINT = ConvertUnitRealField('ucpt')
UNIT_RF_MINIMUM_ATTACK_RANGE = ConvertUnitRealField('uamn')
UNIT_BF_RAISABLE = ConvertUnitBooleanField('urai')
UNIT_BF_DECAYABLE = ConvertUnitBooleanField('udec')
UNIT_BF_IS_A_BUILDING = ConvertUnitBooleanField('ubdg')
UNIT_BF_USE_EXTENDED_LINE_OF_SIGHT = ConvertUnitBooleanField('ulos')
UNIT_BF_NEUTRAL_BUILDING_SHOWS_MINIMAP_ICON = ConvertUnitBooleanField('unbm')
UNIT_BF_HERO_HIDE_HERO_INTERFACE_ICON = ConvertUnitBooleanField('uhhb')
UNIT_BF_HERO_HIDE_HERO_MINIMAP_DISPLAY = ConvertUnitBooleanField('uhhm')
UNIT_BF_HERO_HIDE_HERO_DEATH_MESSAGE = ConvertUnitBooleanField('uhhd')
UNIT_BF_HIDE_MINIMAP_DISPLAY = ConvertUnitBooleanField('uhom')
UNIT_BF_SCALE_PROJECTILES = ConvertUnitBooleanField('uscb')
UNIT_BF_SELECTION_CIRCLE_ON_WATER = ConvertUnitBooleanField('usew')
UNIT_BF_HAS_WATER_SHADOW = ConvertUnitBooleanField('ushr')
UNIT_SF_NAME = ConvertUnitStringField('unam')
UNIT_SF_PROPER_NAMES = ConvertUnitStringField('upro')
UNIT_SF_GROUND_TEXTURE = ConvertUnitStringField('uubs')
UNIT_SF_SHADOW_IMAGE_UNIT = ConvertUnitStringField('ushu')
UNIT_WEAPON_IF_ATTACK_DAMAGE_NUMBER_OF_DICE = ConvertUnitWeaponIntegerField('ua1d')
UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE = ConvertUnitWeaponIntegerField('ua1b')
UNIT_WEAPON_IF_ATTACK_DAMAGE_SIDES_PER_DIE = ConvertUnitWeaponIntegerField('ua1s')
UNIT_WEAPON_IF_ATTACK_MAXIMUM_NUMBER_OF_TARGETS = ConvertUnitWeaponIntegerField('utc1')
UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE = ConvertUnitWeaponIntegerField('ua1t')
UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND = ConvertUnitWeaponIntegerField('ucs1')
UNIT_WEAPON_IF_ATTACK_AREA_OF_EFFECT_TARGETS = ConvertUnitWeaponIntegerField('ua1p')
UNIT_WEAPON_IF_ATTACK_TARGETS_ALLOWED = ConvertUnitWeaponIntegerField('ua1g')
UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT = ConvertUnitWeaponRealField('ubs1')
UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT = ConvertUnitWeaponRealField('udp1')
UNIT_WEAPON_RF_ATTACK_BASE_COOLDOWN = ConvertUnitWeaponRealField('ua1c')
UNIT_WEAPON_RF_ATTACK_DAMAGE_LOSS_FACTOR = ConvertUnitWeaponRealField('udl1')
UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_MEDIUM = ConvertUnitWeaponRealField('uhd1')
UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_SMALL = ConvertUnitWeaponRealField('uqd1')
UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_DISTANCE = ConvertUnitWeaponRealField('usd1')
UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_RADIUS = ConvertUnitWeaponRealField('usr1')
UNIT_WEAPON_RF_ATTACK_PROJECTILE_SPEED = ConvertUnitWeaponRealField('ua1z')
UNIT_WEAPON_RF_ATTACK_PROJECTILE_ARC = ConvertUnitWeaponRealField('uma1')
UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_FULL_DAMAGE = ConvertUnitWeaponRealField('ua1f')
UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_MEDIUM_DAMAGE = ConvertUnitWeaponRealField('ua1h')
UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_SMALL_DAMAGE = ConvertUnitWeaponRealField('ua1q')
UNIT_WEAPON_RF_ATTACK_RANGE = ConvertUnitWeaponRealField('ua1r')
UNIT_WEAPON_BF_ATTACK_SHOW_UI = ConvertUnitWeaponBooleanField('uwu1')
UNIT_WEAPON_BF_ATTACKS_ENABLED = ConvertUnitWeaponBooleanField('uaen')
UNIT_WEAPON_BF_ATTACK_PROJECTILE_HOMING_ENABLED = ConvertUnitWeaponBooleanField('umh1')
UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART = ConvertUnitWeaponStringField('ua1m')
MOVE_TYPE_UNKNOWN = ConvertMoveType(0)
MOVE_TYPE_FOOT = ConvertMoveType(1)
MOVE_TYPE_FLY = ConvertMoveType(2)
MOVE_TYPE_HORSE = ConvertMoveType(4)
MOVE_TYPE_HOVER = ConvertMoveType(8)
MOVE_TYPE_FLOAT = ConvertMoveType(16)
MOVE_TYPE_AMPHIBIOUS = ConvertMoveType(32)
MOVE_TYPE_UNBUILDABLE = ConvertMoveType(64)
TARGET_FLAG_NONE = ConvertTargetFlag(1)
TARGET_FLAG_GROUND = ConvertTargetFlag(2)
TARGET_FLAG_AIR = ConvertTargetFlag(4)
TARGET_FLAG_STRUCTURE = ConvertTargetFlag(8)
TARGET_FLAG_WARD = ConvertTargetFlag(16)
TARGET_FLAG_ITEM = ConvertTargetFlag(32)
TARGET_FLAG_TREE = ConvertTargetFlag(64)
TARGET_FLAG_WALL = ConvertTargetFlag(128)
TARGET_FLAG_DEBRIS = ConvertTargetFlag(256)
TARGET_FLAG_DECORATION = ConvertTargetFlag(512)
TARGET_FLAG_BRIDGE = ConvertTargetFlag(1024)
DEFENSE_TYPE_LIGHT = ConvertDefenseType(0)
DEFENSE_TYPE_MEDIUM = ConvertDefenseType(1)
DEFENSE_TYPE_LARGE = ConvertDefenseType(2)
DEFENSE_TYPE_FORT = ConvertDefenseType(3)
DEFENSE_TYPE_NORMAL = ConvertDefenseType(4)
DEFENSE_TYPE_HERO = ConvertDefenseType(5)
DEFENSE_TYPE_DIVINE = ConvertDefenseType(6)
DEFENSE_TYPE_NONE = ConvertDefenseType(7)
HERO_ATTRIBUTE_STR = ConvertHeroAttribute(1)
HERO_ATTRIBUTE_INT = ConvertHeroAttribute(2)
HERO_ATTRIBUTE_AGI = ConvertHeroAttribute(3)
ARMOR_TYPE_WHOKNOWS = ConvertArmorType(0)
ARMOR_TYPE_FLESH = ConvertArmorType(1)
ARMOR_TYPE_METAL = ConvertArmorType(2)
ARMOR_TYPE_WOOD = ConvertArmorType(3)
ARMOR_TYPE_ETHREAL = ConvertArmorType(4)
ARMOR_TYPE_STONE = ConvertArmorType(5)
REGENERATION_TYPE_NONE = ConvertRegenType(0)
REGENERATION_TYPE_ALWAYS = ConvertRegenType(1)
REGENERATION_TYPE_BLIGHT = ConvertRegenType(2)
REGENERATION_TYPE_DAY = ConvertRegenType(3)
REGENERATION_TYPE_NIGHT = ConvertRegenType(4)
UNIT_CATEGORY_GIANT = ConvertUnitCategory(1)
UNIT_CATEGORY_UNDEAD = ConvertUnitCategory(2)
UNIT_CATEGORY_SUMMONED = ConvertUnitCategory(4)
UNIT_CATEGORY_MECHANICAL = ConvertUnitCategory(8)
UNIT_CATEGORY_PEON = ConvertUnitCategory(16)
UNIT_CATEGORY_SAPPER = ConvertUnitCategory(32)
UNIT_CATEGORY_TOWNHALL = ConvertUnitCategory(64)
UNIT_CATEGORY_ANCIENT = ConvertUnitCategory(128)
UNIT_CATEGORY_NEUTRAL = ConvertUnitCategory(256)
UNIT_CATEGORY_WARD = ConvertUnitCategory(512)
UNIT_CATEGORY_STANDON = ConvertUnitCategory(1024)
UNIT_CATEGORY_TAUREN = ConvertUnitCategory(2048)
PATHING_FLAG_UNWALKABLE = ConvertPathingFlag(2)
PATHING_FLAG_UNFLYABLE = ConvertPathingFlag(4)
PATHING_FLAG_UNBUILDABLE = ConvertPathingFlag(8)
PATHING_FLAG_UNPEONHARVEST = ConvertPathingFlag(16)
PATHING_FLAG_BLIGHTED = ConvertPathingFlag(32)
PATHING_FLAG_UNFLOATABLE = ConvertPathingFlag(64)
PATHING_FLAG_UNAMPHIBIOUS = ConvertPathingFlag(128)
PATHING_FLAG_UNITEMPLACABLE = ConvertPathingFlag(256)
